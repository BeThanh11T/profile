'use strict';

function _slicedToArray2(arr, i) {
    return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}

function _nonIterableRest2() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray2(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray2(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray2(o, minLen);
}

function _arrayLikeToArray2(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
}

function _iterableToArrayLimit2(arr, i) {
    var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
    if (null != _i) {
        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
        try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
                if (Object(_i) !== _i) return;
                _n = !1;
            } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
        } catch (err) {
            _d = !0, _e = err;
        } finally {
            try {
                if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return;
            } finally {
                if (_d) throw _e;
            }
        }
        return _arr;
    }
}

function _arrayWithHoles2(arr) {
    if (Array.isArray(arr)) return arr;
}

function _regeneratorRuntime() {
    "use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
    _regeneratorRuntime = function _regeneratorRuntime() {
        return exports;
    };
    var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty,
        defineProperty = Object.defineProperty || function (obj, key, desc) {
            obj[key] = desc.value;
        }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator",
        asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator",
        toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

    function define(obj, key, value) {
        return Object.defineProperty(obj, key, {
            value: value,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }), obj[key];
    }

    try {
        define({}, "");
    } catch (err) {
        define = function define(obj, key, value) {
            return obj[key] = value;
        };
    }

    function wrap(innerFn, outerFn, self, tryLocsList) {
        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,
            generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);
        return defineProperty(generator, "_invoke", {value: makeInvokeMethod(innerFn, self, context)}), generator;
    }

    function tryCatch(fn, obj, arg) {
        try {
            return {type: "normal", arg: fn.call(obj, arg)};
        } catch (err) {
            return {type: "throw", arg: err};
        }
    }

    exports.wrap = wrap;
    var ContinueSentinel = {};

    function Generator() {
    }

    function GeneratorFunction() {
    }

    function GeneratorFunctionPrototype() {
    }

    var IteratorPrototype = {};
    define(IteratorPrototype, iteratorSymbol, function () {
        return this;
    });
    var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));
    NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);
    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);

    function defineIteratorMethods(prototype) {
        ["next", "throw", "return"].forEach(function (method) {
            define(prototype, method, function (arg) {
                return this._invoke(method, arg);
            });
        });
    }

    function AsyncIterator(generator, PromiseImpl) {
        function invoke(method, arg, resolve, reject) {
            var record = tryCatch(generator[method], generator, arg);
            if ("throw" !== record.type) {
                var result = record.arg, value = result.value;
                return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) {
                    invoke("next", value, resolve, reject);
                }, function (err) {
                    invoke("throw", err, resolve, reject);
                }) : PromiseImpl.resolve(value).then(function (unwrapped) {
                    result.value = unwrapped, resolve(result);
                }, function (error) {
                    return invoke("throw", error, resolve, reject);
                });
            }
            reject(record.arg);
        }

        var previousPromise;
        defineProperty(this, "_invoke", {
            value: function value(method, arg) {
                function callInvokeWithMethodAndArg() {
                    return new PromiseImpl(function (resolve, reject) {
                        invoke(method, arg, resolve, reject);
                    });
                }

                return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
        });
    }

    function makeInvokeMethod(innerFn, self, context) {
        var state = "suspendedStart";
        return function (method, arg) {
            if ("executing" === state) throw new Error("Generator is already running");
            if ("completed" === state) {
                if ("throw" === method) throw arg;
                return doneResult();
            }
            for (context.method = method, context.arg = arg; ;) {
                var delegate = context.delegate;
                if (delegate) {
                    var delegateResult = maybeInvokeDelegate(delegate, context);
                    if (delegateResult) {
                        if (delegateResult === ContinueSentinel) continue;
                        return delegateResult;
                    }
                }
                if ("next" === context.method) context.sent = context._sent = context.arg; else if ("throw" === context.method) {
                    if ("suspendedStart" === state) throw state = "completed", context.arg;
                    context.dispatchException(context.arg);
                } else "return" === context.method && context.abrupt("return", context.arg);
                state = "executing";
                var record = tryCatch(innerFn, self, context);
                if ("normal" === record.type) {
                    if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue;
                    return {value: record.arg, done: context.done};
                }
                "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg);
            }
        };
    }

    function maybeInvokeDelegate(delegate, context) {
        var methodName = context.method, method = delegate.iterator[methodName];
        if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel;
        var record = tryCatch(method, delegate.iterator, context.arg);
        if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel;
        var info = record.arg;
        return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel);
    }

    function pushTryEntry(locs) {
        var entry = {tryLoc: locs[0]};
        1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);
    }

    function resetTryEntry(entry) {
        var record = entry.completion || {};
        record.type = "normal", delete record.arg, entry.completion = record;
    }

    function Context(tryLocsList) {
        this.tryEntries = [{tryLoc: "root"}], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);
    }

    function values(iterable) {
        if (iterable) {
            var iteratorMethod = iterable[iteratorSymbol];
            if (iteratorMethod) return iteratorMethod.call(iterable);
            if ("function" == typeof iterable.next) return iterable;
            if (!isNaN(iterable.length)) {
                var i = -1, next = function next() {
                    for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;
                    return next.value = undefined, next.done = !0, next;
                };
                return next.next = next;
            }
        }
        return {next: doneResult};
    }

    function doneResult() {
        return {value: undefined, done: !0};
    }

    return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", {
        value: GeneratorFunctionPrototype,
        configurable: !0
    }), defineProperty(GeneratorFunctionPrototype, "constructor", {
        value: GeneratorFunction,
        configurable: !0
    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) {
        var ctor = "function" == typeof genFun && genFun.constructor;
        return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name));
    }, exports.mark = function (genFun) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun;
    }, exports.awrap = function (arg) {
        return {__await: arg};
    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
        return this;
    }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
        void 0 === PromiseImpl && (PromiseImpl = Promise);
        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
        return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {
            return result.done ? result.value : iter.next();
        });
    }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () {
        return this;
    }), define(Gp, "toString", function () {
        return "[object Generator]";
    }), exports.keys = function (val) {
        var object = Object(val), keys = [];
        for (var key in object) keys.push(key);
        return keys.reverse(), function next() {
            for (; keys.length;) {
                var key = keys.pop();
                if (key in object) return next.value = key, next.done = !1, next;
            }
            return next.done = !0, next;
        };
    }, exports.values = values, Context.prototype = {
        constructor: Context, reset: function reset(skipTempReset) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);
        }, stop: function stop() {
            this.done = !0;
            var rootRecord = this.tryEntries[0].completion;
            if ("throw" === rootRecord.type) throw rootRecord.arg;
            return this.rval;
        }, dispatchException: function dispatchException(exception) {
            if (this.done) throw exception;
            var context = this;

            function handle(loc, caught) {
                return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught;
            }

            for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i], record = entry.completion;
                if ("root" === entry.tryLoc) return handle("end");
                if (entry.tryLoc <= this.prev) {
                    var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc");
                    if (hasCatch && hasFinally) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    } else if (hasCatch) {
                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);
                    } else {
                        if (!hasFinally) throw new Error("try statement without catch or finally");
                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                    }
                }
            }
        }, abrupt: function abrupt(type, arg) {
            for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                    var finallyEntry = entry;
                    break;
                }
            }
            finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);
            var record = finallyEntry ? finallyEntry.completion : {};
            return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);
        }, complete: function complete(record, afterLoc) {
            if ("throw" === record.type) throw record.arg;
            return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;
        }, finish: function finish(finallyLoc) {
            for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;
            }
        }, "catch": function _catch(tryLoc) {
            for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                var entry = this.tryEntries[i];
                if (entry.tryLoc === tryLoc) {
                    var record = entry.completion;
                    if ("throw" === record.type) {
                        var thrown = record.arg;
                        resetTryEntry(entry);
                    }
                    return thrown;
                }
            }
            throw new Error("illegal catch attempt");
        }, delegateYield: function delegateYield(iterable, resultName, nextLoc) {
            return this.delegate = {
                iterator: values(iterable),
                resultName: resultName,
                nextLoc: nextLoc
            }, "next" === this.method && (this.arg = undefined), ContinueSentinel;
        }
    }, exports;
}

function html_entity_decode(str) {
    var txt = document.createElement('textarea');
    txt.innerHTML = str;
    return txt.value;
}

function generateUniqueId() {
    return 'item_' + Math.random().toString(36).substr(2, 9);
}

function writeExcel(data) {
    var title = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'data';
    var wsPlus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];// Tạo một Workbook mới
    var wb = XLSX.utils.book_new();// Tạo một Worksheet mới
    var ws = XLSX.utils.aoa_to_sheet(data);
    if (wsPlus && wsPlus.length) {
        ws['!cols'] = wsPlus;
    }// Thêm Worksheet vào Workbook
    XLSX.utils.book_append_sheet(wb, ws, "Sheet1");// Tạo một binary string từ Workbook
    var wbout = XLSX.write(wb, {bookType: 'xlsx', type: 'binary'});// Chuyển đổi binary string sang ArrayBuffer
    function s2ab(s) {
        var buf = new ArrayBuffer(s.length);
        var view = new Uint8Array(buf);
        for (var i = 0; i < s.length; i++) {
            view[i] = s.charCodeAt(i) & 0xFF;
        }
        return buf;
    }// Tạo blob từ ArrayBuffer
    var blob = new Blob([s2ab(wbout)], {type: 'application/octet-stream'});// Tạo một URL cho blob
    var url = URL.createObjectURL(blob);// Tạo một link tải về và kích hoạt click vào nó
    var a = document.createElement("a");
    a.href = url;
    a.download = title + ".xlsx";
    a.click();
}

function readFileExcel(input, callback) {
    var startRow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    var arrConvert = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
    var file = input.files[0];
    if (!file || !file.name.endsWith('.xlsx') && !file.name.endsWith('.xls')) {
        alert('Vui lòng chọn một file Excel (.xlsx hoặc .xls)');
        return;
    }
    var reader = new FileReader();
    reader.onload = function (e) {
        var data = new Uint8Array(e.target.result);
        var workbook = XLSX.read(data, {type: 'array'});// Lấy dữ liệu từ sheet đầu tiên
        var sheet_name = workbook.SheetNames[0];
        var worksheet = workbook.Sheets[sheet_name];// Parse dữ liệu thành mảng JSON
        var excelData = XLSX.utils.sheet_to_json(worksheet, {header: 1, range: startRow, raw: false});
        console.log("excelData", excelData)
        console.log("workbook", workbook)
        if (excelData.length) {
            if (!arrConvert) {
                excelData = excelData.slice(0);
                arrConvert = excelData.shift();
            }
            if (arrConvert && arrConvert.length) {
                var excelDataOld = [];
                excelData.forEach(function (row) {
                    if (row.length > 0) {
                        var rowData = {};
                        var emailIndex = 0;
                        arrConvert.forEach(function (val) {
                            if (row[emailIndex]) {
                                rowData[val.trim()] = row[emailIndex].trim();
                            } else rowData[val.trim()] = '';
                            emailIndex++;
                        });
                        if(arrConvert.includes('avatar')){

                        }
                        excelDataOld.push(rowData);
                    }
                });
                excelData = excelDataOld;
            }
        }
        console.log("excelData_Convert", excelData)
        callback(excelData, arrConvert);
    };
    reader.readAsArrayBuffer(file);
}

function vietnameseToEnglish(word) {
    var vietnameseMap = {
        'à': 'a',
        'á': 'a',
        'ả': 'a',
        'ã': 'a',
        'ạ': 'a',
        'ă': 'a',
        'ằ': 'a',
        'ắ': 'a',
        'ẳ': 'a',
        'ẵ': 'a',
        'ặ': 'a',
        'â': 'a',
        'ầ': 'a',
        'ấ': 'a',
        'ẩ': 'a',
        'ẫ': 'a',
        'ậ': 'a',
        'đ': 'd',
        'è': 'e',
        'é': 'e',
        'ẻ': 'e',
        'ẽ': 'e',
        'ẹ': 'e',
        'ê': 'e',
        'ề': 'e',
        'ế': 'e',
        'ể': 'e',
        'ễ': 'e',
        'ệ': 'e',
        'ì': 'i',
        'í': 'i',
        'ỉ': 'i',
        'ĩ': 'i',
        'ị': 'i',
        'ò': 'o',
        'ó': 'o',
        'ỏ': 'o',
        'õ': 'o',
        'ọ': 'o',
        'ô': 'o',
        'ồ': 'o',
        'ố': 'o',
        'ổ': 'o',
        'ỗ': 'o',
        'ộ': 'o',
        'ơ': 'o',
        'ờ': 'o',
        'ớ': 'o',
        'ở': 'o',
        'ỡ': 'o',
        'ợ': 'o',
        'ù': 'u',
        'ú': 'u',
        'ủ': 'u',
        'ũ': 'u',
        'ụ': 'u',
        'ư': 'u',
        'ừ': 'u',
        'ứ': 'u',
        'ử': 'u',
        'ữ': 'u',
        'ự': 'u',
        'ỳ': 'y',
        'ý': 'y',
        'ỷ': 'y',
        'ỹ': 'y',
        'ỵ': 'y',
        'À': 'A',
        'Á': 'A',
        'Ả': 'A',
        'Ã': 'A',
        'Ạ': 'A',
        'Ă': 'A',
        'Ằ': 'A',
        'Ắ': 'A',
        'Ẳ': 'A',
        'Ẵ': 'A',
        'Ặ': 'A',
        'Â': 'A',
        'Ầ': 'A',
        'Ấ': 'A',
        'Ẩ': 'A',
        'Ẫ': 'A',
        'Ậ': 'A',
        'Đ': 'D',
        'È': 'E',
        'É': 'E',
        'Ẻ': 'E',
        'Ẽ': 'E',
        'Ẹ': 'E',
        'Ê': 'E',
        'Ề': 'E',
        'Ế': 'E',
        'Ể': 'E',
        'Ễ': 'E',
        'Ệ': 'E',
        'Ì': 'I',
        'Í': 'I',
        'Ỉ': 'I',
        'Ĩ': 'I',
        'Ị': 'I',
        'Ò': 'O',
        'Ó': 'O',
        'Ỏ': 'O',
        'Õ': 'O',
        'Ọ': 'O',
        'Ô': 'O',
        'Ồ': 'O',
        'Ố': 'O',
        'Ổ': 'O',
        'Ỗ': 'O',
        'Ộ': 'O',
        'Ơ': 'O',
        'Ờ': 'O',
        'Ớ': 'O',
        'Ở': 'O',
        'Ỡ': 'O',
        'Ợ': 'O',
        'Ù': 'U',
        'Ú': 'U',
        'Ủ': 'U',
        'Ũ': 'U',
        'Ụ': 'U',
        'Ư': 'U',
        'Ừ': 'U',
        'Ứ': 'U',
        'Ử': 'U',
        'Ữ': 'U',
        'Ự': 'U',
        'Ỳ': 'Y',
        'Ý': 'Y',
        'Ỷ': 'Y',
        'Ỹ': 'Y',
        'Ỵ': 'Y'
    };// Chuyển đổi từ tiếng Việt sang tiếng Anh
    var englishWord = '';
    for (var i = 0; i < word.trim().length; i++) {
        var _char = word[i];
        if (vietnameseMap[_char]) {
            englishWord += vietnameseMap[_char];
        } else {
            englishWord += _char;// Giữ nguyên ký tự không phải tiếng Việt
        }
    }
    return englishWord;
}

function formatSeconds(seconds) {
    if (seconds < 60) {
        return seconds + ' ' + __('giây');
    } else if (seconds < 3600) {
        var minutes = Math.floor(seconds / 60);
        return minutes + ' ' + __('phút');
    } else {
        var hours = Math.floor(seconds / 3600);
        var remainingMinutes = Math.floor(seconds % 3600 / 60);
        return hours + ' ' + __('giờ') + ' ' + remainingMinutes + ' ' + __('phút');
    }
}

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
        var info = gen[key](arg);
        var value = info.value;
    } catch (error) {
        reject(error);
        return;
    }
    if (info.done) {
        resolve(value);
    } else {
        Promise.resolve(value).then(_next, _throw);
    }
}

function _asyncToGenerator(fn) {
    return function () {
        var self = this, args = arguments;
        return new Promise(function (resolve, reject) {
            var gen = fn.apply(self, args);

            function _next(value) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }

            function _throw(err) {
                asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }

            _next(undefined);
        });
    };
}

function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);
    if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function (sym) {
            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys.push.apply(keys, symbols);
    }
    return keys;
}

function _objectSpread(target) {
    for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
            _defineProperty(target, key, source[key]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
    }
    return target;
}

function _defineProperty(obj, key, value) {
    key = _toPropertyKey(key);
    if (key in obj) {
        Object.defineProperty(obj, key, {value: value, enumerable: true, configurable: true, writable: true});
    } else {
        obj[key] = value;
    }
    return obj;
}

function _toPropertyKey(arg) {
    var key = _toPrimitive(arg, "string");
    return _typeof(key) === "symbol" ? key : String(key);
}

function _toPrimitive(input, hint) {
    if (_typeof(input) !== "object" || input === null) return input;
    var prim = input[Symbol.toPrimitive];
    if (prim !== undefined) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
    }
    return (hint === "string" ? String : Number)(input);
}

function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
    return arr2;
}

function _iterableToArrayLimit(arr, i) {
    var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
    if (null != _i) {
        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;
        try {
            if (_x = (_i = _i.call(arr)).next, 0 === i) {
                if (Object(_i) !== _i) return;
                _n = !1;
            } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) ;
        } catch (err) {
            _d = !0, _e = err;
        } finally {
            try {
                if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return;
            } finally {
                if (_d) throw _e;
            }
        }
        return _arr;
    }
}

function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}

function _typeof(obj) {
    "@babel/helpers - typeof";
    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
        return typeof obj;
    } : function (obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    }, _typeof(obj);
}

(function () {
    var src = '//cdn.jsdelivr.net/npm/eruda';
    if (!/eruda=true/.test(window.location) && localStorage.getItem('active-eruda') != 'true') return;
    document.write('<scr' + 'ipt src="' + src + '"></scr' + 'ipt>');
    document.write('<scr' + 'ipt>eruda.init();</scr' + 'ipt>');
})();
Number.prototype.format = function (n, x, s, c) {
    var re = '\\d(?=(\\d{' + (x || 3) + '})+' + (n > 0 ? '\\D' : '$') + ')', num = this.toFixed(Math.max(0, ~~n));
    return (c ? num.replace('.', c) : num).replace(new RegExp(re, 'g'), '$&' + (s || ','));
};

function format(i, n, x, s, c) {
    var re = '\\d(?=(\\d{' + (x || 3) + '})+' + (n > 0 ? '\\D' : '$') + ')', num = i.toFixed(Math.max(0, ~~n));
    return (c ? num.replace('.', c) : num).replace(new RegExp(re, 'g'), '$&' + (s || ','));
}

var str_pad = function str_pad(input, length, padString, padType) {
    input = input.toString();
    if (input.length >= length) {
        return input;
    }
    padString = padString || ' ';
    padType = padType || 'right';
    if (padType === 'left') {
        return padString.repeat(length - input.length) + input;
    } else if (padType === 'right') {
        return input + padString.repeat(length - input.length);
    } else {
        return input;
    }
};
var idModule = 1000, myWindow, myDialog, argumentValues, textLanguage = '';
if (lang !== 'vi') {
    if (localStorage.getItem('data_en') && localStorage.getItem('lang_ver') && localStorage.getItem('lang_ver') === lang_ver) {
        textLanguage = JSON.parse(localStorage.getItem('data_en'));
    } else {
        $.get('/languages/getFileLanguage', function (data) {
            textLanguage = data === '' ? false : JSON.parse(data);
            localStorage.setItem('lang_ver', lang_ver);
            localStorage.setItem('data_en', data);
        });
    }
}

function listenerEventMessage(files) {
    if (files.length && argumentValues && _typeof(argumentValues) === 'object') {
        var _Object$values = Object.values(argumentValues), _Object$values2 = _slicedToArray(_Object$values, 7),
            e = _Object$values2[0], _Object$values2$ = _Object$values2[1],
            render_link = _Object$values2$ === void 0 ? '#render_link' : _Object$values2$,
            _Object$values2$2 = _Object$values2[2],
            render_preview = _Object$values2$2 === void 0 ? '.preview-thumbnail' : _Object$values2$2,
            _Object$values2$3 = _Object$values2[3], type = _Object$values2$3 === void 0 ? null : _Object$values2$3,
            _Object$values2$4 = _Object$values2[4], lesson_id = _Object$values2$4 === void 0 ? null : _Object$values2$4,
            _Object$values2$5 = _Object$values2[5], accept = _Object$values2$5 === void 0 ? null : _Object$values2$5,
            _Object$values2$6 = _Object$values2[6], user = _Object$values2$6 === void 0 ? null : _Object$values2$6;
        if(typeof render_link === 'function'){
            render_link(files);
        } else if (type) {
            if (type === 'multiFile') {
                LHM.courses.addFileUnicaMultiFiles(files, render_link);
            } else if (type === 'multiImage') {
                LHM.courses.addFileUnicaMultiImages(files, render_link);
            } else if (type === 'addFileUnicaToLesson' && lesson_id) {
                LHM.courses.addFileUnicaToLesson(files, lesson_id, 'addFileUnicaToLesson');
            } else if (type === 'attachFileToLesson' && lesson_id) {
                LHM.courses.addFileUnicaToLesson(files, lesson_id, 'attachFileToLesson');
            } else if (type === 'addDocumentToLesson' && lesson_id) {
                LHM.courses.addFileUnicaToLesson(files, lesson_id, 'addDocumentToLesson');
            } else if (type === 'choseFileInLibrary' && lesson_id) {
                LHM.courses.choseFileInLibrary(files, lesson_id, render_link, render_preview);
            } else if (type === 'document') {
                LHM.courses.addDocumentMulti(files, render_link);
            } else if (type === 'quiz_drag_drop') {
                LHM.courses.addQuizDragDrop(files);
            } else if (type === 'documentCourse') {
                LHM.courses.documentCourse(e, files, render_link);
            } else if (type === 'chooseAnEssayVideo') {
                var el = document.querySelector("[name='Quiz[" + render_link + "][video_url]']");
                var chooseFile = files.pop();
                if (!chooseFile) return;
                console.log(chooseFile);
                if (el) el.value = chooseFile.url;
                var txt = document.querySelector("#selected-video-" + render_link);
                if (txt) txt.innerHTML = 'Đã chọn tệp "<b>' + chooseFile.name + '</b>"';
            }
        } else {
            if (accept) {
                accept = accept.split(',');
            } else {//default images
                accept = ["png", "jpg", "jpeg", "gif"];
            }
            if (files.slice(-1)[0].url) {
                var fileEnd = files.slice(-1)[0];
                if (accept.includes(fileEnd.ext)) {
                    var src = fileEnd.url, div_render_link = $("".concat(render_link)),
                        div_render_preview = $("".concat(render_preview));
                    if (div_render_link.length > 0) {
                        div_render_link.val(src).change();
                    }
                    if (div_render_preview.length > 0) {
                        if (div_render_preview[0].localName === 'img') {
                            div_render_preview.attr('src', src);
                        } else {
                            div_render_preview.html("".concat(fileEnd.name, ".").concat(fileEnd.ext));
                        }
                    }
                    LHM.common.notify(null, 'success', "Upload th\xE0nh c\xF4ng ".concat(fileEnd.name, ".").concat(fileEnd.ext));
                } else LHM.common.notify(null, 'danger', 'Kiểu file không hợp lệ');
            } else {
                LHM.common.notify(null, 'danger', 'File đã chọn không hợp lệ');
            }
        }
    }
    if (myWindow) myWindow.close();
    if (myDialog) {
        myDialog.close();
        myDialog = null;
    }
}

var isPassedSubmitScorm = false;
window.addEventListener('message', function (event) {
    if (event.data.name && event.data.name === 'unica:files' && event.data.files.slice(-1)) {
        listenerEventMessage(event.data.files);
    }
    if (event.data.type === 'commitScorm') {
        var a = $('.active-watching').closest('li');
        if (a.length && !a.hasClass('passed-lesson') && !isPassedSubmitScorm) {
            isPassedSubmitScorm = true;
            LHM.courses.set_pass_lesson(a.find('.item-session'));
        }
    }
});
var LHM = {
    sso: {
        init: function init() {
        }
    }, common: {
        readError: function readError(res) {
            if (res.responseJSON) {
                if (typeof res.responseJSON === 'string') {
                    LHM.common.notify(null, 'danger', res.responseJSON);
                } else if (res.responseJSON.message || res.responseJSON.error) {
                    var list_message = res.responseJSON.message ? res.responseJSON.message : res.responseJSON.error
                    if (typeof list_message === 'string') {
                        LHM.common.notify(null, 'danger', list_message);
                    } else {
                        $.each(list_message, function (index, value) {
                            if(typeof value === 'string'){
                                LHM.common.notify(null, 'danger', value);
                            } else {
                                $.each(value, function (k, v) {
                                    LHM.common.notify(null, 'danger', v);
                                });
                            }
                        });
                    }
                } else LHM.common.notify(null, 'danger', 'Có lỗi xảy ra');
            } else LHM.common.notify(null, 'danger', 'Có lỗi xảy ra');
        }, callAjax: function callAjax(url) {
            var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';
            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
            var callBackSuccess = arguments.length > 3 ? arguments[3] : undefined;
            var callBackError = arguments.length > 4 ? arguments[4] : undefined;
            var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
            var option_ajax = {
                type: type,
                url: url,
                data: data,
                not_loading: !!options.not_loading,
                dataType: 'json',
                success: function success(res) {
                    if (!options.not_notify) {
                        var messageDefault = 'Thất bại';
                        if (res.success) messageDefault = 'Thành Công';
                        LHM.common.notifyResponse(res.message ? res.message : messageDefault, res.success ? 'success' : 'danger');
                    }
                    if (callBackSuccess) callBackSuccess(res);
                },
                error: function error(res) {
                    if (!options.not_notify) {
                        LHM.common.readError(res);
                    }
                    if (callBackError) callBackError(res);
                }
            };
            if (options.option_ajax) {
                option_ajax = _objectSpread(_objectSpread({}, options.option_ajax), option_ajax);
            }
            $.ajax(option_ajax);
        }, xService: function xService(service, id, successClick) {
            var classOrId = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';
            var title = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'Copy';
            var content = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'Bạn có chắc chắn muốn copy bản ghi';
            if (id && service) {
                $.confirm({
                    title: title, content: content, buttons: {
                        Ok: function Ok() {
                            service = service.replace('.', '/');
                            $.post('/' + service + '/' + id, {
                                _token: $.cookie('_token'),
                                check_post: 1
                            }, function (rs) {
                                if (rs.success) {
                                    LHM.common.notify(null, 'success', rs.ms ? rs.ms : 'Thành công');
                                    if (successClick != '') {
                                        setTimeout(function () {
                                            $(classOrId + successClick).click();
                                        }, 1000);
                                    }
                                } else {
                                    LHM.common.notify(null, 'warning', rs.ms ? rs.ms : 'Có lỗi xảy ra');
                                }
                            });
                        }, Cancel: function Cancel() {
                        }
                    }
                });
            } else {
                LHM.common.notify(null, 'warning', 'Truyền thiếu tham số');
            }
        }, confirmAjax: function confirmAjax(url) {
            var _action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GET';
            var data = arguments.length > 2 ? arguments[2] : undefined;
            var callBackSuccess = arguments.length > 3 ? arguments[3] : undefined;
            var callBackError = arguments.length > 4 ? arguments[4] : undefined;
            var title = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : "Xác nhận";
            var content = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : "";
            var notify = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : true;
            $.confirm({
                title: title, content: content, buttons: {
                    Ok: {
                        text: "Đồng ý", btnClass: 'btn-danger', action: function action() {
                            $.ajax({
                                type: _action,
                                url: url,
                                data: data,
                                dataType: 'json',
                                success: function success(res) {
                                    if (callBackSuccess) {
                                        callBackSuccess(res);
                                    } else if (notify) {
                                        var messageDefault, type = 'danger';
                                        if (res.success) {
                                            messageDefault = 'Thành Công';
                                            type = 'success';
                                        } else {
                                            messageDefault = 'Có lỗi xảy ra';
                                        }
                                        LHM.common.notifyResponse(res.message ? res.message : messageDefault, type);
                                    }
                                },
                                error: function error(res) {
                                    if (callBackError) {
                                        callBackError(res);
                                    } else if (notify) {
                                        LHM.common.readError(res);
                                    }
                                }
                            });
                        }
                    }, cancel: {text: "Đóng"}
                }
            });
        }, convertTime: function convertTime(timestamp) {
            var strConvert = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Y-m-d';
            var date = new Date(timestamp * 1000);
            if (strConvert !== '') {
                var year = date.getFullYear(), month = date.getMonth() + 1, day = date.getDate(),
                    hours = date.getHours(), minutes = date.getMinutes(), seconds = date.getSeconds();
                month = month < 10 ? "0".concat(month) : month;
                day = day < 10 ? "0".concat(day) : day;
                hours = hours < 10 ? "0".concat(hours) : hours;
                seconds = seconds < 10 ? "0".concat(seconds) : seconds;
                minutes = minutes < 10 ? "0".concat(minutes) : minutes;
                return strConvert.replace(/Y/gi, "".concat(year)).replace(/m/gi, "".concat(month)).replace(/d/gi, "".concat(day)).replace(/H/gi, "".concat(hours)).replace(/i/gi, "".concat(minutes)).replace(/s/gi, "".concat(seconds));
            } else {
                return '';
            }
        }, getValueInt: function getValueInt(data, key) {
            var val_default = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
            var val;
            if (data[key]) {
                val = parseInt(data[key]);
                if (isNaN(val) || val <= 0) val = val_default;
            } else {
                val = val_default;
            }
            return val;
        }, teacher_layout_v2: function teacher_layout_v2(id) {
            this.slick(id, ".slider_".concat(id), {
                "hide_slide": 0,
                "dot": 1,
                "hide_arrow": "1",
                "hide_auto_play": 1,
                "to_scroll": "2",
                "to_scroll_tablet": "2",
                "to_scroll_mobile": "2",
                "arrow_bottom": "0",
                "rows": "2",
                "to_show": "2",
                "to_show_tablet": "2",
                "to_show_mobile": "2"
            });
            $(".section".concat(id, " img.click")).click(function () {
                $(".section".concat(id, " .detail-item")).hide();
                $(".section".concat(id, " .detail-item[data-id=\"").concat($(this).data('id'), "\"]")).show();
            });
        }, slick: function slick(id, div, config) {
            if (!config || config == '') {
                config = {};
            } else {
                if (typeof config === 'string') {
                    try {
                        config = JSON.parse(config);
                    } catch (err) {
                    }
                }
                if (_typeof(config) !== 'object') {
                    config = {};
                }
            }
            if (config.hide_slide && config.hide_slide == '1') {
                $("".concat(div)).addClass("grid gap-1 grid-cols-".concat(this.getValueInt(config, 'to_show', 3), " grid-md-cols-").concat(this.getValueInt(config, 'to_show_tablet', 2), " grid-xs-cols-").concat(this.getValueInt(config, 'to_show_mobile', 1)));
            } else {
                var options = {
                    dots: !!(config.dot && config.dot != '0'),
                    autoplay: !(config.hide_auto_play && config.hide_auto_play != '0'),
                    autoplaySpeed: this.getValueInt(config, 'speed', 3) * 1000,
                    speed: 300,
                    centerPadding: '20%',
                    arrows: !(config.hide_arrow && config.hide_arrow != '0'),
                    centerMode: !!(config.center_mode && config.center_mode != '0'),
                    slidesToShow: this.getValueInt(config, 'to_show', 3),
                    slidesToScroll: this.getValueInt(config, 'to_scroll'),
                    rows: this.getValueInt(config, 'rows'),
                    responsive: [{
                        breakpoint: 800,
                        settings: {
                            slidesToShow: this.getValueInt(config, 'to_show_tablet', 2),
                            slidesToScroll: this.getValueInt(config, 'to_scroll_tablet')
                        }
                    }, {
                        breakpoint: 480,
                        settings: {
                            slidesToShow: this.getValueInt(config, 'to_show_mobile'),
                            slidesToScroll: this.getValueInt(config, 'to_scroll_mobile')
                        }
                    }]
                };
                if ($(".appendArrows_".concat(id)).length) {
                    if (config.arrow_bottom && config.arrow_bottom != '0') {
                        options['appendArrows'] = $(".appendArrows_".concat(id));
                    }
                    options['appendDots'] = $(".appendArrows_".concat(id));
                }
                if (config.border && config.border != '0') {
                    $("".concat(div, " .slide")).addClass('border');
                }
                if ($(".section".concat(id, " .slick-resize")).length) {// return false
                    var innerWidth = window.innerWidth - 20;
                    if (!config.width_type || config.width_type === '') {
                        var width = config.width, width_unit = config.width_unit;
                        if (width_unit === '%') {
                            var maxWidth = $("".concat(div)).outerWidth();
                            if (width > 100 || width < 0) {
                                width = 80;
                            }
                            width = maxWidth * width / 100;
                        } else {
                            if (width > innerWidth) {
                                width = innerWidth;
                            }
                        }
                        $(".section".concat(id, " .slick-resize")).css('max-width', "".concat(width, "px"));
                    } else if (config.width_type !== 'container') {
                        $(".section".concat(id, " .slick-resize")).css('max-width', "".concat(innerWidth, "px"));
                    }
                }
                $("".concat(div)).slick(options);
            }
        }, notifyResponse: function notifyResponse(list) {
            var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'danger';
            var messageDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Có lỗi xảy ra';
            if (list) {
                if (typeof list == 'string') {
                    LHM.common.notify(null, type, list);
                } else if (list.length > 0) {
                    $.each(list, function (k, v) {
                        LHM.common.notify(null, type, v);
                    });
                } else {
                    LHM.common.notify(null, type, messageDefault);
                }
            }
        }, isMobile: function isMobile() {
            var check = false;
            (function (a) {
                if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0, 4))) check = true;
            })(navigator.userAgent || navigator.vendor || window.opera);
            return check;
        }, preventCocCoc: function preventCocCoc() {
            return true;
        }, viewImg: function viewImg(curr, id) {
            var imgSrc = $(curr).parents('.imgDetail2').find('img').attr('src');
            var modal = document.getElementById("myModal_" + id);
            var img = document.getElementById("myImg_" + id);
            var modalImg = document.getElementById("img01_" + id);
            modal.style.display = "block";
            modalImg.src = imgSrc;
            var span = $(curr).parents('.imgDetail2').find('span')[0];
            span.onclick = function () {
                modal.style.display = "none";
            };
        }, notify: function notify(icon, type, message, size) {
            size = size ? size : 'col-md-3';
            $.notify({
                icon: icon == null ? 'fa fa-exclamation' : icon,
                message: message == null ? 'notify!' : message
            }, {
                type: type == null ? 'success' : type,
                placement: {from: 'top', align: 'center'},
                offset: 5,
                delay: 5000,
                z_index: 1051,
                template: '<div data-notify="container" class="col-xs-11 ' + size + ' alert alert-{0}" role="alert">' +//'<button type="button" aria-hidden="true" class="close" data-notify="dismiss">×</button>' +
                    '<span data-notify="icon"></span> ' + '<span data-notify="title">{1}</span> ' + '<span data-notify="message">{2}</span>' + '<div class="progress" data-notify="progressbar">' + '<div class="progress-bar progress-bar-{0}" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>' + '</div>' + '<a href="{3}" target="{4}" data-notify="url"></a>' + '</div>'
            });
        }, prev_url: function prev_url(hashtag) {
            window.location = document.referrer + '#classes';
        }, alert: function alert(title, content) {
            title = title ? title : null;
            content = content ? content : null;
            $.alert({title: title, content: content, type: 'blue'});
        }, checkTableData: function checkTableData(selector, html, id) {
            var append = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "0";
            if (id) {
                selector.find('tr#' + id).replaceWith(html);
            } else {
                if (selector.find('.nodata').length) {
                    selector.html(html);
                } else {
                    selector.prepend(html);
                }
            }
        }, ckeditor: function () {
            var _ckeditor = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(id_tag, type, rows) {
                var type_ck, tool, _args = arguments;
                return _regeneratorRuntime().wrap(function _callee$(_context) {
                    while (1) switch (_context.prev = _context.next) {
                        case 0:
                            type_ck = _args.length > 3 && _args[3] !== undefined ? _args[3] : 'begin';
                            rows = rows ? rows : '';
                            type = type ? type : '';
                            var audio = true;
                            tool = {};
                            if (type === 'text') {
                                tool = {// Define the toolbar groups as it is a more accessible solution.
                                    toolbarGroups: [{
                                        'name': 'basicstyles',
                                        'groups': ['basicstyles', 'cleanup']
                                    }, {'name': 'links', 'groups': ['links']}, {
                                        'name': 'paragraph',
                                        'groups': ['list']
                                    }, {'name': 'colors'}, {name: 'paragraph', groups: ['align']}, {
                                        name: 'mathtype',
                                        groups: ['mathtype']
                                    }]
                                };
                                audio = false;
                            } else if (type === 'text_form') {
                                tool = {// Define the toolbar groups as it is a more accessible solution.
                                    toolbarGroups: [{
                                        'name': 'basicstyles',
                                        'groups': ['basicstyles', 'cleanup']
                                    }, {'name': 'links', 'groups': ['links']}, {
                                        'name': 'paragraph',
                                        'groups': ['list', 'align']
                                    }, {'name': 'styles'}, {'name': 'colors'}]
                                };
                                audio = false;
                            } else if (type === 'quiz_phrase_statement') {
                                tool = {// Define the toolbar groups as it is a more accessible solution.
                                    toolbarGroups: [{
                                        'name': 'basicstyles',
                                        'groups': ['basicstyles', 'cleanup']
                                    }, {'name': 'insert', 'groups': ['insert']}, {
                                        'name': 'styles',
                                        'groups': ['styles']
                                    }, {name: 'mathtype', groups: ['mathtype']}],// Remove the redundant buttons from toolbar groups defined above.
                                    removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Specialchar,Flash,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Youtube,Table,Mathjax,Videojs'
                                };
                            } else if (type === 'sample') {
                                tool = {
                                    toolbar: [
                                        { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike'] }
                                    ]
                                }
                                audio = false;
                            } else if (type === 'quiz') {
                                tool = {// Define the toolbar groups as it is a more accessible solution.
                                    toolbarGroups: [{'name': 'styles', 'groups': ['styles']}, {
                                        'name': 'basicstyles',
                                        'groups': ['basicstyles', 'cleanup']
                                    }, {'name': 'insert', 'groups': ['insert']}, {'name': 'colors'}, {
                                        name: 'paragraph',
                                        groups: ['align']
                                    }, {name: 'mathtype', groups: ['mathtype']}],// Remove the redundant buttons from toolbar groups defined above.
                                    removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Specialchar,Flash,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe,Format'
                                };
                            } else {
                                tool = {// Define the toolbar groups as it is a more accessible solution.
                                    toolbarGroups: [{
                                        'name': 'basicstyles',
                                        'groups': ['basicstyles', 'cleanup']
                                    }, {'name': 'links', 'groups': ['links']}, {
                                        'name': 'paragraph',
                                        'groups': ['list']
                                    }, {'name': 'insert', 'groups': ['insert']}, {
                                        'name': 'styles',
                                        'groups': ['styles']
                                    }, {'name': 'colors'}, {name: 'paragraph', groups: ['align']}, {
                                        name: 'mathtype',
                                        groups: ['mathtype']
                                    }]// Remove the redundant buttons from toolbar groups defined above.
//removeButtons: 'Underline,Strike,Subscript,Superscript,Anchor,Specialchar,Flash,HorizontalRule,Smiley,SpecialChar,PageBreak,Iframe',
                                };
                            }
                            if (audio) {
                                tool.filebrowserUploadUrl = '/sites/uploadAudioCk';
                                tool.imageUploadUrl = '/sites/uploadImageCkViaFileUnica';
                                tool.filebrowserImageUploadUrl = '/sites/uploadImageCkViaFileUnica';
                                tool.filebrowserUnicaUrl = type_ck;
                            }
                            if (rows != '') tool.height = rows;
                            /*tool.wordcount = {
                                maxWordCount: 20,
                                showWordCount: true,
                                showCharCount: false
                            };*/
                            CKEDITOR.replace(id_tag, tool).on('fileUploadRequest', function (evt) {
                                evt.data.requestData._token = $.cookie('_token');
                            });
                        case 7:
                        case"end":
                            return _context.stop();
                    }
                }, _callee);
            }));

            function ckeditor(_x2, _x3, _x4) {
                return _ckeditor.apply(this, arguments);
            }

            return ckeditor;
        }(), processBody: function processBody() {
            var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'start';
            var text = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "Loading...";
            var div = $('body').find('#process-body');
            if (type == 'start') {
                if (div.length === 0) {
                    $('body').append("<div id=\"process-body\"><i class=\"fas fa-spinner fa-spin\"></i> ".concat(text, "</div>"));
                }
            } else {
                if (div.length) {
                    div.remove();
                }
            }
        }, resizeSectionProduct: function resizeSectionProduct(id_sec, width) {
            var width_unit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'px';
            var divResize = $(".section".concat(id_sec, " .slick-resize"));
            if (divResize.length) {
                var width_type = '', innerWidth = window.innerWidth - 20, addCss = true;
                if (divResize.hasClass('w-100')) {
                    width_type = 'w-full';
                    if (divResize.find('.item-cat-course-slide').length) {
                        width = innerWidth;
                    } else {
                        addCss = false;
                    }
                } else if (divResize.hasClass('container')) {
                    width_type = 'container';
                    addCss = false;
                } else {
                    width = parseInt(width);
                    if (width_unit === '%') {
                        var maxWidth = $(".section".concat(id_sec)).outerWidth();
                        if (width > 100 || width < 0) {
                            width = 80;
                        }
                        width = maxWidth * width / 100;
                    } else {
                        if (width > innerWidth) {
                            width = innerWidth;
                        }
                    }
                }
                if (addCss) {
                    $(".section".concat(id_sec, " .slick-resize")).css('max-width', "".concat(width, "px"));
                }
            }
        }, saveLocalStorageFilter: function saveLocalStorageFilter(id) {
            var form = $("#".concat(id, "_filter"));
            if (form.length) {
                var values = form.serializeArray();
                localStorage.setItem(id, JSON.stringify(values));
            }
        }, getListTable: function getListTable(id, url, callback, options) {
            var tbody = $("#".concat(id)), formFilter = $("#".concat(id, "_filter")),
                filterStorage = localStorage.getItem(id), call_api_v2 = false;
            tbody.html('');
            var page = 0;
            if (filterStorage) {
                filterStorage = JSON.parse(filterStorage);
                $.each(filterStorage, function (k, v) {
                    if (v.name === 'page') {
                        formFilter.attr('data-page', v.value);
                    } else if ($("[name=".concat(v.name, "]")).length) {
                        $("[name=".concat(v.name, "]")).val(v.value);
                    }
                });
                localStorage.removeItem(id);
            }
            if (formFilter.attr('data-page')) {
                page = formFilter.attr('data-page');
                formFilter.removeAttr('data-page');
            }
            var data = formFilter.serialize();
            if (data === '') {
                data = "page=".concat(page);
            } else {
                data += "&page=".concat(page);
            }
            if (options) {
                $.each(options, function (k, v) {
                    if (k === 'call_api_v2') {
                        call_api_v2 = true;
                    } else {
                        data += "&".concat(k, "=").concat(v);
                    }
                });
            }
            $.ajax({
                type: "GET", url: url, data: data, dataType: 'json', beforeSend: function beforeSend(xhr) {
                    if (call_api_v2) {
                        if (token_api_v2 && token_api_v2 !== 'token_api_v2') {// Thêm header Authorization
                            xhr.setRequestHeader('Authorization', "Bearer ".concat(token_api_v2));
                            xhr.setRequestHeader('contentType', "application/x-www-form-urlencoded");
                        } else {
                            return false;
                        }
                    }
                }
            }).always(function (jqXHR, textStatus) {
                LHM.common.paginationNew(id, jqXHR);
                if(textStatus === 'error') {
                    LHM.common.readError(jqXHR);
                }
                if (callback) {
                    callback(jqXHR);
                }
                if (formFilter.data('new-url') && formFilter.serializeArray().length) {
                    var params = '';
                    formFilter.serializeArray().forEach(function (val, index) {
                        if (val.value !== '') {
                            params += (params === '' ? '?' : '&') + val.name + '=' + val.value;
                        }
                    });
                    history.pushState(null, '', base_url + window.location.pathname + params);
                }
            });
        }, viewDropboxVideo: function viewDropboxVideo(url) {
            var embed_link = url.replace("dl=0", "raw=1");
            $.confirm({
                title: 'Dropbox Video',
                columnClass: 'col-md-6',
                content: '<video class="embed-dropbox-video" width="505" height="285" src="' + embed_link + '" controls></video></br>',
                buttons: {
                    Ok: {
                        text: 'OK', btnClass: 'btn-blue', action: function action() {
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, getParam: function getParam(name) {
            var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.href);
            if (results && results.length > 0) {
                return results[1] || 0;
            } else {
                return false;
            }
        }, formatDateAddDay: function formatDateAddDay(day) {
            day = day ? day : null;
            var date = new Date();
            if (parseInt(day)) {
                date.setMonth(date.getMonth() + parseInt(day));
            }
            var dd = date.getDate();
            var mm = date.getMonth() + 1;
            var yyyy = date.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            return dd + '-' + mm + '-' + yyyy;
        }, setupEmailService: function setupEmailService() {
            fetch(base_url + '/api/email_service/setup', {headers: {'Accept': 'application/json'}}).then(function (res) {
                return res.json();
            }).then(function () {
                Notiflix.Block.standard('#v-pills-email-campaign', 'Đang khởi tạo email service...');
            })["catch"](function (e) {
                Notiflix.Notify.failure(e.message);
            })["finally"](function () {
                Notiflix.Block.remove('#v-pills-email-campaign');
            });
        }, genPagination: function genPagination(div, options, callClick) {
            options = typeof options === 'string' ? JSON.parse(options) : options;
            var html = '', totalPage = 0;
            if (options.total_record > options.total_items) {
                totalPage = Math.ceil(options.total_record / options.limit);
                if (totalPage > 1) {
                    html += "<div class=\"item-page ".concat(options.page === 0 ? 'disabled' : '', "\" data-page=\"prev\">&lt;</div>");
                    totalPage--;
                    if (totalPage < 5) {
                        for (var i = 0; i <= totalPage; i++) {
                            html += "<div class=\"item-page ".concat(options.page === i ? 'disabled active' : '', "\" data-page=\"").concat(i, "\">").concat(i + 1, "</div>");
                        }
                    } else {
                        var _i2 = 0;
                        while (_i2 <= totalPage) {
                            var active = _i2 === options.page ? 'disabled active' : '';
                            if (options.page < 3) {
                                html += "<div class=\"item-page ".concat(active, "\" data-page=\"").concat(_i2, "\">").concat(_i2 + 1, "</div>");
                                if (options.page < 2 && _i2 === 2 || _i2 === 3) {
                                    html += "<div class=\"item-page disabled\">...</div>";
                                    _i2 = totalPage;
                                } else {
                                    _i2++;
                                }
                            } else {
                                if (_i2 === 0) {
                                    html += "<div class=\"item-page\" data-page=\"0\">1</div>";
                                    html += "<div class=\"item-page disabled\">...</div>";
                                    _i2 = options.page - 1;
                                } else {
                                    if (options.page > totalPage - 2) {
                                        html += "<div class=\"item-page ".concat(active, "\" data-page=\"").concat(_i2, "\">").concat(_i2 + 1, "</div>");
                                        _i2++;
                                    } else {
                                        html += "<div class=\"item-page\" data-page=\"".concat(_i2, "\">").concat(_i2 + 1, "</div>");
                                        html += "<div class=\"item-page active disabled\" data-page=\"".concat(_i2 + 1, "\">").concat(_i2 + 2, "</div>");
                                        html += "<div class=\"item-page\" data-page=\"".concat(_i2 + 2, "\">").concat(_i2 + 3, "</div>");
                                        if (options.page !== totalPage - 2) {
                                            html += "<div class=\"item-page disabled\">...</div>";
                                        }
                                        html += "<div class=\"item-page\" data-page=\"".concat(totalPage, "\">").concat(totalPage + 1, "</div>");
                                        break;
                                    }
                                }
                            }
                        }
                    }
                    html += "<div class=\"item-page ".concat(options.page === totalPage ? 'disabled' : '', "\" data-page=\"next\">&gt;</div>");
                }
            }
            $(div).html("<div class=\"css-pagination\">".concat(html, "</div>"));
            if (html) {
                var url = new URL(window.location.href);
                $(div).find('.item-page:not(.disabled)').click(function () {
                    var dataPage = $(this).data('page'), pageClick;
                    var pageActive = $(div).find('.item-page.active').index();
                    if (pageActive < 1) pageActive = 1;
                    if (dataPage === 'prev') {
                        pageClick = Math.max(1, pageActive - 1);
                    } else if (dataPage === 'next') {
                        pageClick = Math.min(totalPage + 1, pageActive + 1);
                    } else {
                        pageClick = parseInt(dataPage) + 1;
                    }
                    if (!callClick) {
                        url.searchParams.set('page', "".concat(pageClick));
                        window.location.href = url.toString();
                    } else {
                        callClick(pageClick);
                    }
                });
            }
        }, paginationNew: function paginationNew(id, responses) {
            var tableBody = $("#".concat(id)), filter = $("#".concat(id, "_filter")), currentPage = 0, limit = 20,
                total_record = 0;
            if (responses.page) {
                currentPage = parseInt(responses.page);
            }
            if (responses.limit) {
                limit = parseInt(responses.limit);
            }
            if (responses.total_record) {
                total_record = parseInt(responses.total_record);
            }
            if (tableBody.length && filter.length) {
                var pagination = tableBody.closest('.form-list').find('.pagination-new:first');
                if (pagination.length === 0) {
                    var table = tableBody.closest('table');
                    if (table.length) {
                        if (table.parent().hasClass('table-responsive')) {
                            pagination = $("<div class=\"pagination-new\"></div>").insertAfter(table.parent());
                        } else {
                            pagination = $("<div class=\"pagination-new\"></div>").insertAfter(table);
                        }
                    }
                }
                if (pagination.length) {
                    pagination.empty();
                    if (total_record !== 0) {
                        const totalPage = Math.ceil(total_record / limit);
                        const start = currentPage * limit + 1,
                            end = Math.min((currentPage + 1) * limit, total_record);
                        let text_go = ''
                        if(totalPage > 5){
                            text_go = '<div class="input-group" style="width: 170px"><div class="input-group-prepend"><span class="input-group-text">Trang</span></div><input type="text" class="form-control input-number text-center input-go" value="' + (currentPage + 1) + '"><div class="input-group-append"><span class="input-group-text">/' + totalPage + '</span></div></div>'
                        }
                        pagination.append('<div class="left mr-auto"> Hiển thị từ ' + start.toLocaleString('de-DE') + ' - ' + end.toLocaleString('de-DE') + ' trong tổng số ' + total_record.toLocaleString('de-DE') + ' kết quả.</div>' + text_go + '<div class="right"></div>');
                        const goPage = function (page) {
                            filter.attr('data-page', page - 1);
                            const buttonFilter = $("#".concat(id, "_filter_submit"));
                            if (buttonFilter.length) {
                                buttonFilter.click();
                            } else {
                                filter.submit();
                            }
                        }

                        pagination.find('.right').twbsPagination({
                            totalPages: totalPage,
                            initiateStartPageClick: false,
                            startPage: currentPage + 1,
                            onPageClick: function (evt, page) {
                                goPage(page);
                            }
                        })
                        pagination.find('input.input-go').change(function () {
                            const val = $(this).val()
                            if(val && /^\d+$/.test(val)){
                                if(val > totalPage) {
                                    LHM.common.notify(null, 'danger', __('Trang chọn không được lớn hơn ') + totalPage)
                                    return false;
                                }
                                goPage(val);
                            }
                        })
                    }
                }
            }
        }, pagination_site: function pagination_site(total_page, limit, offset, page_focus) {
            var option = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
            var ajaxClick = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;
            var url_redirect = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;
            var total_record = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;
            var pagination = $('#' + page_focus).parents('.tab-pane').find('#pagination1');
            if (pagination.length === 0) pagination = $('#' + page_focus).parents('.my_courses').find('#pagination1');
            pagination.find('.prev-page').addClass('disabled');
            if (parseInt(offset) > 0) {
                pagination.find('.prev-page').removeClass('disabled');
                pagination.find('.prev-page').attr('data-page', offset - 1);
            }
            pagination.find('.input-page-pagination').val(parseInt(offset) + 1);
            if (total_record && total_page === limit && total_record > limit * (offset + 1)) total_page = limit + 1;
            if (total_page <= limit) {
                pagination.find('.next-page').addClass('disabled');
            } else {
                pagination.find('.next-page').removeClass('disabled');
                offset++;
                pagination.find('.next-page').attr('data-page', offset);
            }
            pagination.find('.page-item').unbind('click');
            pagination.find('.page-item').click(function () {
                if (!$(this).hasClass('disabled')) {
                    if (ajaxClick) LHM.common.listPagination(page_focus, parseInt($(this).attr('data-page')), option); else {
                        if (url_redirect.indexOf("?") > 0) {
                            window.location = url_redirect + '&page=' + (parseInt($(this).attr('data-page')) + 1);
                        } else {
                            console.log(2);
                            window.location = url_redirect + '?page=' + (parseInt($(this).attr('data-page')) + 1);
                        }
                    }
                }
            });
            pagination.find('.input-page-pagination').unbind('keyup');
            pagination.find('.input-page-pagination').unbind('change');
            pagination.find('.input-page-pagination').on('keyup change', function () {
                if (parseInt($(this).val()) > 0) {
                    if (ajaxClick) LHM.common.listPagination(page_focus, parseInt($(this).val()) - 1, option); else {
                        if (url_redirect.indexOf("?") > 0) {
                            window.location = url_redirect + '&page=' + parseInt($(this).val());
                        } else {
                            window.location = url_redirect + '?page=' + parseInt($(this).val());
                        }
                    }
                }
            });
            if (pagination.parent().find('.pagination-info').length === 0) pagination.parent().prepend("<div class=\"float-left pagination-info\"></div>");
            var pagination_info = pagination.parent().find('.pagination-info');
            pagination_info.empty();
            if (total_record) {
                if (total_page > total_record) {
                    total_page = total_record;
                }
                var from_record = offset * limit + 1;
                var to_record = offset * limit + total_page;
                if (total_page > limit) {
                    from_record = (offset - 1) * limit + 1;
                    to_record = (offset - 1) * limit + total_page - 1;
                }
                $('.pagination-info').html('<p>Hiển thị từ ' + from_record.toLocaleString('de-DE') + ' - ' + to_record.toLocaleString('de-DE') + ' trong tổng số ' + total_record.toLocaleString('de-DE') + ' kết quả.</p>');
            }
        }, listPagination: function listPagination(page_focus, page, option) {
            switch (page_focus) {
                case'list_student_retail':
                    LHM.mnDashboard.getStudents.getStudentRetail(parseInt(page));
                    break;
                case'list_student_memberships':
                    LHM.mnDashboard.getStudents.getStudentMemberShip(parseInt(page));
                    break;
                case'list_student_certificates':
                    LHM.mnDashboard.getStudents.getStudentCertificate(parseInt(page));
                    break;
                case'list_user_groups':
                    LHM.mnDashboard.getStudents.getUserGroups(parseInt(page));
                    break;
                case'list_logs_user_cms':
                    LHM.mnDashboard.getStudents.getLogsUser(parseInt(page));
                    break;
                case'list_user_registed':
                    LHM.mnDashboard.getStudents.getUserRegisted(parseInt(page));
                    break;
                case'list_email_campaign_cms':
                    LHM.mnDashboard.getStudents.getListEmailCampaign(parseInt(page));
                    break;
                case'list_user_active_api':
                    LHM.mnDashboard.getStudents.getStudentActiveCourse(parseInt(page));
                    break;
                case'list_orders':
                    LHM.orders.listOrders(parseInt(page));
                    break;
                case'news':
                    LHM.blog.getNews(parseInt(page));
                    break;
                case'get_files_in_library':
                    LHM.library.get_files_in_library(parseInt(page));
                    break;
                case'list_membership_cards':
                    LHM.mnDashboard.getMembershipCards(parseInt(page));
                    break;
                case'list-coupon':
                    LHM.mnDashboard.getCoupons(parseInt(page));
                    break;
                case'list-code-active-class':
                    LHM.mnDashboard.getActiveCode(parseInt(page));
                    break;
                case'list_schedule_users':
                    LHM.mnDashboard.getUsers(parseInt(page));
                    break;
                case'list_quiz_test':
                    LHM.mnDashboard.getQuizTest(parseInt(page));
                    break;
                case'list_course_test':
                    LHM.mnDashboard.getCourseTest(parseInt(page));
                    break;
                case'list_all_result':
                    LHM.mnDashboard.getAllResult(parseInt(page));
                    break;
                case'list_student_test':
                    LHM.mnDashboard.getStudentTest(parseInt(page), option.cid, option.filter, option.email);
                    break;
                case'list_test_result':
                    LHM.mnDashboard.getTestResult(parseInt(page), option.uid, option.cid);
                    break;
                case'list_quiz_test_link':
                    LHM.mnDashboard.getQuizTestLink(parseInt(page), option.filter);
                    break;
                case'list_user_test_quiz':
                    LHM.mnDashboard.getStudentTestQuiz(parseInt(page), option.qid);
                    break;
                case'list_schedule_courses':
                    LHM.mnDashboard.getCourses(parseInt(page));
                    break;
                case'list_course_package':
                    LHM.mnDashboard.getCoursePackage(parseInt(page));
                    break;
                case'list_combos_quiz':
                    LHM.mnDashboard.getComboQuiz(parseInt(page));
                    break;
                case'list_course_document_package':
                    LHM.mnDashboard.getCourseDocumentPackage(parseInt(page));
                    break;
                case'course_registed':
                    LHM.lives.list_courses(parseInt(page));
                    break;
                case'list_combo_quiz_acount':
                    LHM.lives.list_combo_quiz(parseInt(page));
                    break;
                case'list_combo_document_acount':
                    LHM.lives.list_combo_document(parseInt(page));
                    break;
                case'list_records':
                    LHM.lives.list_records(parseInt(page));
                    break;
                case'list-sites':
                    LHM.mnDashboard.getSites(parseInt(page));
                    break;
                case'list_users_aff':
                    LHM.affiliate.listUsersAff(parseInt(page), option.start, option.end);
                    break;
                case'list_course_aff':
                    LHM.affiliate.listCourseAff(parseInt(page));
                    break;
                case'list_combo_aff':
                    LHM.affiliate.listComboAff(parseInt(page));
                    break;
                case'list_orders_aff':
                    LHM.affiliate.listOrdersAff(parseInt(page), option.start, option.end, option.filter);
                    break;
                case'list_users_agency':
                    LHM.agency.listUsersAgency(parseInt(page), option.start, option.end);
                    break;
                case'list_orders_agency':
                    LHM.agency.listOrdersAgency(parseInt(page), option.start, option.end, option.filter);
                    break;
                case'list_quiz_test_public':
                    LHM.quiz.list_quiz_test_public(parseInt(page));
                    break;
                case'content_list_bank_quiz':
                    LHM.quiz.get_list_bank_question(option.type, option.label, parseInt(page));
                    break;
                case'list_files_in_live':
                    LHM.lives.get_document(parseInt(page));
                    break;
                case'list-history-payment':
                    LHM.sites.payment_history_affiliate(parseInt(page));
                    break;
                case'list-current-balance':
                    LHM.sites.get_current_balance(parseInt(page));
                    break;
                case'list_history_withdrawl':
                    LHM.affiliate.listHistoryWithdrawl(parseInt(page));
                    break;
                case'list_history_withdrawl_agency':
                    LHM.agency.listHistoryWithdrawl(parseInt(page));
                    break;
                case'list_profit':
                    LHM.mnDashboard.getProfit(parseInt(page), option.start, option.end);
                    break;
                case'list_review_cms':
                    LHM.mnDashboard.getReview_cms(parseInt(page));
                    break;
                case'list_process_study':
                    LHM.mnDashboard.getStudentStudy(parseInt(page));
                    break;
                case'list_room_lives_cms':
                    var tab_room = $('#tab_room_cms .active').attr("data-value");
                    LHM.mnDashboard.getClasses(parseInt(page), tab_room);
                    break;
                case'list-profit-affiliate':
                    LHM.mnDashboard.getProfitAffiliate(parseInt(page));
                    break;
                case'list_aff_child':
                    LHM.mnDashboard.getUserAffChild(parseInt(page));
                    break;
                case'list-data-affiliate-site':
                    LHM.sites.get_info_affiliate_site(parseInt(page));
                    break;
                case'documents':
                    LHM.document.getListDocument(page);
                    break;// case 'categories_course':
//     LHM.category.getCategories(parseInt(page), option.type, option.name_func);
//     break;
// case 'categories_blog':
//     LHM.category.getCategories(parseInt(page), option.type, option.name_func);
//     break;
            }
        }, genColorPicker: function genColorPicker() {
            $('.js-change .js-color').each(function () {
                if (!$(this).attr('id')) {
                    var idDiv = idModule++, value = $(this).val();
                    if (!value || value === '') {
                        value = '#000000';
                    }
                    idDiv = 'colorPicker_' + idDiv;
                    $(this).attr('id', idDiv);
                    $('#' + idDiv).colorpicker({color: value});
                }
            });
        }, genSelect2: function genSelect2() {
            $('.js-change .js-select2').each(function () {
                if (!$(this).attr('id')) {
                    var idDiv = idModule++;
                    idDiv = 'select2_' + idDiv;
                    $(this).attr('id', idDiv);
                    $('#' + idDiv).select2({});
                }
            });
        }, genSelect2New: function genSelect2New() {
            $('select.js-select2-new').each(function () {
                var that = $(this), id = "select2-".concat(idModule), multiple = false, url = that.attr('data-url'),
                    cascade = that.attr('data-cascade'), name = that.attr('name'), allowClear = true,
                    placeholder = that.attr('data-placeholder'), ajax = that.attr('data--ajax');
                if (name && $(this).attr('multiple')) {
                    multiple = true;
                }
                if (multiple) {
                    $("<input type=\"hidden\" name=\"".concat(name, "\" id=\"").concat(id, "\" value=\"\"/>")).insertBefore(that);
                    that.attr('name', '');
                } else {
                    if (!placeholder && that.find('option').length && that.find('option:first').val() === '') {
                        placeholder = that.find('option:first').text();
                    }
                }
                if (!placeholder) {
                    placeholder = '--- Chọn ---';
                }
                that.removeClass('js-select2-new');
                if (that.attr('data-not-clear')) {
                    allowClear = false;
                }
                var options = {placeholder: placeholder, allowClear: allowClear};
                if (multiple) {
                    options.closeOnSelect = false;
                }
                var ajaxCalled = false;

                function addAjax(res) {
                    var items = [];
                    if (res.results && res.results.length) {
                        items = res.results;
                    } else if (res.items && res.items.length) {
                        items = res.items;
                    }
                    if (items.length) {
                        if (that.find('option').length === 0) {
                            that.append('<option value="">' + placeholder + '</option>');
                        }
                        $.each(items, function (k, v) {
                            that.append($('<option>', {
                                value: v._id ? v._id['$id'] : v.id,
                                text: html_entity_decode(v.name ? v.name : v.title ? v.title : v.fullname ? v.fullname : v.text)
                            }));
                        });
                        that.trigger('change');
                    }
                }

                that.select2(options).on("change.select2", function () {
                    if (multiple) {
                        var data = $(this).select2('data'), listStr = data.map(function (item) {
                            return item.id;
                        }).join();
                        $("#".concat(id)).val(listStr).change();
                    }
                }).on('select2:open',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {
                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                        while (1) switch (_context2.prev = _context2.next) {
                            case 0:
                                if (!(!ajaxCalled && ajax)) {
                                    _context2.next = 6;
                                    break;
                                }
                                that.select2('close');
                                ajaxCalled = true;
                                _context2.next = 5;
                                return $.ajax({
                                    type: 'GET',
                                    url: ajax,
                                    dataType: 'json',
                                    success: function success(res) {
                                        addAjax(res);
                                    }
                                });
                            case 5:
                                that.select2('open');
                            case 6:
                            case"end":
                                return _context2.stop();
                        }
                    }, _callee2);
                }))).on('select2:select', function (e) {
                    var top = $(this).parent().find('.select2-container--default').height() + $(this).parent().find('.select2-container--default').offset().top;
                    $('.select2-results__options').closest('.select2-container--open').css('top', top);
                }).on('select2:unselect', function (e) {
                    var top = $(this).parent().find('.select2-container--default').height() + $(this).parent().find('.select2-container--default').offset().top;
                    $('.select2-results__options').closest('.select2-container--open').css('top', top);
                });
                if (url && cascade) {
                    var cascadeObject = {};
                    $.each(cascade.split(','), function (k, v) {
                        var ar = v.split(':');
                        cascadeObject[ar[0]] = ar[1];
                    });
                    if (Object.keys(cascadeObject).length) {
                        var callCasCade = function callCasCade() {
                            that.empty();
                            var params = {};
                            $.each(cascadeObject, function (k, v) {
                                var input = $('[name=' + v + ']');
                                if (input.val()) {
                                    params[k] = input.val();
                                }
                            });
                            if (Object.keys(params).length === Object.keys(cascadeObject).length) {
                                $.get(url, params, function (res) {
                                    addAjax(res);
                                });
                            }
                        };
                        $.each(cascadeObject, function (k, v) {
                            $('[name=' + v + ']').change(function () {
                                callCasCade();
                            });
                        });
                    }
                }
                if (multiple) {
                    var dataSelect = $(this).select2('data');
                    var listStrSelect = dataSelect.map(function (item) {
                        return item.id;
                    }).join();
                    $("#".concat(id)).val(listStrSelect);
                }
                idModule++;
            });
        }, genFormNumber: function genFormNumber() {
            $('input[type="Form.Number"]').each(function () {
                var that = $(this), id = "form-number-".concat(idModule), name = that.attr('name'), value = that.val(),
                    unit = 'đ';
                if (that.data('unit')) {
                    unit = that.data('unit');
                }
                that.attr('type', 'text');
                if (name) {
                    that.parent().append("<input type=\"hidden\" name=\"".concat(name, "\" id=\"").concat(id, "\" value=\"").concat(value, "\"/>"));
                    that.attr('name', '');
                }
                if (unit == '$') {
                    that.autoNumeric('init', {
                        aSep: ',',// Dấu phân cách hàng nghìn
                        aDec: '.',// Dấu thập phân
                        mDec: 2,// Số chữ số thập phân
                        vMin: '0',// Giá trị tối thiểu
                        vMax: '99999999.99'// Giá trị tối đa
                    }).on('change', function () {
                        if (name) {
                            $("#".concat(id)).val(that.autoNumeric('get'));
                        }
                    });
                } else {
                    that.autoNumeric('init').on('keypress', function () {
                        if (name) {
                            $("#".concat(id)).val(that.autoNumeric('get'));
                        }
                    }).on('change', function () {
                        if (name) {
                            $("#".concat(id)).val(that.autoNumeric('get'));
                        }
                    });
                }
                idModule++;
            });
        }, genCkeditor: function genCkeditor() {
            $('textarea.js-ckeditor').each(function () {
                var id;
                if ($(this).attr('id')) {
                    id = $(this).attr('id');
                } else {
                    id = "form-ckeditor-".concat(idModule);
                    $(this).attr('id', id);
                }
                $(this).removeClass('js-ckeditor').addClass('add-js-ckeditor');
                LHM.common.ckeditor(id, $(this).data('type'));
                idModule++;
            });
        }, genAllCustom: function genAllCustom() {
            LHM.common.genSelect2New();
            LHM.common.genFormNumber();
            LHM.common.genCkeditor();
        }, updateCkeditor: function updateCkeditor(form) {
            $("#".concat(form, " textarea:not(.not-update-element)")).each(function () {
                var id_area = $(this).attr('id');
                if (id_area && $('#cke_' + id_area).length) {
                    CKEDITOR.instances[id_area].updateElement();
                }
            });
        }, player: {
            docCookies: {
                getItem: function getItem(sKey) {
                    return decodeURIComponent(document.cookie.replace(new RegExp("(?:(?:^|.*;)\\s*" + encodeURIComponent(sKey).replace(/[\-\.\+\*]/g, "\\$&") + "\\s*\\=\\s*([^;]*).*$)|^.*$"), "$1")) || null;
                }, setItem: function setItem(sKey, sValue, vEnd) {
                    if (!sKey || /^(?:expires|max\-age|path|domain|secure)$/i.test(sKey)) {
                        return false;
                    }
                    document.cookie = encodeURIComponent(sKey) + "=" + encodeURIComponent(sValue) + "; expires=Tue, 19 Jan 2038 03:14:07 GMT";
                    return true;
                }
            },
            getElementTop: function getElementTop(element) {
                var actualTop = element.offsetTop;
                var current = element.offsetParent;
                while (current !== null) {
                    actualTop += current.offsetTop;
                    current = current.offsetParent;
                }
                return actualTop;
            },
            isAutoPlay: function isAutoPlay(player, id) {
                var isExits = LHM.common.player.docCookies.getItem('autoplay');
                if (isExits) {
                    if (isExits === 'true') {
                        player.play();// LHM.common.player.attendScroll(player, id);
                    } else {
                        player.pause();
                    }
                } else {
                    player.play();
                    LHM.common.player.docCookies.setItem('autoplay', true);
                }
            },
            attendScroll: function attendScroll(player, id) {
                var SCREEN_HEIGHT = window.screen.availHeight;
                var SCREEN_WIDTH = window.screen.availWidth;
                var rangeMin, rangeMax, distance;
                var video = document.getElementById(id);
                distance = LHM.common.player.getElementTop(video);
                rangeMin = distance - SCREEN_HEIGHT + video.offsetHeight * 0.6;
                rangeMax = distance + video.offsetHeight / 2 - 100;
                window.addEventListener('scroll', function (e) {
                    if (window.scrollY >= rangeMin && window.scrollY < rangeMax) {
                        if (player.paused()) player.play();
                    } else {
                        if (!video.paused) player.pause();
                    }
                });
            },
            id_video: null,
            video_url: [],
            run: function run(element, video_id, query, width, height, fullscreen, qid, lid) {
                width = width ? width : 100;
                height = height ? height : 100;
                qid = qid ? qid : null;
                lid = lid ? lid : null;//query get streamurl or get from variable window
                if (query) {
                    if (_typeof(query) === 'object') {
                        LHM.common.player.get_url_video_unica(query, function () {
                            play(qid, lid, query);
                        });
                    } else {
                        LHM.common.player.get_url_video(video_id, function () {
                            play(qid, lid, query);
                        });
                    }
                } else {
                    LHM.common.player.video_url = window.streamurl[video_id];
                    play(qid, lid, query);
                }

                function play(qid, lid, data) {
                    if (LHM.common.player.video_url.length > 0) {
                        if (LHM.common.player.video_url.indexOf('youtube') != -1 || LHM.common.player.video_url.indexOf('vimeo') != -1) {
                            var playeryoutube = '<div class="embed-responsive embed-responsive-16by9">' + '<iframe class="embed-responsive-item" src="' + LHM.common.player.video_url + '?autoplay=1" allowfullscreen></iframe>' + '</div>';
                            $(element).html(playeryoutube);
                            if (window.player) {
                                window.player.dispose();
                                window.player = null;
                            }
                        } else if (data.video_id) {
                            $(element).html('<iframe src="https://file.edubit.vn/embed/' + data.video_id + '" height="' + height + '" width="' + width + '" allowfullscreen="true" frameborder="0" class="mw-100"></iframe>');
                        } else {
                            if (window.player) {
                                window.player.dispose();
                                window.player = null;
                            }
                            var id_video = 'main_video';
                            LHM.common.player.id_video = id_video;
                            if ($('#' + id_video).length === 0) {
                                var size = '';
                                if (fullscreen) {
                                    size = 'style="width: 100%; height: 100%;"';
                                } else size = 'width="' + width + '" height="' + height + '"';
                                $(element).html('<iframe src="https://unica.vn/404" frameborder="0" height="0" width="0" style="display:none;visibility:hidden"></iframe><video id=' + id_video + ' class="video-js vjs-default-skin vjs-fluid vjs-big-play-centered" autoplay preload="auto" ' + size + '></video>');
                            }
                            var options = {};
                            if (window.screen.availWidth > 450) {
                                options = {// playbackRates: [0.5 , 0.75 , 1 , 1.25 , 1.5 , 1.75 , 2],
                                    controls: true,
                                    plugins: {videoJsResolutionSwitcher: {"default": 720, dynamicLabel: true}},
                                    controlBar: {muteToggle: false, volumeMenuButton: {inline: false, vertical: true}}
                                };
                            } else {
                                options = {// playbackRates: [0.5 , 0.75 , 1 , 1.25 , 1.5 , 1.75 , 2],
                                    controls: true,
                                    plugins: {videoJsResolutionSwitcher: {"default": 720, dynamicLabel: true}}
                                };
                            }
                            if (window.player) {
                                window.player.updateSrc(LHM.common.player.video_url);
                                setTimeout(function () {
                                    LHM.common.player.isAutoPlay(window.player, id_video);
                                }, 1000);
                            } else {
                                videojs('#' + id_video, options, function () {
                                    var player = this;
                                    if (data.use_subtitle_video) {
                                        var trackVideoFile = function trackVideoFile(id) {
                                            return new Promise(function (resolve, reject) {
                                                $.ajax({
                                                    url: 'https://file.unica.vn/api/video-net/tracks/' + id,
                                                    type: 'GET',
                                                    success: function success(data) {
                                                        resolve(data);
                                                    },
                                                    error: function error(_error) {
                                                        reject(_error);
                                                    }
                                                });
                                            });
                                        };
                                        trackVideoFile(data.video_id).then(function (data) {
                                            var tracks = data.payload;
                                            if (tracks) {
                                                for (var track in tracks) {
                                                    player.addRemoteTextTrack(tracks[track], false);
                                                }
                                            }
                                        });
                                    }
                                    if (qid && lid) {
                                        player.on('ended', function () {
                                            LHM.quiz.checkCompleteTest(qid, lid);
                                        });
                                    }
                                    player.volume(80);
                                    window.player = player;
                                    player.updateSrc(LHM.common.player.video_url);
                                    setTimeout(function () {
                                        LHM.common.player.isAutoPlay(player, id_video);
                                    }, 1000);
                                    if (watermark == 1) {
                                        var defaults = {
                                            image: logo_site,
                                            url: base_url,
                                            marginTop: 10,
                                            marginRight: 10,
                                            width: 100,
                                            xrepeat: 0,
                                            opacity: 0.5,
                                            file: logo_site,
                                            className: 'vjs-watermark',
                                            text: false,
                                            debug: false,
                                            fadeTime: null
                                        };
                                        player.watermark(defaults);
                                    }
                                });
                            }
                        }
                    } else {
                        if (window.video_status && window.video_status[video_id] && window.video_status[video_id] == 2) {
                            $('#preview').html('<p>Lỗi video: ' + window.video_status_text[video_id] + '</p');
                        } else $('#preview').html('<p>Video đang được xử lý...</p');
                    }
                }
            },
            get_url_video: function get_url_video(id, callback) {
                var val_post = {_id: id};
                $.ajax({
                    type: 'GET',
                    async: false,
                    url: base_url + '/library/getVideoUrl',
                    data: val_post,
                    dataType: 'json',
                    success: function success(video_url) {
                        LHM.common.player.video_url = video_url;
                        callback();
                    },
                    error: function error(err) {
                        LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                    }
                });
            },
            get_url_video_unica: function get_url_video_unica(data, callback) {
                var val_post = {data: data};
                $.ajax({
                    type: 'GET',
                    async: false,
                    url: base_url + '/library/getVideoUrlByLessonId',
                    data: val_post,
                    dataType: 'json',
                    success: function success(video_url) {
                        LHM.common.player.video_url = video_url;
                        callback();
                    },
                    error: function error(err) {
                        LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                    }
                });
            }
        }, loader: function loader(element, ml) {
            ml = ml ? ml : 45;
            $(element).html('<div class="loader"></div>');
            $(".loader").css("margin-left", ml + "%");
        }, PopupCenter: function PopupCenter(url, title, w, h, callback) {// Fixes dual-screen position                         Most browsers      Firefox
            var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : window.screenX;
            var dualScreenTop = window.screenTop != undefined ? window.screenTop : window.screenY;
            var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
            var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;
            var left = width / 2 - w / 2 + dualScreenLeft;
            var top = height / 2 - h / 2 + dualScreenTop;
            var newWindow = window.open(url, title, 'scrollbars=yes, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);
            callback(newWindow);
        }, countdown: function countdown(duration, display, qid, lid, tqi) {
            var user_id = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;
            var notTime = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
            var time_learn = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;//duration => giây
            clearInterval(window.countdown);
            display.text('--:--:--');
            var keyStorage = "".concat(qid, "_").concat(lid), time_save_local = 0;
            window.countdown = setInterval(function () {
                duration = Math.max(0, duration);
                var hours = '0' + Math.floor(duration % 86400 / 3600), minute = '0' + Math.floor(duration % 3600 / 60),
                    second = '0' + duration % 60;
                display.text(hours.substr(-2) + ':' + minute.substr(-2) + ":" + second.substr(-2));
                display.attr('data-learn', time_learn);
                display.attr('data-time', duration);
                if (time_save_local === 15) {
                    time_save_local = 0;
                    LHM.quiz.saveLocalStorage(qid, lid, user_id);
                } else {
                    time_save_local++;
                }
                if (duration <= 0 && !notTime) {
                    clearInterval(window.countdown);
                    var urlParams = new URLSearchParams(window.location.search);
                    var childParam = urlParams.get('child');
                    if (childParam) {
                        var continueButton = $('.btn-next-child');
                        if (continueButton.length > 0) {
                            clearInterval(window.countdown);
                            continueButton.click();
                        } else {
                            clearInterval(window.countdown);
                            $('.btn-submit-quiz-no-confirm').click();
                        }
                    } else {
                        LHM.quiz.saveTest('.btn-start-test', qid, lid, tqi, user_id, 0, "", false);
                    }
                }
                duration--;
                time_learn++;
            }, 1000);
        }, copy_link: function copy_link(url) {
            var label = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Đã sao chép link';
            var textArea = document.createElement('textarea');
            textArea.textContent = url;
            document.body.append(textArea);
            textArea.select();
            document.execCommand("copy");
            LHM.common.notify(null, 'success', label);
            textArea.remove();
        }, convertToSlug: function convertToSlug(str) {// Chuyển hết sang chữ thường
            str = str.toLowerCase();// xóa dấu
            str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');
            str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');
            str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');
            str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');
            str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');
            str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');
            str = str.replace(/(đ)/g, 'd');// Xóa ký tự đặc biệt
            str = str.replace(/([^0-9a-z-\s])/g, '');// Xóa khoảng trắng thay bằng ký tự -
            str = str.replace(/(\s+)/g, '-');// xóa phần dự - ở đầu
            str = str.replace(/^-+/g, '');// xóa phần dư - ở cuối
            str = str.replace(/-+$/g, '');// return
            return str;
        }, changeToSlug: function changeToSlug(name) {
            var slug;//Đổi chữ hoa thành chữ thường
            slug = name.toLowerCase();//Đổi ký tự có dấu thành không dấu
            slug = slug.replace(/á|à|ả|ạ|ã|ă|ắ|ằ|ẳ|ẵ|ặ|â|ấ|ầ|ẩ|ẫ|ậ/gi, 'a');
            slug = slug.replace(/é|è|ẻ|ẽ|ẹ|ê|ế|ề|ể|ễ|ệ/gi, 'e');
            slug = slug.replace(/i|í|ì|ỉ|ĩ|ị/gi, 'i');
            slug = slug.replace(/ó|ò|ỏ|õ|ọ|ô|ố|ồ|ổ|ỗ|ộ|ơ|ớ|ờ|ở|ỡ|ợ/gi, 'o');
            slug = slug.replace(/ú|ù|ủ|ũ|ụ|ư|ứ|ừ|ử|ữ|ự/gi, 'u');
            slug = slug.replace(/ý|ỳ|ỷ|ỹ|ỵ/gi, 'y');
            slug = slug.replace(/đ/gi, 'd');//Xóa các ký tự đặt biệt
            slug = slug.replace(/\`|\~|\!|\@|\#|\||\$|\%|\^|\&|\*|\(|\)|\+|\=|\,|\/|\?|\>|\<|\'|\"|\:|\;|_/gi, '');//Đổi khoảng trắng thành ký tự gạch ngang
            slug = slug.replace(/ /gi, "-");//Đổi nhiều ký tự gạch ngang liên tiếp thành 1 ký tự gạch ngang
//Phòng trường hợp người nhập vào quá nhiều ký tự trắng
            slug = slug.replace(/\-\-\-\-\-/gi, '-');
            slug = slug.replace(/\-\-\-\-/gi, '-');
            slug = slug.replace(/\-\-\-/gi, '-');
            slug = slug.replace(/\-\-/gi, '-');//Xóa các ký tự gạch ngang ở đầu và cuối
            slug = '@' + slug + '@';
            slug = slug.replace(/\@\-|\-\@|\@/gi, '');//In slug ra textbox có id “slug”
            return slug;
        }, common_filter: function common_filter() {
            var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
            var list_filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
            if ($(selector).find('option:selected').val() != '') {
                var field_filter_selected = $(selector).find('option:selected').val();
                $(selector).find('option:selected').attr('disabled', 'disabled');
                switch (field_filter_selected) {
                    case'name':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="name_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_name" id="name_student" checked> Họ tên</label>' + '</div>' + '<div class="col-md-6 filter-content">' + '<input type="text" class="form-control input-flat" name="name" placeholder="Nhập tên cần tìm ..." id="input_name_student">' + '</div>' + '</div>');
                        break;
                    case'email':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="email_student" style="font-weight: normal;"><input type="checkbox" name="check_email" class="chk-filter-item" id="email_student" checked> Email</label>' + '</div>' + '<div class="col-md-6 filter-content">' + '<input type="text" class="form-control input-flat" name="email" placeholder="Nhập email cần tìm ..." id="input_email_student">' + '</div>' + '</div>');
                        break;
                    case'phone':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="phone_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_phone" id="phone_student" checked> Điện thoại</label>' + '</div>' + '<div class="col-md-6 filter-content">' + '<input type="text" class="form-control input-flat" name="phone" placeholder="Nhập số điện thoại cần tìm ..." id="input_phone_student">' + '</div>' + '</div>');
                        break;
                    case'passport':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="passport_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_passport" id="passport_student" checked> CMND/CCCD</label>' + '</div>' + '<div class="col-md-6 filter-content">' + '<input type="text" class="form-control input-flat" name="passport" placeholder="Nhập CMND/CCCD" id="input_passport_student">' + '</div>' + '</div>');
                        break;
                    case'time':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="time_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_time" id="time_student" checked> Thời gian đăng ký</label>' + '</div>' + '<div class="col-md-2 filter-content">' + '<select class="form-control" id="slt-time-custom" name="type_time">' + '<option value="">Tất cả</option>' + '<option value="1">là</option>' + '<option value="2">>=</option>' + '<option value="3"><=</option>' + '<option value="4">Ở giữa</option>' + '</select>' + '</div>' + '<div class="col-md-4 filter-content" id="box-list-time">' + '</div>' + '</div>');
                        break;
                    case'time_join':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="time_join_student" style="font-weight: normal;"><input type="checkbox" name="check_time_join" class="chk-filter-item" id="time_join_student" checked> Thời gian tham gia</label>' + '</div>' + '<div class="col-md-2 filter-content">' + '<select class="form-control" id="slt-time-join-custom" name="type_time_join">' + '<option value="">Tất cả</option>' + '<option value="1">là</option>' + '<option value="2">>=</option>' + '<option value="3"><=</option>' + '<option value="4">Ở giữa</option>' + '</select>' + '</div>' + '<div class="col-md-4 filter-content" id="box-list-time-join">' + '</div>' + '</div>');
                        break;
                    case'city':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="city_student" style="font-weight: normal;"><input type="checkbox" name="check_city" class="chk-filter-item" id="city_student" checked> Tỉnh/Thành phố</label>' + '</div>' + '<div class="col-md-2 filter-content">' + '<select class="form-control" id="slt-city-custom" name="type_city">' + '<option value="">Tất cả</option>' + '<option value="1">là</option>' + '<option value="2">không là</option>' + '</select>' + '</div>' + '<div class="col-md-4 filter-content" id="box-list-city">' + '</div>' + '</div>');
                        break;
                    case'group':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="group_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_group" id="group_student" checked> Nhóm</label>' + '</div>' + '<div class="col-md-2 filter-content">' + '<select class="form-control" id="slt-group-custom" name="type_group">' + '<option value="">Tất cả</option>' + '<option value="1">là</option>' + '<option value="2">không là</option>' + '</select>' + '</div>' + '<div class="col-md-4 filter-content" id="box-list-group">' + '</div>' + '</div>');
                        break;
                    case'course':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="course_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_course" id="course_student" checked> Khóa học</label>' + '</div>' + '<div class="col-md-2 filter-content">' + '<select class="form-control" id="slt-course-custom" data-check-teacher="" name="type_course">' + '<option value="">Tất cả</option>' + '<option value="1">là</option>' + '<option value="2">không là</option>' + '</select>' + '</div>' + '<div class="col-md-7 filter-content" id="box-list-course">' + '</div>' + '</div>');
                        if (base_url.indexOf("ilv.edu.vn") !== -1) {
                            $(list_filter).find('#slt-course-custom').val('1').change();
                        }
                        break;
                    case'combo':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="combo_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_combo" id="combo_student" checked> Gói khóa học</label>' + '</div>' + '<div class="col-md-2 filter-content">' + '<select class="form-control" id="slt-combo-custom" name="type_combo">' + '<option value="">Tất cả</option>' + '<option value="1">là</option>' + '<option value="2">không là</option>' + '</select>' + '</div>' + '<div class="col-md-4 filter-content" id="box-list-combo">' + '</div>' + '</div>');
                        break;
                    case'start_course':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="start_course_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_start_course" id="start_course_student" checked> Bắt đầu khóa học</label>' + '</div>' + '<div class="col-md-2 filter-content">' + '<select class="form-control" id="slt-start_course-custom" name="type_start_course">' + '<option value="">Tất cả</option>' + '<option value="1">là</option>' + '<option value="2">>=</option>' + '<option value="3"><=</option>' + '<option value="4">Ở giữa</option>' + '</select>' + '</div>' + '<div class="col-md-4 filter-content" id="box-list-start_course">' + '</div>' + '</div>');
                        break;
                    case'end_course':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="end_course_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_end_course" id="end_course_student" checked> Kết thúc khóa học</label>' + '</div>' + '<div class="col-md-2 filter-content">' + '<select class="form-control" id="slt-end_course-custom" name="type_end_course">' + '<option value="">Tất cả</option>' + '<option value="1">là</option>' + '<option value="2">>=</option>' + '<option value="3"><=</option>' + '<option value="4">Ở giữa</option>' + '</select>' + '</div>' + '<div class="col-md-4 filter-content" id="box-list-end_course">' + '</div>' + '</div>');
                        break;
                    case'point':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="point_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_point" id="point_student" checked> Điểm số (%)</label>' + '</div>' + '<div class="col-md-2 filter-content">' + '<select class="form-control" id="slt-point-custom" name="type_point">' + '<option value="">Tất cả</option>' + '<option value="1">là</option>' + '<option value="2">>=</option>' + '<option value="3"><=</option>' + '<option value="4">Ở giữa</option>' + '</select>' + '</div>' + '<div class="col-md-4 filter-content" id="box-list-point">' + '</div>' + '</div>');
                        break;
                    case'process':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="process_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_process" id="process_student" checked> Tiến trình học (%)</label>' + '</div>' + '<div class="col-md-2 filter-content">' + '<select class="form-control" id="slt-process-custom" name="type_process">' + '<option value="">Tất cả</option>' + '<option value="1">là</option>' + '<option value="2">>=</option>' + '<option value="3"><=</option>' + '<option value="4">Ở giữa</option>' + '</select>' + '</div>' + '<div class="col-md-4 filter-content" id="box-list-process">' + '</div>' + '</div>');
                        break;
                    case'result':
                        $(list_filter).append('<div class="row filter-row-data">' + '<div class="col-md-3">' + '<label for="result_student" style="font-weight: normal;"><input type="checkbox" class="chk-filter-item" name="check_result" id="result_student" checked> Kết quả</label>' + '</div>' + '<div class="col-md-2 filter-content">' + '<select class="form-control" id="slt-result-custom" name="type_result">' + '<option value="">Tất cả</option>' + '<option value="1">là</option>' + '<option value="2">không là</option>' + '</select>' + '</div>' + '<div class="col-md-4 filter-content" id="box-list-result">' + '</div>' + '</div>');
                        break;
                    default:// statements_def
                        break;
                }
            }
        }, changeLanguages: function changeLanguages(lang) {
            $.get('/languages/changeLanguages/' + lang, function (data) {
                console.log(' change success');
                var redirect = '';
                $('link[data-lang="language_other"]').each(function (index, value) {
                    if (lang === value.hreflang) {
                        redirect = value.href;
                    }
                });
                if (redirect && redirect.length > 0) {
                    window.location.replace(redirect);
                } else {
                    window.location.reload();
                }
            });
        }, loadNewNotification: function loadNewNotification() {
            var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
            var list = $('#list-new-notification');
            if (list.length) {
                $.get('/new_notification/getList', data, function (res) {
                    if (res.html) {
                        if (res.append) {
                            list.append(res.html);
                        } else {
                            list.html(res.html);
                        }
                    }
                    if (res.count_new) {
                        $('#dropdown_new_notification .count-new-notification').attr('data-number', res.count_new).html(res.count_new);
                    }
                    list.attr('data-load', res.load_more ? 1 : 0);
                });
            }
        }
    }, id: {
        login: function login($checkout) {
            $checkout = $checkout ? $checkout : false;
            var datastring = $('#id #form-login').serialize() + '&_token=' + $.cookie('_token');
            var redirect_hash = localStorage.getItem('redirect_hash');
            $.ajax({
                type: 'POST',
                url: base_url + '/id/loginSubmit',
                data: datastring,
                dataType: 'json',
                success: function success(data) {// if (!data.error && !data.verify_email) {
//     window.location.href = base_url + '/id/verify_email?email=' + data.email;
// }
                    if (data.error && data.msg && data.msg.length > 0) {
                        for (var i = 0; i < data.msg.length; i++) {
                            LHM.common.notify(null, 'warning', data.msg[i]);
                        }
                    } else {
                        if ($('#remember_me').is(':checked')) {
                            localStorage.username = $('#email_login_v3').val();
                            localStorage.checkbox = $('#remember_me').val();
                        } else {
                            if (!localStorage.username || localStorage.username == $('#email_login_v3').val()) {
                                localStorage.username = '';
                                localStorage.checkbox = '';
                            }
                        }
                    }
                    if (!data.error && data.redirect) {// login thành công => redirect theo ref
                        if (redirect_hash) {
                            LHM.id.redirectFromPage(data.redirect + redirect_hash);
                            localStorage.removeItem("redirect_hash");
                        } else {
                            LHM.id.redirectFromPage(data.redirect);
                        }
                    } else if (data.error) {
                        if (data.href) {
                            setTimeout(function () {
                                window.location = data.href;
                            });
                        }
                    } else {
                        if (redirect_hash) {
                            LHM.id.redirectFromPage(data.redirect + redirect_hash);
                            localStorage.removeItem("redirect_hash");
                        } else {
                            LHM.id.redirectFromPage(data.redirect);
                        }
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'Đăng nhập thất bại');
                }
            });
        }, loginPopup: function loginPopup() {
            var datastring = $('#form-login-popup').serialize() + '&_token=' + $.cookie('_token');
            $.ajax({
                type: 'POST',
                url: base_url + '/id/loginSubmit',
                data: datastring,
                dataType: 'json',
                success: function success(data) {
                    if (data.error) {
                        if (data.msg && data.msg.length) {
                            for (var i = 0; i < data.msg.length; i++) {
                                LHM.common.notify(null, 'warning', data.msg[i]);
                            }
                        } else {
                            LHM.common.notify(null, 'warning', 'Có lỗi xảy ra');
                        }
                    } else {
                        window.location.reload();
                    }
                    if (data.href) {
                        setTimeout(function () {
                            window.location = data.href;
                        });
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'Đăng nhập thất bại');
                }
            });
        }, redirectFromPage: function redirectFromPage(ref) {
            if (ref) {// trường hợp tôn tại biết ref => redirect ref
                window.location.href = decodeURIComponent(ref);
            } else {// id/login
                window.location.reload();
            }
        }, redirectFromLoginToRegister: function redirectFromLoginToRegister(page_register) {
            page_register = page_register ? page_register : false;
            var ref = LHM.common.getParam('redirect') || encodeURIComponent(window.location.href);
            if (page_register == "signin") {
                if (!ref) {
                    window.location.href = base_url + '/signin';
                } else {
                    window.location.href = base_url + '/signin?redirect=' + ref;
                }
            } else if (page_register == "signup") {
                if (!ref) {
                    window.location.href = base_url + '/signup';
                } else {
                    window.location.href = base_url + '/signup?redirect=' + ref;
                }
            } else if (page_register == "forgot") {
                if (!ref) {
                    window.location.href = base_url + '/forgot-password';
                } else {
                    window.location.href = base_url + '/forgot-password?redirect=' + ref;
                }
            }
        }, login_google_v2: function login_google_v2(confirm) {
            var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var buttonGoogle = document.getElementById("login_google"),
                redirect_hash = localStorage.getItem('redirect_hash');

            function handleCredentialResponse(response) {
                $.ajax({
                    type: 'POST',
                    data: {jwt: response.credential, _token: $.cookie('_token'), confirm: confirm},
                    url: base_url + '/id/loginGoogleV2',
                    dataType: 'json',
                    success: function success(data) {
                        if (!data.error) {
                            if (reload) {
                                window.location.reload();
                            } else if (data.confirm == 1) {
                                if (data.redirect != '') {
                                    if (redirect_hash) {
                                        window.location.href = data.redirect + redirect_hash;
                                        localStorage.removeItem("redirect_hash");
                                    } else window.location.href = data.redirect;
                                } else window.location.reload();
                            } else if (data.redirect != '') {
                                if (redirect_hash) {
                                    window.location.href = data.redirect + redirect_hash;
                                    localStorage.removeItem("redirect_hash");
                                } else window.location.href = data.redirect;
                            } else {
                                window.location.href = base_url;
                            }
                        } else {
                            if (data.type && data.type == 'empty_email') {
                                window.location.href = base_url + '/signup?msg=Tài khoản Gmail của bạn không chia sẻ địa chỉ email, bạn vui lòng đăng ký tài khoản!';
                            } else if (data.ms) {
                                LHM.common.notify(null, 'danger', data.ms);
                            } else if (data.href) {
                                window.location.href = data.href;
                            }
                        }
                    },
                    error: function error(err) {
                        LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                    }
                });
            }

            window.onload = function () {
                if (typeof google !== "undefined") {
                    google.accounts.id.initialize({
                        client_id: "265899770624-eltqmla0mtbrbi8h6o81k1dbt9as6ron.apps.googleusercontent.com",
                        key_id: "AIzaSyDz9bTLoCJZoSHCEEcY-WhIzbDxSjFU9AA",
                        callback: handleCredentialResponse
                    });
                    google.accounts.id.renderButton(buttonGoogle, {
                            theme: "outline",
                            size: "large",
                            type: "icon",
                            shape: "circle"
                        }// customization attributes
                    );
                    google.accounts.id.prompt();// also display the One Tap dialog
                }
            };
        }, login_google: function login_google(confirm) {
            var auth2;
            var googleUser = {};
            var auth3;
            var redirect_hash = localStorage.getItem('redirect_hash');
            window.onLoadCallback = function () {
                gapi.load('auth2', function () {
                    auth2 = gapi.auth2.init({
                        client_id: '948827084286-2jujgs934kfm7dton0aqbupqvqskk37m.apps.googleusercontent.com',
                        cookiepolicy: 'single_host_origin'// Request scopes in addition to 'profile' and 'email'
// scope: 'profile email'
                    });
                    auth3 = true;
                    startApp();
                });
            };
            var startApp = function startApp() {
                var element = document.getElementById('login_google');
                auth2.attachClickHandler(element, {}, function (googleUser) {
                    console.log(googleUser.getBasicProfile().getImageUrl());
                    $('#login_google').attr('disabled', 'disabled');
                    $.ajax({
                        type: 'POST',
                        data: {
                            name: googleUser.getBasicProfile().getName(),
                            photo: googleUser.getBasicProfile().getImageUrl(),
                            email: googleUser.getBasicProfile().getEmail(),
                            _token: $.cookie('_token'),
                            confirm: confirm
                        },
                        url: base_url + '/id/loginGoogle',
                        dataType: 'json',
                        success: function success(data) {
                            if (!data.error && data.confirm == 1) {
                                if (data.redirect != '') {
                                    if (redirect_hash) {
                                        window.location.href = data.redirect + redirect_hash;
                                        localStorage.removeItem("redirect_hash");
                                    } else window.location.href = data.redirect;
                                } else window.location.reload();
                            } else if (!data.error && data.redirect != '') {
                                if (redirect_hash) {
                                    window.location.href = data.redirect + redirect_hash;
                                    localStorage.removeItem("redirect_hash");
                                } else window.location.href = data.redirect;
                            } else if (data.error && data.type == 'empty_email') {
                                window.location.href = base_url + '/signup?msg=Tài khoản google của bạn không chia sẻ địa chỉ email, bạn vui lòng đăng ký tài khoản!';
                            } else if (!data.error && data.redirect == '') {
                                window.location.href = base_url;
                            } else if (data.error && data.ms) {
                                window.location.href = base_url + '/signup?msg=' + data.ms;
                            } else if (data.error && data.href) {
                                window.location.href = data.href;
                            }
                            $('#login_google').removeAttr('disabled');
                        },
                        error: function error(err) {
                            LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                        }
                    });
                }, function (error) {
                    console.log(JSON.stringify(error, undefined, 2));
                });
            };
            if (auth3) startApp();
        }, login_facebook: function login_facebook(confirm) {
            var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var ref = LHM.common.getParam('redirect');
            var url_site = 'https://edubit.vn';
            if (base_url.indexOf('edubit.vn') == -1) var url_site = base_url;
            if (ref) {// var link = base_url+'/id/loginFacebook?redirect=' + ref
                var link = url_site + '/id/loginFacebook?redirect=' + ref;
            } else {// var link = base_url+'/id/loginFacebook'
                var link = url_site + '/id/loginFacebook';
            }
            LHM.common.PopupCenter(link, 'Facebook Confirm', 800, 500, function (windowLoginFacebook) {
                window.loginFacebook = windowLoginFacebook;
            });
            setInterval(function () {
                LHM.id.checkCookieLoginFacebook(confirm, reload);
            }, 2000);
        }, checkCookieLoginFacebook: function checkCookieLoginFacebook(confirm) {
            var reload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            if ($.cookie('cfb')) {
                var redirect_hash = localStorage.getItem('redirect_hash');
                $.ajax({
                    type: 'POST',
                    data: {cfb: $.cookie('cfb'), _token: $.cookie('_token'), confirm: confirm},
                    url: '/id/processLoginFacebook',
                    dataType: 'json',
                    success: function success(data) {
                        window.loginFacebook.close();
                        if (!data.error) {
                            if (reload) {
                                window.location.reload();
                            } else if (data.confirm == 1) {
                                if (data.redirect != '') {
                                    if (redirect_hash) {
                                        window.location.href = data.redirect + redirect_hash;
                                        localStorage.removeItem("redirect_hash");
                                    } else window.location.href = data.redirect;
                                } else window.location.reload();
                            } else if (data.redirect != '') {
                                if (redirect_hash) {
                                    window.location.href = data.redirect + redirect_hash;
                                    localStorage.removeItem("redirect_hash");
                                } else window.location.href = data.redirect;
                            } else {
                                window.location.href = base_url;
                            }
                        } else {
                            if (data.type && data.type == 'empty_email') {
                                window.location.href = base_url + '/signup?msg=Tài khoản facebook của bạn không chia sẻ địa chỉ email, bạn vui lòng đăng ký tài khoản!';
                            } else if (data.ms) {
                                window.location.href = base_url + '/signup?msg=' + data.ms;
                            } else if (data.href) {
                                window.location.href = data.href;
                            }
                        }
                    },
                    error: function error(err) {//LHM.common.notify(null, 'danger', 'có lỗi xảy ra')
                    }
                });
            }
        }, register: function register(curr) {
            grecaptcha.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {
                var token;
                return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                    while (1) switch (_context3.prev = _context3.next) {
                        case 0:
                            _context3.prev = 0;
                            _context3.next = 3;
                            return grecaptcha.execute(GOOGLE_RECAPTCHA_V3_SITE_KEY, {action: 'register'});
                        case 3:
                            token = _context3.sent;
                            $('#captcha').val(token);
                            callback();
                            _context3.next = 11;
                            break;
                        case 8:
                            _context3.prev = 8;
                            _context3.t0 = _context3["catch"](0);
                            callback();
                        case 11:
                        case"end":
                            return _context3.stop();
                    }
                }, _callee3, null, [[0, 8]]);
            })));
            var callback = function callback() {
                var datastring = $('#id #form-register').serialize() + '&_token=' + $.cookie('_token');
                $(curr).attr('disabled', 'disabled');
                var redirect_hash = localStorage.getItem('redirect_hash');
                $.ajax({
                    type: 'POST',
                    url: base_url + '/id/submitRegister',
                    data: datastring,
                    dataType: 'json',
                    success: function success(data) {
                        if (data.error && data.msg && data.msg.length > 0) {
                            for (var i = 0; i < data.msg.length; i++) {
                                LHM.common.notify(null, 'warning', data.msg[i]);
                            }
                            $(curr).removeAttr('disabled');
                        }
                        if (!data.error && data.redirect) {
                            if (redirect_hash) {
                                LHM.id.redirectFromPage(data.redirect + redirect_hash);
                                localStorage.removeItem("redirect_hash");
                            } else LHM.id.redirectFromPage(data.redirect);
                        } else if (data.error) {
                            return;
                        } else {
                            if (redirect_hash) {
                                LHM.id.redirectFromPage(data.redirect + redirect_hash);
                                localStorage.removeItem("redirect_hash");
                            } else LHM.id.redirectFromPage(data.redirect);
                        }
                        if (sid === '665550cce275cbf47a45e5dc') {
                            localStorage.username = $('#form-register #email').val();
                            localStorage.full_name = $('#form-register #name').val();
                            localStorage.phone = $('#form-register #phone').val();
                        }
                    },
                    error: function error(err) {
                        LHM.common.notify(null, 'danger', 'Đăng ký thất bại');
                        $(curr).removeAttr('disabled');
                    }
                });
            };
        }, registerService: function registerService(curr) {
            grecaptcha.ready(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {
                var token;
                return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                    while (1) switch (_context4.prev = _context4.next) {
                        case 0:
                            _context4.prev = 0;
                            _context4.next = 3;
                            return grecaptcha.execute(GOOGLE_RECAPTCHA_V3_SITE_KEY, {action: 'register'});
                        case 3:
                            token = _context4.sent;
                            $('#captcha').val(token);
                            callback();
                            _context4.next = 11;
                            break;
                        case 8:
                            _context4.prev = 8;
                            _context4.t0 = _context4["catch"](0);
                            callback();
                        case 11:
                        case"end":
                            return _context4.stop();
                    }
                }, _callee4, null, [[0, 8]]);
            })));
            var callback = function callback() {
                var token = '&_token=' + $.cookie('_token');
                var datastring = $('#id #form-register').serialize() + token;
                $(curr).attr('disabled', 'disabled');
                $('.wait').show();//show loading
                $.ajax({
                    type: 'POST',
                    url: base_url + '/id/submitRegisterService',
                    data: datastring,
                    dataType: 'json',
                    success: function success(data) {//hidden loading
                        $('.wait').hide();//refresh captcha
                        $('#reset_captcha').trigger('click');
                        if (data.error) {
                            for (var i = 0; i < data.msg.length; i++) {
                                LHM.common.notify(null, 'warning', data.msg[i]);
                            }
                            $(curr).removeAttr('disabled');
                        } else {
                            LHM.id.redirectFromPage(data.redirect);
                        }
                    }
                });
            };
        }, forgot_password: function forgot_password(curr) {
            document.getElementById('forgot_password').disabled = true;
            var redirect = LHM.common.getParam('redirect');
            var email = $('#email').val();
            $(curr).attr('disabled', 'disabled');
            $('.wait').show();//show loading
            $('#alert_success').text('');
            $.ajax({
                type: 'POST',
                url: 'id/sendMailForgotPassword',
                data: {_token: $.cookie('_token'), email: email, redirect: redirect},
                dataType: 'json',
                success: function success(data) {//hidden loading
                    $('.wait').hide();
                    $('#email').val('');
                    $(curr).removeAttr('disabled');
                    if (data.error == true && data.msg && data.msg.length > 0) {
                        for (var i = 0; i < data.msg.length; i++) {
                            document.getElementById('forgot_password').disabled = false;
                            LHM.common.notify(null, 'warning', data.msg[i]);
                        }
                    } else $('#alert_success').text(__('Đã gửi email thay đổi password, bạn vui lòng kiểm tra email.'));
                }
            });
        }, change_password: function change_password(curr) {
            var pass = $('#password').val();
            var r_pass = $('#r_password').val();
            var code = LHM.common.getParam('code');
            var redirect = LHM.common.getParam('redirect');
            $(curr).attr('disabled', 'disabled');
            $('.wait').show();//show loading
            $.ajax({
                type: 'POST',
                url: 'id/changePassWord',
                data: {_token: $.cookie('_token'), password: pass, r_password: r_pass, code: code},
                dataType: 'json',
                success: function success(data) {//hidden loading
                    $('.wait').hide();
                    $(curr).removeAttr('disabled');
                    if (!data.error) {
                        LHM.common.notify('fa fa-check', 'info', data.msg[0]);
                        if (redirect) {
                            setTimeout(function () {
                                window.location.href = base_url + (data.onsite ? '/signin' : '/login') + '?redirect=' + redirect;
                            }, 1000);
                        } else {
                            setTimeout(function () {
                                window.location.href = base_url + (data.onsite ? '/signin' : '/login');
                            }, 1000);
                        }
                    } else {
                        LHM.common.notify(null, 'warning', data.msg[0]);
                    }
                }
            });
        }, updateProfile: function updateProfile() {
            $.ajax({
                type: 'POST',
                url: '/update',
                data: $('#form-update-profile').serialize() + '&_token=' + $.cookie('_token'),
                dataType: 'json',
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        if (res.status && res.msg_success) {
                            LHM.common.notify(null, 'success', res.msg_success);
                        }
                        if (res.messages && res.messages.length > 0) {
                            for (var i = 0; i < res.messages.length; i++) {
                                LHM.common.notify(null, 'warning', res.messages[i]);
                            }
                        }
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', err.messages[0]);
                }
            });
        }, changePassword: function changePassword() {
            $.ajax({
                type: 'POST',
                url: '/id/changePasswordProfile',
                data: $('#form-update-password').serialize() + '&_token=' + $.cookie('_token'),
                dataType: 'json',
                success: function success(res) {
                    LHM.common.notifyResponse(res.message, 'success');
                    $('#form-update-password')[0].reset();
                },
                error: function error(err) {
                    LHM.common.readError(err);
                }
            });
        }, request_send_email: function request_send_email(curr) {
            $(curr).attr('disabled', 'disabled');
            var email = $(curr).parents('#form-verify-email').find('#email').val();
            $.ajax({
                type: 'POST',
                url: base_url + '/id/sendMailVerify',
                data: {_token: $.cookie('_token'), email: email},
                success: function success(res) {
                    $(curr).removeAttr('disabled');
                    var msg = '';
                    if (res.status) {
                        msg = '<div class="alert alert-success" role="alert">' + res.message + '</div>';
                        $('.process-resp').html(msg);
                        if (res.redirect) window.location.reload();
                    } else {
                        msg = '<div class="alert alert-warning" role="alert">' + res.message + '</div>';
                        $('.process-resp').html(msg);
                    }
                }
            });
        }, transactionHistory: function transactionHistory() {
            $.ajax({
                type: 'GET',
                url: base_url + '/id/transactionHistory',
                dataType: 'json',
                beforeSend: function beforeSend() {
                    $('#list_order_history').html('<tr><td colspan="4" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                },
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        $('#list_order_history').html('');
                        var html = '';
                        if (rs.data.length > 0) {
                            $.each(rs.data, function (k, v) {
                                html += '<tr>' + '<td>' + v['transaction'] + '</td>' + '<td>' + v['time'] + '</td>' + '<td>' + v['oid'] + '</td>' + '</tr>';
                            });
                        } else {
                            html = '<tr><td colspan="4">' + __('Không có dữ liệu') + '</td></tr>';
                        }
                        $('#list_order_history').html(html);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', __('có lỗi xảy ra'));
                }
            });
        }, activateApiHistory: function activateApiHistory() {
            $.ajax({
                type: 'GET',
                url: base_url + '/id/activateApiHistory',
                dataType: 'json',
                beforeSend: function beforeSend() {
                    $('#list_activate_history').html('<tr><td colspan="5" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                },
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        $('#list_activate_history').html('');
                        var html = '';
                        if (rs.data.length > 0) {
                            $.each(rs.data, function (k, v) {
                                html += '<tr>' + '<td>' + v['stt'] + '</td>' + '<td>' + v['time_create'] + '</td>' + '<td>' + v['count_course_active'] + '</td>' + '<td>' + v['count_time_expired'] + '</td>' + '<td>' + v['time_expired_course_active'] + '</td>' + '</tr>';
                            });
                        } else {
                            html = '<tr><td colspan="5">' + __('Không có dữ liệu') + '</td></tr>';
                        }
                        $('#list_activate_history').html(html);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', __('có lỗi xảy ra'));
                }
            });
        }, updatePhone: function updatePhone(curr) {
            var data = {_token: $.cookie('_token'), phone: $('#update-phone').val()};
            $.ajax({
                type: 'POST',
                url: base_url + '/id/updatePhoneOldId',
                data: data,
                dataType: 'json',
                success: function success(data) {
                    if (!data.error) {
                        var url = new URL(window.location.href);
                        var redirect = url.searchParams.get('redirect');
                        window.location.href = redirect !== null ? redirect : data.redirect;
                    }
                    if (data.error) {
                        LHM.common.notify(null, 'danger', data.msg);
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', __('có lỗi xảy ra'));
                }
            });
        }, updateUsername: function updateUsername(curr) {
            var data = {_token: $.cookie('_token'), username: $('#username').val()};
            $.ajax({
                type: 'POST',
                url: base_url + '/id/updateUsernameOldId',
                data: data,
                dataType: 'json',
                success: function success(data) {
                    if (!data.error) {
                        window.location.href = data.redirect;
                    }
                    if (data.error) {
                        LHM.common.notify(null, 'danger', data.msg);
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', __('có lỗi xảy ra'));
                }
            });
        }, filemanager: function filemanager() {
            $.alert({
                title: "Chọn ảnh",
                content: 'url:' + base_url + '/uploader/genuploader?extratools=library,upimage',
                columnClass: "col-sm-8",
                buttons: {close: {text: 'Đóng'}},
                onContentReady: function onContentReady() {
                    window.filemanager = this;//handle uploader
                    LHM.uploader.init(function (data_file) {//calbback when upload success
//object file
                        if (data_file._id) {
                            $('.upload-cover img').attr('src', data_file['url']);
                            $('.upload-cover #id_image').val(data_file['_id']['$id']);
                        } else {//[datafile, datafile]
                            for (var i in data_file) {//LHM.lessons.addfiletolesson(data_file[i], lesson_id, false);
                                $('.upload-cover img').attr('src', data_file[i]['url']);
                                $('.upload-cover #id_image').val(data_file[i]['fid']);
                            }
                        }//close popup
                        window.filemanager.close();
                    });
                }
            });
        }
    }, affiliate: {
        listUsersAff: function listUsersAff(page, start, end) {
            page = page ? page : 0;
            start = start ? start : null;
            end = end ? end : null;
            var data = {limit_record: page, start: start, end: end};
            $.ajax({
                type: 'GET',
                url: base_url + '/affiliate/listUsersAff',
                data: data,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.pagination_site(rs.count_record, rs.limit, page, 'list_users_aff', {
                            start: start,
                            end: end
                        });
                        $('#list_users_aff tbody').html('');
                        if (rs.view_aff && $('#list_users_aff thead th#acction_user_aff').length === 0) {
                            $('#list_users_aff thead tr').append('<th id="acction_user_aff"></th>');
                        }
                        var html = '';
                        if (rs.data.length > 0) {
                            rs.data.map(function (o, k) {
                                var buttonViewAff = '';
                                if (rs.view_aff) {
                                    buttonViewAff = "<td><a href=\"javascript:;\" title=\"Chi ti\u1EBFt Affiliate\" onclick=\"LHM.affiliate.viewAff('".concat(o._id, "')\" ><i class=\"fas fa-eye\"></i></a></td>");
                                }
                                html += '<tr>' + '<td>' + o['stt'] + '</td>' + '<td>' + o['fullname'] + '</td>' + '<td>' + o['email'] + '</td>' + '<td>' + o['phone'] + '</td>' + '<td>' + o['createdAt'] + '</td>' + '<td>' + o['src'] + '</td>' + buttonViewAff + '</tr>';
                            });
                        } else {
                            html = '<tr><td colspan="6">' + __('Không có dữ liệu') + '</td></tr>';
                        }
                        $('#list_users_aff tbody').html(html);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', __('có lỗi xảy ra'));
                }
            });
        }, viewAff: function viewAff(id) {
            $.get('/affiliate/infoOneBySite/' + id, function (res) {
                if (res.items && res.items.length) {
                    var genBody = function genBody(items) {
                        var left = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
                        var vClass = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
                        items.forEach(function (value, key) {
                            var _value$aff_id;
                            var classFor = vClass;
                            var action_show = '';
                            if (value.items && value.items.length) {
                                action_show = "<i class=\"fas fa-angle-right mr-2 cursor-pointer action-show\"></i>";
                            }
                            var view_study_user = '';
                            if (!value.not_action) {
                                view_study_user = "<a href=\"javascript:;\" class=\"view-study-user\" title=\"Ti\u1EBFn tr\xECnh h\u1ECDc t\u1EADp\"><i class=\"far fa-eye\"></i></a>";
                            }
                            tbody += "\n                                <tr data-id=\"".concat(value._id, "\" class=\"").concat(classFor, "\" data-number=\"0\" style=\"").concat(id === value._id ? 'color: red' : '', "\">\n                                    <td><div style=\"padding-left: ").concat(left, "px\">").concat(action_show).concat(value.fullname, "</div></td>\n                                    <td>").concat((_value$aff_id = value.aff_id) !== null && _value$aff_id !== void 0 ? _value$aff_id : '', "</td>\n                                    <td>").concat(value.email, "</td>\n                                    <td class=\"text-center\">").concat(value.phone, "</td>\n                                    <td class=\"text-center\">").concat(view_study_user, "</td>\n                                </tr>\n                                ");
                            classFor += " ".concat(value._id);
                            if (action_show) {
                                genBody(value.items, left + 20, classFor);
                            }
                        });
                    };
                    var tbody = '';
                    genBody(res.items);
                    var html = "<div class=\"table-responsive\"><table class=\"table table-bordered table-view-affiliate\"><thead><tr><th>H\u1ECD t\xEAn</th><th>Username</th><th>Email</th><th width=\"120\">S\u1ED1 \u0111i\u1EC7n tho\u1EA1i</th><th></th></tr></thead><tbody>".concat(tbody, "</tbody></table></div>");
                    $.dialog({
                        title: 'Chi tiết Affiliate',
                        columnClass: 'container',
                        content: html,
                        onContentReady: function onContentReady() {
                            $('table.table-view-affiliate i.action-show').click(function () {
                                var show = $(this).hasClass('fa-angle-right');
                                $(".".concat($(this).closest('tr').data('id'))).each(function () {
                                    $(this).attr('data-number', Math.max(0, parseInt($(this).attr('data-number')) + (show ? 1 : -1)));
                                });
                                $(this).toggleClass('fa-angle-right fa-angle-down');
                            });
                            $('table.table-view-affiliate .view-study-user').click(function () {
                                $.get('/courses/listCourseOneStudent/' + $(this).closest('tr').data('id'), {
                                    limit: 1000,
                                    not_action: 1
                                }, function (study) {
                                    $.dialog({
                                        title: 'Tiến trình học tập',
                                        columnClass: 'col-md-8',
                                        content: "<div class=\"table-responsive\"><table class=\"table table-bordered\"><thead><tr><th>Kh\xF3a h\u1ECDc</th><th>Ng\xE0y h\u1EBFt h\u1EA1n</th><th>Ti\u1EBFn tr\xECnh h\u1ECDc t\u1EADp</th></tr></thead><tbody>".concat(study.html, "</tbody></table></div>")
                                    });
                                });
                            });
                        }
                    });
                }
            });
        }, listOrdersAff: function listOrdersAff(page, start, end, filter) {
            page = page ? page : 0;
            start = start ? start : null;
            end = end ? end : null;
            filter = filter ? filter : 0;
            var data = {limit_record: page, start: start, end: end, filter: filter};
            $.ajax({
                type: 'GET',
                url: base_url + '/affiliate/listOrdersAff',
                data: data,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.pagination_site(rs.count_record, rs.limit, page, 'list_orders_aff', {
                            start: start,
                            end: end,
                            filter: filter
                        });
                        $('#list_orders_aff tbody').html('');
                        var html = '';
                        $('#total_profit').text(rs.total_profit);
                        if (rs.data.length > 0) {
                            rs.data.map(function (o, k) {
                                html += '<tr>' + '<td>' + o['stt'] + '</td>' + '<td><div class="my-ago">' + o['_id'] + '</div></td>' + '<td><div class="my-ago"><span class="badge badge-' + o['payment_method']['icon'] + '">' + o['payment_method']['label'] + '</span></div></td>' + '<td>' + o['total'] + '</td>' + '<td>' + o['user'] + '</td>' + '<td>' + o['src'] + '</td>' + '<td><div class="my-ago"><span class="badge badge-' + o['status']['icon'] + '">' + o['status']['label'] + '</span></div></td>' + '<td>' + o['createdAt'] + '</td>' + '<td class="text-center">' + '<a href="javascript:void(0);" class="btn-view-order-aff" data-id="' + o['_id'] + '"><i class="fa fa-info"></i> ' + __('Sản phẩm') + ' </a></li>' + '</td>' + '</tr>';
                            });
                        } else {
                            html = '<tr><td colspan="6">' + __('Không có dữ liệu') + '</td></tr>';
                        }
                        $('#list_orders_aff tbody').html(html);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'Error');
                }
            });
        }, updateAffLink: function updateAffLink() {
            var aff_id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
            var datastring = {aff_id: $('.aff_id_input').val(), _token: $.cookie('_token')};
            if (aff_id) {
                $.confirm({
                    title: __('Thay đổi link aff'),
                    columnClass: 'col-md-6',
                    content: __('Thay đổi username sẽ làm mất user và các đơn hàng trước đó, bạn có muốn thay đổi?'),
                    buttons: {
                        Ok: function Ok() {
                            $.ajax({
                                type: 'POST',
                                url: base_url + '/affiliate/updateAffLink',
                                data: datastring,
                                dataType: 'json',
                                success: function success(res) {
                                    if (res.login && res.login == 1) {
                                        if (res.status) {
                                            LHM.common.notify(null, 'success', __('Cập nhật thành công'));// $('.aff_id_input').attr('disabled','disabled');
// $('.btn-save-aff-id').hide();
                                        }
                                        if (res.messages && res.messages.length > 0) {
                                            for (var i = 0; i < res.messages.length; i++) {
                                                LHM.common.notify(null, 'warning', res.messages[i]);
                                            }
                                        }
                                    } else if (res.login && res.login == 2) {
                                        window.location = res.href;
                                    }
                                },
                                error: function error(err) {
                                    LHM.common.notify(null, 'danger', 'Error');
                                }
                            });
                        }, Cancel: function Cancel() {
                        }
                    }
                });
            } else {
                $.ajax({
                    type: 'POST',
                    url: base_url + '/affiliate/updateAffLink',
                    data: datastring,
                    dataType: 'json',
                    success: function success(res) {
                        if (res.login && res.login == 1) {
                            if (res.status) {
                                LHM.common.notify(null, 'success', __('Cập nhật thành công'));
                                if (res.confirm == 0) window.location.reload();// $('.aff_id_input').attr('disabled','disabled');
// $('.btn-save-aff-id').hide();
                            }
                            if (res.messages && res.messages.length > 0) {
                                for (var i = 0; i < res.messages.length; i++) {
                                    LHM.common.notify(null, 'warning', res.messages[i]);
                                }
                            }
                        } else if (res.login && res.login == 2) {
                            window.location = res.href;
                        }
                    },
                    error: function error(err) {
                        LHM.common.notify(null, 'danger', __('có lỗi xảy ra'));
                    }
                });
            }
        }, updatePaymentAff: function updatePaymentAff() {
            var datastring = $('#form_setting_payment_aff').serialize();
            datastring = datastring + '&_token=' + $.cookie('_token');
            $.ajax({
                type: 'POST',
                url: '/affiliate/updatePaymentAff',
                data: datastring,
                dataType: 'json',
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        if (!res.error) {
                            LHM.common.notify(null, 'success', __('Cập nhật thành công'));
                        } else {
                            for (var i = 0; i < res.msg.length; i++) {
                                LHM.common.notify(null, 'warning', res.msg[i]);
                            }
                        }
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'Error');
                }
            });
        }, getPaymentAff: function getPaymentAff() {
            $.ajax({
                type: 'GET', url: '/affiliate/updatePaymentAff', success: function success(res) {
                    if (res.login && res.login == 1) {
                        if (res.data) {
                            if (res.data.type_payment) $("input[name=pmt_type][value=" + res.data.type_payment + "]").trigger('click');
                            $('#account_name').val(res.data.account_name);
                            $('#account_number').val(res.data.account_number);
                            $('#bank').val(res.data.bank);
                            $('#branch').val(res.data.branch);
                            $('#tax_code').val(res.data.tax_code);
                            $('#payment_email_pay').val(res.data.email_receive);
                        }
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                }, error: function error(err) {
                    LHM.common.notify(null, 'danger', __('có lỗi xảy ra'));
                }
            });
        }, getDashboard: function getDashboard(start, end, label) {
            $.get('/affiliate/overview/', {start: start, end: end}, function (rs) {
                if (rs.login && rs.login == 1) {
                    var orders = rs.orders.result;
                    var data = [];
                    var labels = [];
                    for (var i in orders) {
                        data.push(orders[i].count);
                        if (label == 'Today' || label == 'Yesterday' || start == end) {
                            var date = moment.unix(orders[i].first.sec).format('H:mm');
                        } else var date = moment.unix(orders[i].first.sec).format('DD MMM YYYY, H:mm');
                        labels.push(date);
                    }
                    $('.all-session span.total_order_aff').text(rs.count_order);
                    $('.all-session span.total_user_aff').text(rs.count_user);
                    $('.all-session span.total_profit_aff').text(rs.count_profit);
                    $('.all-session span.current_balance').text(rs.current_balance);
                    $('#current_balance_aff').text(rs.current_balance);
                    window.config.data.datasets[0].data = data;
                    window.config.data.labels = labels;//update charts
                    setTimeout(function () {
                        window.overview_aff.update();
                    }, 500);
                } else if (rs.login && rs.login == 2) {
                    window.location = rs.href;
                }
            });
        }, listCourseAff: function listCourseAff(page) {
            page = page ? page : 0;
            var cate_old = $('#id_category_filter_aff').val();
            var data = {
                limit_record: page,
                name: $('#name_course_filter_aff').val(),
                category: $('#id_category_filter_aff').val()
            };
            $.ajax({
                type: 'GET',
                url: base_url + '/affiliate/listCourseAff',
                data: data,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.pagination_site(rs.count_record, rs.limit, page, 'list_course_aff');
                        $('#list_course_aff tbody').html('');
                        var html = '';
                        if (rs.data.length > 0) {
                            rs.data.map(function (o, k) {
                                html += '<tr><td class="course-item-image"><img src="' + o['cover'] + '"></td>';
                                html += '<td><p class="teacher-name-course-section">' + o['name'] + '</p><p class="teacher-name-course-section"><i class="fa fa-user" aria-hidden="true"></i> ' + __('Giảng viên') + ': ' + o['teacher'] + '</p></td>';
                                html += '<td>' + o['count_student'] + '</td>';
                                html += '<td><div class="price-col">';
                                html += '<strong>' + o['price'] + '</strong>';
                                if (o['price_cost']) {
                                    html += '<br><strike>' + o['price_cost'] + '</strike>';
                                }
                                html += '</div></td>';
                                html += '<td><button data-link="' + o['link_detail'] + '" class="btn-copy-link-course-aff">Copy Link</button></td>';
                                html += '</tr>';
                            });
                        } else {
                            html = '<tr><td colspan="5">' + __('Không có dữ liệu') + '</td></tr>';
                        }
                        if (rs.category && !cate_old) {
                            var html_cate = '';
                            $.each(rs.category, function (index, el) {
                                html_cate += '<option value="' + el._id + '">' + el.name + '</option>';
                            });
                            $('#id_category_filter_aff').html('<option value="">--' + __('Chọn thể loại') + '--</option>' + html_cate);
                        }
                        $('#list_course_aff tbody').html(html);
                        $('.btn-copy-link-course-aff').click(function (event) {
                            var textArea = document.createElement('textarea');
                            textArea.textContent = $(this).attr('data-link');
                            document.body.append(textArea);
                            textArea.select();
                            document.execCommand("copy");
                            LHM.common.notify(null, 'success', __('Đã sao chép link chia sẻ'));
                            $('textarea').remove();
                        });
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'Error');
                }
            });
        }, listComboAff: function listComboAff(page) {
            page = page ? page : 0;
            var data = {limit_record: page};
            $.ajax({
                type: 'GET',
                url: base_url + '/affiliate/listComboAff',
                data: data,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.pagination_site(rs.count_record, rs.limit, page, 'list_combo_aff');
                        $('#list_combo_aff tbody').html('');
                        var html = '';
                        if (rs.data.length > 0) {
                            rs.data.map(function (o, k) {
                                html += '<tr><td class="course-item-image"><img src="' + o['cover'] + '"></td>';
                                html += '<td><p class="teacher-name-course-section">' + o['name'] + '</p></td>';
                                html += '<td><div class="price-col">';
                                html += '<strong>' + o['price'] + '</strong>';
                                if (o['price_cost']) {
                                    html += '<br><strike>' + o['price_cost'] + '</strike>';
                                }
                                html += '</div></td>';
                                html += '<td><button data-link="' + o['link_detail'] + '" class="btn-copy-link-course-aff">Copy Link</button></td>';
                                html += '</tr>';
                            });
                        } else {
                            html = '<tr><td colspan="4">Không có dữ liệu</td></tr>';
                        }
                        $('#list_combo_aff tbody').html(html);
                        $('.btn-copy-link-course-aff').click(function (event) {
                            var textArea = document.createElement('textarea');
                            textArea.textContent = $(this).attr('data-link');
                            document.body.append(textArea);
                            textArea.select();
                            document.execCommand("copy");
                            LHM.common.notify(null, 'success', __('Đã sao chép link chia sẻ'));
                            $('textarea').remove();
                        });
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, listPageAff: function listPageAff() {
            var html = '<tr><td colspan="4">' + __('Không có dữ liệu') + '</td></tr>';
            $.ajax({
                type: 'GET',
                url: base_url + '/affiliate/listPageAff',
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        if (rs.data.length > 0) {
                            html = '';
                            rs.data.map(function (o, k) {
                                html += '<tr><td>' + o['title'] + '</td>';
                                html += '<td><button data-link="' + o['link_detail'] + '" class="btn btn-sm btn-primary btn-copy-link-page-aff">Copy Link</button></td>';
                                html += '</tr>';
                            });
                        }
                    }
                },
                error: function error(err) {
                }
            }).always(function () {
                $('#list_page_aff tbody').html(html);
                $('.btn-copy-link-page-aff').click(function (event) {
                    var textArea = document.createElement('textarea');
                    textArea.textContent = $(this).attr('data-link');
                    document.body.append(textArea);
                    textArea.select();
                    document.execCommand("copy");
                    LHM.common.notify(null, 'success', __('Đã sao chép link chia sẻ'));
                    $('textarea').remove();
                });
            });
        }, listHistoryWithdrawl: function listHistoryWithdrawl(page) {
            page = page ? page : 0;
            var data = {limit_record: page};
            $.ajax({
                type: 'GET',
                url: base_url + '/affiliate/historyWithdrawl',
                data: data,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.pagination_site(rs.count_record, rs.limit, page, 'list_history_withdrawl');
                        $('#list_history_withdrawl').html('');
                        var html = '';
                        if (rs.data.length > 0) {
                            rs.data.map(function (o, k) {
                                html += '<tr><td>' + (k + 1) + '</td>';
                                html += '<td>' + o['amount'] + ' VND</td>';
                                html += '<td>' + o['createdAt'] + '</td>';// html +='<td>'+o['payment_method']+'</td>';
                                html += '</tr>';
                            });
                        } else {
                            html = '<tr><td colspan="3">' + __('Không có dữ liệu') + '</td></tr>';
                        }
                        $('#list_history_withdrawl').html(html);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, add_affiliate_level: function add_affiliate_level() {
            var html = '<div class="form-group">';
            html += '       <label>Cấp affiliate <span class="text-danger">*</span> : </label>';
            html += '    <input type="number" class="form-control" id="aff_level" onkeypress="return event.charCode >= 48" min="1" placeholder="Nhập cấp affiliate">';
            html += '    <br>';
            html += '       <label>Tỉ lệ(%)<span class="text-danger">*</span>: </label>';
            html += '    <input type="number" class="form-control" id="aff_percent" onkeypress="return event.charCode >= 48" min="1" max="100" placeholder="Nhập tỉ lệ affiliate">';
            html += '    <div class="invalid-feedback"></div>';
            html += '</div>';
            $.confirm({
                title: 'Thêm cấp affiliate', content: html, buttons: {
                    OK: {
                        text: 'OK', btnClass: 'btn-blue btn-add-live-popup', action: function action() {
                            var _this = this;//reset msg
                            var aff_level = _this.$content.find('#aff_level').val();
                            var aff_percent = _this.$content.find('#aff_percent').val();
                            $('.btn-add-live-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang tạo');
                            $('.btn-add-live-popup').attr('disabled', true);
                            $.ajax({
                                type: 'POST',
                                url: base_url + '/affiliate/add_affiliate_level',
                                data: {_token: $.cookie('_token'), aff_level: aff_level, aff_percent: aff_percent},
                                dataType: 'json',
                                success: function success(rs) {
                                    if (rs.login && rs.login == 1) {
                                        $('.btn-add-live-popup').html('OK');
                                        $('.btn-add-live-popup').removeAttr('disabled');
                                        _this.$content.find('.invalid-feedback').show();
                                        _this.$content.find('.invalid-feedback').html('');
                                        if (rs.error) {
                                            for (var i in rs.msg) {
                                                _this.$content.find('.invalid-feedback').append('<br>' + rs.msg[i]);
                                            }
                                        } else {
                                            LHM.common.notify(null, 'success', 'Thêm thành công');
                                            LHM.affiliate.get_list_affiliate_level();
                                            _this.close();
                                        }
                                    } else if (rs.login && rs.login == 2) {
                                        window.location = rs.href;
                                    }
                                },
                                error: function error(err) {
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, get_list_affiliate_level: function get_list_affiliate_level() {
            $.ajax({
                type: 'GET',
                url: base_url + '/affiliate/affiliate_level',
                data: {sid: sid},
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        if (!rs.error) {
                            $('#list_affiliate_level').html('');
                            var html = '';
                            if (rs.data) {
                                rs.data.map(function (o, k) {
                                    html += '<tr><td>Cấp ' + o['aff_level'] + '</td>';
                                    html += '<td>' + o['aff_percent'] + '%</td>';
                                    html += '<td><a href="javascript:;" onclick="LHM.affiliate.edit_aff_level(this)" data-id="' + o['_id'] + '" data-level="' + o['aff_level'] + '" data-rate="' + o['aff_percent'] + '"><i class="fas fa-edit"></i> Sửa</a></td>';
                                    html += '<td><a href="javascript:;" onclick="LHM.affiliate.delete_aff_level(this)" data-id="' + o['_id'] + '" data-level="' + o['aff_level'] + '" data-rate="' + o['aff_percent'] + '"><i class="fa fa-trash deletes"></i> Xóa</a></td>';
                                    html += '</tr>';
                                });
                            } else {
                                html = '<tr><td colspan="4">Không có dữ liệu</td></tr>';
                            }
                            $('#list_affiliate_level').html(html);
                        } else {
                            LHM.common.notify(null, 'danger', rs.msg[0]);
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, edit_aff_level: function edit_aff_level(curr) {
            var level = $(curr).attr('data-level');
            var rate = $(curr).attr('data-rate');
            var id = $(curr).attr('data-id');
            var html = '<div class="form-group">';
            html += '       <label>Cấp affiliate <span class="text-danger">*</span> : </label>';
            html += '    <input type="number" value="' + level + '" class="form-control" id="aff_level" onkeypress="return event.charCode >= 48" min="1" placeholder="Nhập cấp affiliate">';
            html += '    <br>';
            html += '       <label>Tỉ lệ(%)<span class="text-danger">*</span>: </label>';
            html += '    <input type="number" value="' + rate + '" class="form-control" id="aff_percent" onkeypress="return event.charCode >= 48" min="1" max="100" placeholder="Nhập tỉ lệ affiliate">';
            html += '    <div class="invalid-feedback"></div>';
            html += '</div>';
            $.confirm({
                title: 'Cập nhật cấp affiliate', content: html, buttons: {
                    OK: {
                        text: 'OK', btnClass: 'btn-blue', action: function action() {
                            var _this = this;//reset msg
                            var aff_level = _this.$content.find('#aff_level').val();
                            var aff_percent = _this.$content.find('#aff_percent').val();
                            $.ajax({
                                type: 'POST',
                                url: base_url + '/affiliate/update_affiliate_level',
                                data: {
                                    _token: $.cookie('_token'),
                                    aff_level: aff_level,
                                    aff_percent: aff_percent,
                                    id_aff_level: id
                                },
                                dataType: 'json',
                                success: function success(rs) {
                                    if (rs.login && rs.login == 1) {
                                        _this.$content.find('.invalid-feedback').show();
                                        _this.$content.find('.invalid-feedback').html('');
                                        if (rs.error) {
                                            for (var i in rs.msg) {
                                                _this.$content.find('.invalid-feedback').append('<br>' + rs.msg[i]);
                                            }
                                        } else {
                                            LHM.common.notify(null, 'success', 'Cập nhật thành công');
                                            LHM.affiliate.get_list_affiliate_level();
                                            _this.close();
                                        }
                                    } else if (rs.login && rs.login == 2) {
                                        window.location = rs.href;
                                    }
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, delete_aff_level: function delete_aff_level(curr) {
            var val_post = {_token: $.cookie('_token'), id_aff_level: $(curr).data('id')};
            $.confirm({
                title: 'Xóa cấp affiliate', content: 'Bạn có muốn tiếp tục không?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/affiliate/remove_affiliate_level',
                            data: val_post,
                            dataType: 'json',
                            success: function success(rs) {
                                if (rs.login && rs.login == 1) {
                                    if (!rs.error) {
                                        $(curr).closest("tr").remove();
                                        if ($('#list_affiliate_level tr').length == 0) {
                                            $('#list_affiliate_level').html('<tr><td colspan="5">Không có dữ liệu</td></tr>');
                                        }
                                    }
                                } else if (rs.login && rs.login == 2) {
                                    window.location = rs.href;
                                }
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }
    }, agency: {
        listUsersAgency: function listUsersAgency(page, start, end) {
            page = page ? page : 0;
            start = start ? start : null;
            end = end ? end : null;
            var data = {limit_record: page, start: start, end: end};
            $.ajax({
                type: 'GET',
                url: base_url + '/agency/listUsersAgency',
                data: data,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.pagination_site(rs.count_record, rs.limit, page, 'list_users_agency', {
                            start: start,
                            end: end
                        });
                        $('#list_users_agency tbody').html('');
                        var html = '';
                        if (rs.data.length > 0) {
                            rs.data.map(function (o, k) {
                                html += '<tr>' + '<td>' + o['stt'] + '</td>' + '<td>' + o['fullname'] + '</td>' + '<td>' + o['email'] + '</td>' + '<td>' + o['createdAt'] + '</td>' + '<td>' + o['src'] + '</td>' + '</tr>';
                            });
                        } else {
                            html = '<tr><td colspan="6">Không có dữ liệu</td></tr>';
                        }
                        $('#list_users_agency tbody').html(html);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, listOrdersAgency: function listOrdersAgency(page, start, end, filter) {
            page = page ? page : 0;
            start = start ? start : null;
            end = end ? end : null;
            filter = filter ? filter : 0;
            var data = {limit_record: page, start: start, end: end, filter: filter};
            $.ajax({
                type: 'GET',
                url: base_url + '/agency/listOrdersAgency',
                data: data,
                dataType: 'json',
                success: function success(rs) {
                    LHM.common.pagination_site(rs.count_record, rs.limit, page, 'list_orders_agency', {
                        start: start,
                        end: end,
                        filter: filter
                    });
                    $('#list_orders_agency tbody').html('');
                    var html = '';
                    $('#total_profit').text(rs.total_profit);
                    if (rs.data.length > 0) {
                        rs.data.map(function (o, k) {
                            html += '<tr>' + '<td>' + o['stt'] + '</td>' + '<td><div class="my-ago">' + o['_id'] + '</div></td>' + '<td><div class="my-ago"><span class="badge badge-' + o['payment_method']['icon'] + '">' + o['payment_method']['label'] + '</span></div></td>' + '<td>' + o['total'] + '</td>' + '<td>' + o['user'] + '</td>' + '<td>' + o['src'] + '</td>' + '<td><div class="my-ago"><span class="badge badge-' + o['status']['icon'] + '">' + o['status']['label'] + '</span></div></td>' + '<td>' + o['createdAt'] + '</td>' + '<td class="text-center">' + '<a href="javascript:void(0);" class="btn-view-order-agency" data-id="' + o['_id'] + '"><i class="fa fa-info"></i> Sản phẩm </a></li>' + '</td>' + '</tr>';
                        });
                    } else {
                        html = '<tr><td colspan="6">Không có dữ liệu</td></tr>';
                    }
                    $('#list_orders_agency tbody').html(html);
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, updateAgencyLink: function updateAgencyLink() {
            var aff_id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
            var datastring = {aff_id: $('.aff_id_input').val(), _token: $.cookie('_token')};
            if (aff_id) {
                $.confirm({
                    title: __('Thay đổi link aff'),
                    columnClass: 'col-md-6',
                    content: __('Thay đổi username sẽ làm mất user và các đơn hàng trước đó, bạn có muốn thay đổi?'),
                    buttons: {
                        Ok: function Ok() {
                            $.ajax({
                                type: 'POST',
                                url: base_url + '/agency/updateAgencyLink',
                                data: datastring,
                                dataType: 'json',
                                success: function success(res) {
                                    if (res.login && res.login == 1) {
                                        if (res.status) {
                                            LHM.common.notify(null, 'success', __('Cập nhật thành công'));// $('.aff_id_input').attr('disabled','disabled');
// $('.btn-save-aff-id').hide();
                                        }
                                        if (res.messages && res.messages.length > 0) {
                                            for (var i = 0; i < res.messages.length; i++) {
                                                LHM.common.notify(null, 'warning', res.messages[i]);
                                            }
                                        }
                                    } else if (res.login && res.login == 2) {
                                        window.location = res.href;
                                    }
                                },
                                error: function error(err) {
                                    LHM.common.notify(null, 'danger', 'Error');
                                }
                            });
                        }, Cancel: function Cancel() {
                        }
                    }
                });
            } else {
                $.ajax({
                    type: 'POST',
                    url: base_url + '/agency/updateAgencyLink',
                    data: datastring,
                    dataType: 'json',
                    success: function success(res) {
                        if (res.login && res.login == 1) {
                            if (res.status) {
                                LHM.common.notify(null, 'success', 'Cập nhật thành công!');// $('.aff_id_input').attr('disabled','disabled');
// $('.btn-save-aff-id').hide();
                            }
                            if (res.messages && res.messages.length > 0) {
                                for (var i = 0; i < res.messages.length; i++) {
                                    LHM.common.notify(null, 'warning', res.messages[i]);
                                }
                            }
                        } else if (res.login && res.login == 2) {
                            window.location = res.href;
                        }
                    },
                    error: function error(err) {
                        LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                    }
                });
            }
        }, updatePaymentAgency: function updatePaymentAgency() {
            var datastring = $('#form_setting_payment_aff').serialize();
            datastring = datastring + '&_token=' + $.cookie('_token');
            $.ajax({
                type: 'POST',
                url: '/agency/updatePaymentAgency',
                data: datastring,
                dataType: 'json',
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        if (!res.error) {
                            LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                        } else {
                            for (var i = 0; i < res.msg.length; i++) {
                                LHM.common.notify(null, 'warning', res.msg[i]);
                            }
                        }
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, getPaymentAgency: function getPaymentAgency() {
            $.ajax({
                type: 'GET', url: '/agency/updatePaymentAgency', success: function success(res) {
                    if (res.login && res.login == 1) {
                        if (res.data) {
                            if (res.data.type_payment) $("input[name=pmt_type][value=" + res.data.type_payment + "]").trigger('click');
                            $('#account_name').val(res.data.account_name);
                            $('#account_number').val(res.data.account_number);
                            $('#bank').val(res.data.bank);
                            $('#branch').val(res.data.branch);
                            $('#tax_code').val(res.data.tax_code);
                            $('#payment_email_pay').val(res.data.email_receive);
                        }
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                }, error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, getDashboard: function getDashboard() {
            $.post('/agency/overview/', {_token: $.cookie('_token')}, function (rs) {
                if (rs.login && rs.login == 1) {
                    $('.all-session span.total_order_aff').text(rs.count_order);
                    $('.all-session span.total_user_aff').text(rs.count_user);
                    $('.all-session span.total_profit_aff').text(rs.count_profit);
                    $('.all-session span.current_balance').text(rs.current_balance);
                    $('#current_balance_aff').text(rs.current_balance);
                    var html = '';
                    $('#list-profit-agency-user').html('<tr><td colspan="10" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                    if (rs.data.length > 0) {
                        $.each(rs.data, function (k, v) {
                            html += '<tr>';
                            html += '<td>' + v.time + '</td>';
                            html += '<td>' + v.count_user + '</td>';
                            html += '<td>' + v.count_order + '</td>';
                            html += '<td>' + v.total_revenue_paid + '</td>';
                            html += '<td>' + v.total_revenue_paid_new_order + '</td>';
                            html += '<td>' + v.total_revenue_net_new_order + '</td>';
                            html += '<td>' + v.percent_new_order + '</td>';
                            html += '<td>' + v.total_revenue_paid_upgrade_order + '</td>';
                            html += '<td>' + v.total_revenue_net_upgrade_order + '</td>';
                            html += '<td>' + v.percent_upgrade_order + '</td>';
                            html += '</tr>';
                        });
                        $('#list-profit-agency-user').html(html);
                    } else $('#list-profit-agency-user').html('<tr><td colspan="10">Không có dữ liệu</td></tr>');
                } else if (rs.login && rs.login == 2) {
                    window.location = rs.href;
                }
            });
        }, listHistoryWithdrawl: function listHistoryWithdrawl(page) {
            page = page ? page : 0;
            var data = {limit_record: page};
            $.ajax({
                type: 'GET',
                url: base_url + '/agency/historyWithdrawl',
                data: data,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.pagination_site(rs.count_record, rs.limit, page, 'list_history_withdrawl_agency');
                        $('#list_history_withdrawl_agency').html('');
                        var html = '';
                        if (rs.data.length > 0) {
                            rs.data.map(function (o, k) {
                                html += '<tr><td>' + (k + 1) + '</td>';
                                html += '<td>' + o['amount'] + ' VND</td>';
                                html += '<td>' + o['createdAt'] + '</td>';
                                html += '</tr>';
                            });
                        } else {
                            html = '<tr><td colspan="3">Không có dữ liệu</td></tr>';
                        }
                        $('#list_history_withdrawl_agency').html(html);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }
    }, courses: {
        update_fields_in_file: function update_fields_in_file(current, file_id) {
            var filename = $(current).attr('name');
            var html = '';
            html += '<label for="file_name_record">Đổi tên <span class="text-danger">*</span></label>';
            html += '    <input type="text" id="file_name_record" value="' + filename + '" class="form-control">';
            html += ' <div id="notify_empty_record"></div>';
            html += '</div>';
            $.confirm({
                title: 'Sửa',
                columnClass: 'col-md-6 col-md-offset-3',
                content: html,
                buttons: {
                    Ok: {
                        text: 'OK', btnClass: 'btn-blue', action: function action() {
                            var val_post = {
                                _token: $.cookie('_token'),
                                _id: file_id,
                                file_name: $('#file_name_record').val()
                            };
                            if ($('#file_name_record').val() == '') {
                                $('#notify_empty_record').html('<br><div class="alert alert-danger"><strong>Tên file không được trống!</strong></div>');
                                return false;
                            } else {
                                $.ajax({
                                    type: 'POST',
                                    url: base_url + '/courses/uploadFieldsInFile',
                                    data: val_post,
                                    dataType: 'json',
                                    success: function success(_success) {
                                        if (_success.login && _success.login == 1) {
                                            if (!_success.error) {
                                                $(current).attr({'name': val_post.file_name});
                                                LHM.common.notify('', 'success', 'Thay đổi tên file thành công');
                                                $('#filename_record_' + file_id).html(val_post.file_name);
                                            }
                                            if (_success.error) {
                                                LHM.common.notify(null, 'warning', _success.msg);
                                            }
                                        } else if (_success.login && _success.login == 2) {
                                            window.location = _success.href;
                                        }
                                    }
                                });
                            }
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        },
        create_course: function create_course(see_status) {
            CKEDITOR.instances.instructors_info.updateElement();
            CKEDITOR.instances.course_info.updateElement();// CKEDITOR.instances.welcome_course.updateElement();
            var tags_course = [];
            $("#hash_tag :selected").each(function () {
                tags_course.push($(this).val());
            });
            var datastring = $('#create_course').serialize();
            datastring = datastring + '&see_status=' + see_status + '&_token=' + $.cookie('_token') + '&tags_course=' + tags_course;
            if (see_status == 1) {
                $('.btn-add-create-course-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang xuất bản');
            } else if (see_status == 2) {
                $('.btn-add-create-draft-course-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang lưu nháp');
            }
            $('.btn-add-create-draft-course-popup').attr('disabled', true);
            $('.btn-add-create-course-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/courses/create_course',
                data: datastring,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        if (see_status == 1) {
                            $('.btn-add-create-course-popup').html(' Xuất bản');
                        } else if (see_status == 2) {
                            $('.btn-add-create-draft-course-popup').html(' Lưu nháp');
                        }
                        $('.btn-add-create-course-popup').removeAttr('disabled');
                        $('.btn-add-create-draft-course-popup').removeAttr('disabled');
                        if (!data.error && data.url_edit) {
                            LHM.common.notify('fa fa-check', 'success', data.msg[0]);
                            window.location.href = base_url + '/edit-course/' + data.url_edit;
                        }
                        if (data.error && data.msg && data.msg.length > 0) {
                            for (var i = 0; i < data.msg.length; i++) {
                                LHM.common.notify(null, 'danger', data.msg[i]);
                            }
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        },
        edit_course: function edit_course(course_id) {
            var list_kid_type = $('#kid_types').val();
            if (list_kid_type != undefined && list_kid_type.length > 0) {
                var kid_type = list_kid_type.join();
                $('#data_kid_types').val(kid_type);
            }
            course_id = course_id ? course_id : '';
            CKEDITOR.instances.instructors_info.updateElement();
            CKEDITOR.instances.course_info.updateElement();// CKEDITOR.instances.welcome_course.updateElement();
            var tags_course = [];
            $("#hash_tag :selected").each(function () {
                tags_course.push($(this).val());
            });
            var datastring = $('#create_course').serialize();
            datastring = datastring + '&course_id=' + course_id + '&_token=' + $.cookie('_token') + '&tags_course=' + tags_course;
            $('.btn-add-edit-course-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-add-edit-course-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/courses/edit_course',
                data: datastring,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('.btn-add-edit-course-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-add-edit-course-popup').removeAttr('disabled');
                        if (!data.error) {
                            LHM.common.notify('fa fa-check', 'success', data.msg[0]);
                            window.location.href = base_url + '/manage#course';
                        }
                        if (data.error && data.msg && data.msg.length > 0) {
                            for (var i = 0; i < data.msg.length; i++) {
                                LHM.common.notify(null, 'danger', data.msg[i]);
                            }
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        },
        getSettingCourse: function getSettingCourse() {
            var tab = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
            $.ajax({
                type: 'GET',
                url: base_url + '/courses/settingCourse',
                data: {id_course: id_course},
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        if (!rs.error) {
                            if (tab === 'files') {
                                if (rs.data.document) {
                                    var _rs$data$document$pub, _rs$data$document$pri;
                                    renderDataDocumentHtml((_rs$data$document$pub = rs.data.document["public"]) !== null && _rs$data$document$pub !== void 0 ? _rs$data$document$pub : [], '#list-document-public', 'public');
                                    renderDataDocumentHtml((_rs$data$document$pri = rs.data.document["private"]) !== null && _rs$data$document$pri !== void 0 ? _rs$data$document$pri : [], '#list-document-private', 'private');
                                }
                            } else {
                                var html = '';
                                html += '<select name="cond_complete_course[]" id="cond_complete_course" class="form-control" multiple>';
                                $.each(rs.courses, function (k, v) {
                                    html += '<option value="' + v._id['$id'] + '" ' + v.selected + '>' + v.name + '</option>';
                                });
                                html += '</select>';
                                $('#list-course-cond').html(html);
                                setTimeout(function () {
                                    $('#cond_complete_course').select2({
                                        allowClear: true,
                                        placeholder: "--- Chọn khóa học ---"
                                    });
                                }, 800);
                                if (rs.data.end_course_quiz) {
                                    $('#end_course_quiz').val(rs.data.end_course_quiz['$id']);
                                }
                                if (rs.data.url_redirect_course) {
                                    $('#url_redirect_course').val(rs.data.url_redirect_course);
                                }
                                if (rs.data.url_redirect_detail_course) {
                                    $('#url_redirect_detail_course').val(rs.data.url_redirect_detail_course);
                                }
                                if (rs.data.type_open_course) {
                                    $('input[type=radio][name=type_open_course][value=' + rs.data.type_open_course + ']').prop('checked', true).trigger('change');
                                }
                                if (rs.data.type_open_quiz_end_video) {
                                    $('input[type=radio][name=type_open_quiz_end_video][value=' + rs.data.type_open_quiz_end_video + ']').prop('checked', true);
                                }
                                if (rs.data.type_email_custom) {
                                    $('select[name=type_email_custom]').val(rs.data.type_email_custom);
                                }
                                if (rs.data.type_open_lesson) {
                                    $('input[type=radio][name=type_open_lesson][value=' + rs.data.type_open_lesson + ']').prop('checked', true).trigger('change');
                                    if (rs.data.type_open_lesson == 2) $('#open_time_lesson').val(rs.data.open_time_lesson); else if (rs.data.type_open_lesson == 3) $('#open_time_next_lesson').val(rs.data.open_time_next_lesson);
                                }
                                if (rs.data.type_close_lesson) {
                                    $('input[type=checkbox][name=type_close_lesson][value=' + rs.data.type_close_lesson + ']').prop('checked', true).trigger('change');
                                    $('.time_close_lesson').val(rs.data.time_close_lesson);
                                }
                                if (!rs.data.active_list_questions) {
                                    $('input[type=checkbox][name=active_list_questions]').prop('checked', false);
                                }
                                if (!rs.data.use_officeapps) {
                                    $('input[type=checkbox][name=use_officeapps]').prop('checked', false);
                                }
                                if (!rs.data.show_pdf_by_flipbook) {
                                    $('input[type=checkbox][name=show_pdf_by_flipbook]').prop('checked', false);
                                }
                            }
                        } else LHM.common.notify(null, 'danger', rs.msg[0]);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        },
        saveSettingCourse: function saveSettingCourse() {
            CKEDITOR.instances.welcome_course.updateElement();
            var form = $('#form-update-setting-course').serialize() + '&cid=' + id_course + '&_token=' + $.cookie('_token');
            $.ajax({
                type: 'POST',
                url: base_url + '/courses/settingCourse',
                data: form,
                dataType: 'json',
                success: function success(rs) {
                    if (!rs.error) {
                        LHM.common.notify(null, 'success', 'Cập nhật thành công');
                    } else {
                        $.each(rs.msg, function (k, v) {
                            LHM.common.notify(null, 'danger', v);
                        });
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        },
        cancel_remove_course: function cancel_remove_course(current, course_id) {
            var val_post = {_token: $.cookie('_token'), action: 'delete', course_id: course_id};
            $.confirm({
                title: 'Xóa khóa học', content: 'Bạn có muốn tiếp tục không?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/courses/cancelRemoveCourse',
                            data: val_post,
                            dataType: 'json',
                            success: function success(_success2) {
                                if (_success2.login && _success2.login == 1) {
                                    if (!_success2.error) {
                                        $(current).closest("tr").remove();
                                    }
                                } else if (_success2.login && _success2.login == 2) {
                                    window.location = _success2.href;
                                }
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        },
        removeReviewCms: function removeReviewCms(current, comment_id, type, id_comment_parent) {
            var course_id = $('#filter_course_cms').val();
            var total_record = $('#v-pills-review-cms #total_record').html();
            var val_post = {_token: $.cookie('_token'), comment_id: comment_id, type: type};
            $.confirm({
                title: 'Xóa', content: 'Bạn có muốn tiếp tục không?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/courses/removeReviewCms',
                            data: val_post,
                            dataType: 'json',
                            success: function success(_success3) {
                                if (_success3.login && _success3.login == 1) {
                                    if (_success3.error) {
                                        LHM.common.notify(null, 'success', 'Xóa thành công');
                                        $(current).parents('tr').remove();
                                        if (type == 2) {
                                            $('.' + comment_id).remove();
                                            $('.form_rep_' + comment_id).remove();
                                        }
                                        if (id_comment_parent) {
                                            var total_reply = $('#' + id_comment_parent + ' #total_reply_cms strong').html();
                                            if (total_reply >= 1) {
                                                $('#' + id_comment_parent + ' #total_reply_cms strong').html(total_reply - 1);
                                            }
                                        } else {
                                            if (total_record > 1) {
                                                $('#v-pills-review-cms #total_record').html(total_record - 1);
                                            } else {
                                                $('#v-pills-review-cms-tab').trigger('click');// if(type == 1){
//     $('#v-pills-review-cms tbody').html('<tr><td colspan="3">Không có dữ liệu</td></tr>');
// }else{
//     $('#list_review_cms').html('');
// }
                                            }
                                            if (!$('#v-pills-review-cms tbody tr').length) $('#v-pills-review-cms-tab').trigger('click');
                                        }
                                        if (type == 1 && course_id) {
                                            $('.btn-filter-review-cms').trigger('click');
                                        }
                                    }
                                } else if (_success3.login && _success3.login == 2) {
                                    window.location = _success3.href;
                                }
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        },
        changeApprovalStatus: function changeApprovalStatus(current, comment_id, type) {
            var course_id = $('#filter_course_cms').val();
            var val_post = {_token: $.cookie('_token'), comment_id: comment_id, type: type};
            $.ajax({
                type: 'POST',
                url: base_url + '/courses/changeApprovalStatus',
                data: val_post,
                dataType: 'json',
                success: function success(_success4) {
                    if (_success4.login && _success4.login == 1) {
                        if (!_success4.error) {
                            if (!_success4.data) {
                                $(current).html("<i class='fa fa-eye-slash fs_15'></i> Ẩn");
                            } else {
                                $(current).html("<i class='fa fa-eye fs_15'></i> Hiện");
                            }
                            if (type == 1 && course_id) {
                                $('.btn-filter-review-cms').trigger('click');
                            }
                            LHM.common.notify(null, 'success', 'Thay đổi thành công');
                        }
                    } else if (_success4.login && _success4.login == 2) {
                        window.location = _success4.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        },
        prioritizeReviewCms: function prioritizeReviewCms(current, comment_id, type) {
            var val_post = {_token: $.cookie('_token'), comment_id: comment_id, type: type};
            $.ajax({
                type: 'POST',
                url: base_url + '/courses/prioritizeReviewCms',
                data: val_post,
                dataType: 'json',
                success: function success(_success5) {
                    if (_success5.login && _success5.login == 1) {
                        if (!_success5.error) {
                            if (!_success5.data) {
                                $(current).html("<i class='fas fa-arrow-alt-circle-up'></i> Ưu tiên");
                            } else {
                                $(current).html("<i class='fas fa-arrow-alt-circle-down'></i> Bỏ ưu tiên");
                            }
                            LHM.common.notify(null, 'success', 'Thay đổi thành công');
                        }
                    } else if (_success5.login && _success5.login == 2) {
                        window.location = _success5.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        },
        filemanager: function filemanager() {
            $.alert({
                title: "Chọn ảnh",
                content: 'url:' + base_url + '/uploader/genuploader?extratools=library,upimage',
                columnClass: "col-sm-8",
                buttons: {close: {text: 'Đóng'}},
                onContentReady: function onContentReady() {
                    window.filemanager = this;//handle uploader
                    LHM.uploader.init(function (data_file) {//calbback when upload success
//object file
                        if (data_file._id) {
                            $('.upload-cover .preview-' + window.type_image).attr('src', data_file['url']);
                            $('.upload-cover #id_image_' + window.type_image).val(data_file['_id']['$id']);
                        } else {//[datafile, datafile]
                            for (var i in data_file) {//LHM.lessons.addfiletolesson(data_file[i], lesson_id, false);
                                $('.upload-cover .preview-' + window.type_image).attr('src', data_file[i]['url']);
                                $('.upload-cover #id_image_' + window.type_image).val(data_file[i]['fid']);
                            }
                        }//close popup
                        window.filemanager.close();
                    });
                }
            });
        },
        fileManagerUnica: function fileManagerUnica(e) {
            var render_link = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#render_link';
            var render_preview = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.preview-thumbnail';
            var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
            var lesson_id = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
            var accept = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;
            var user = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;
            var lesson_code = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;
            argumentValues = arguments;
            $.get(base_url + '/id/getTokenFileUnica', {user: user, accept: accept, type: type}, function (rs) {
                if (rs.token) {
                    var param_lesson = '';
                    if (lesson_code) param_lesson = '&lesson_id=' + lesson_code;
                    if (window.innerWidth <= 768) {
                        myDialog = $.dialog({
                            title: 'Chọn file',
                            columnClass: 'container',
                            content: "<iframe class=\"w-full\" style=\"height: 100vh\" src=\"".concat(fileUrl + '?access_token=' + rs.token + param_lesson, "\"></iframe>")
                        });
                    } else {
                        myWindow = window.open(fileUrl + '?access_token=' + rs.token + param_lesson, 'my_window', 'width=1200, height=900');
                    }
                } else {
                    LHM.common.notify(null, 'danger', 'Token đã hết hạn, vui lòng đăng nhập lại');
                    $.get(base_url + '/id/logout', {}, function (rs) {
                        window.location.reload();
                    });
                }
            });
        },
        addQuizDragDrop: function addQuizDragDrop(files) {
            var accept = ["png", "jpg", "jpeg"];
            if (files.slice(-1)[0].url) {
                var fileEnd = files.slice(-1)[0];
                if (accept.includes(fileEnd.ext)) {
                    var src = fileEnd.url, length = parseInt($('#element-size').val());
                    var content = "\n                        <div class=\"ui-widget-content drag-zone-element drag-img-zone dgz-element-".concat(length, "\">\n                            <a class=\"fa-trash-icon-zone cursor-pointer\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n                                <i class=\"far fa-ellipsis-v\"></i>\n                            </a>\n                            <div class=\"dropdown-menu dropdown-menu-domain\">\n                                <a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"LHM.quiz.editDragDropZone(this, 'image', ").concat(length, ")\">Ch\u1EC9nh s\u1EEDa</a>\n                                <a class=\"dropdown-item\" href=\"javascript:void(0);\" onclick=\"LHM.quiz.deleteDragDropZone(this)\"> X\xF3a</a>\n                            </div>\n                            <img src=\"").concat(src, "\" class=\"drag-img-element drag-img-size img-element-").concat(length, "\">\n                            <input type=\"hidden\" name=\"data_drag_zone[").concat(length, "][drag_box_content_width]\" id=\"drag_box_content_width_").concat(length, "\" class=\"drag-box-content-width\" value=\"150\">\n                            <input type=\"hidden\" name=\"data_drag_zone[").concat(length, "][drag_box_content_height]\" id=\"drag_box_content_height_").concat(length, "\" class=\"drag-box-content-height\" value=\"100\">\n                            <input type=\"hidden\" name=\"data_drag_zone[").concat(length, "][drag_box_content_left]\" id=\"drag_box_content_left_").concat(length, "\" class=\"drag-box-content-left\" value=\"10\">\n                            <input type=\"hidden\" name=\"data_drag_zone[").concat(length, "][drag_box_content_top]\" id=\"drag_box_content_top_").concat(length, "\" class=\"drag-box-content-top\" value=\"10\">\n                            <input type=\"hidden\" name=\"data_drag_zone[").concat(length, "][drag_box_content_detail]\" id=\"drag_box_content_detail_").concat(length, "\" class=\"drag-box-content-detail\" value=\"").concat(src, "\">\n                            <input type=\"hidden\" name=\"data_drag_zone[").concat(length, "][drag_type]\" id=\"drag_type").concat(length, "\" class=\"drag-type\" value=\"image\">\n                        </div>\n                        ");
                    $('.background-image-zone').append(content);
                    $(".dgz-element-".concat(length)).css('left', '10px');
                    $(".dgz-element-".concat(length)).css('top', '10px');
                    $('.drag-img-element').resizable({
                        handles: "all",
                        ghost: true,
                        autoHide: true,
                        stop: function stop(event, ui) {
                            $(this).parents('.drag-img-zone').find('.drag-box-content-width').val(ui.size.width);
                            $(this).parents('.drag-img-zone').find('.drag-box-content-height').val(ui.size.height);
                        }
                    });
                    $('.drag-zone-element').draggable({
                        containment: ".background-image-zone",
                        scroll: false,
                        cursor: "move",
                        stop: function stop(event, ui) {
                            $(this).find('.drag-box-content-left').val(Math.round(ui.position.left));
                            $(this).find('.drag-box-content-top').val(Math.round(ui.position.top));
                        }
                    });
                    $('#element-size').val(++length);
                } else LHM.common.notify(null, 'danger', 'Kiểu file không hợp lệ');
            } else {
                LHM.common.notify(null, 'danger', 'File đã chọn không hợp lệ');
            }
        },
        choseFileInLibrary: function choseFileInLibrary(files, lesson_id, render_link, render_preview) {
            var html = "<p class=\"mb-0\">(B\u1EA1n \u0110\xE3 ch\u1ECDn )</p><ul>";
            $.each(files, function (key, val) {
                var document_name = val.name + '.' + val.ext;
                html += "<li> ".concat(key + 1, " -- ").concat(document_name, "</li>");
            });
            html += "</ul>";
            $('.result_msg').html(html);
            localStorage.setItem('files_dachon', JSON.stringify(files));
            localStorage.setItem('lesson_id', lesson_id);
        },
        addDocumentMulti: function addDocumentMulti(files, render_link) {
            var arrayAllowFile = ["zip", "rar", 'pdf', 'docx', 'doc', 'xls', 'xlsx', 'ppt', 'pptx', 'mp3', 'wav'];
            var html = '';
            $.each(files, function (key, val) {
                var document_name = val.name + '.' + val.ext;
                if (arrayAllowFile.includes(val.ext)) {
                    html += "\n                        <div class=\"item_document_multi d-flex justify-content-between py-1\">\n                            <div class=\"link-file my-auto\">\n                                <input type=\"hidden\" name=\"documents[]\" value=\"".concat(val.url, "\"/>\n                                <a href=\"").concat(val.url, "\" target=\"_blank\">\n                                    <i class=\"fa fa-paperclip\"></i> ").concat(document_name, "\n                                </a>\n                            </div>\n                            <div class=\"btn-delete-link-file-document my-auto\">\n                                <a href=\"javascript:void(0);\"><i class=\"fa fa-trash\"></i> X\xF3a</a>\n                            </div>\n                        </div>");
                    LHM.common.notify(null, 'success', 'File "' + document_name + ' " thành công');
                } else {
                    LHM.common.notify(null, 'danger', 'File "' + document_name + ' "không được hỗ trợ');
                }
            });
            $("".concat(render_link)).append(html);
        },
        addFileUnicaToLesson: function addFileUnicaToLesson(files, lesson_id, post_url) {// gan file to lesson
            $.post('/lessons/' + post_url, {
                files: files,
                lesson_id: lesson_id,
                '_token': $.cookie('_token')
            }, function (res) {
                if (!res.error) {
                    window.filemanager.close();
                    localStorage.removeItem('files_dachon');
                    localStorage.removeItem('lesson_id');
                }
                LHM.common.notify(null, res.error ? 'danger' : 'success', res.msg ? res.msg : 'Có lỗi xảy ra');
            });
        },
        addFileUnicaMultiFiles: function addFileUnicaMultiFiles(files, render_link) {
            var arrayAllowFile = ["zip", "rar", 'pdf', 'docx', 'doc', 'xls', 'xlsx', 'ppt', 'pptx', 'mp3', 'wav'];
            var html = '';
            $.each(files, function (key, val) {
                var now = new Date().getTime();
                var keytime = key + now;
                var document_name = val.name + '.' + val.ext;
                if (arrayAllowFile.includes(val.ext)) {
                    html += "<div id=\"document_list_".concat(keytime, "\" class=\"item_document\"><div class=\"link-file\"><input type=\"hidden\" name=\"data_document[]\"  value=\"").concat(val.url, "\"/><a href=\"").concat(val.url, "\" target=\"_blank\"><i class=\"fa fa-paperclip\"></i>").concat(document_name, "</a></div><div class=\"btn-delete-link-file\"><a href=\"javascript:void(0);\" data-fid=\"").concat(val.url, "\"onclick=\"LHM.combosite.removeFileDocumentByIndex('#document_list_").concat(keytime, "')\" ><i class=\"fa fa-trash\"></i>X\xF3a</a></div></div>");
                    LHM.common.notify(null, 'success', 'File "' + document_name + ' " thành công');
                } else {
                    LHM.common.notify(null, 'danger', 'File "' + document_name + ' "không được hỗ trợ');
                }
            });
            $("".concat(render_link)).append(html);
        },
        addFileUnicaMultiImages: function addFileUnicaMultiImages(files, render_link) {
            var arrayAllowImages = ["png", "jpg", "jpeg", "gif"];
            var html = '';
            var now = new Date().getTime();
            $.each(files, function (key, val) {
                var anytime = key + now;
                var document_name = val.name + '.' + val.ext, name_input = 'data_document[]', plus_field = '';
                if ($("".concat(render_link)).attr('data-name')) {
                    name_input = $("".concat(render_link)).attr('data-name');
                    if (/banner_items/.test(name_input)) {
                        plus_field = "<input type=\"text\" placeholder=\"link url\" name=\"" + name_input.replace('banner_items', 'banner_item_url') + "\" class=\"form-control\"/>";
                    }
                }
                if (arrayAllowImages.includes(val.ext)) {
                    html += "<div id=\"list_image_".concat(anytime, "\" class=\"list_images_js\"><div class=\"link-file\"><img src=\"").concat(val.url, "\" alt=\"").concat(val.name, "\" ><input type=\"hidden\" name=\"").concat(name_input, "\"  value=\"").concat(val.url, "\"/></div><div class=\"btn-delete-link-file\"><a href=\"javascript:void(0);\" data-fid=\"").concat(val.url, "\" onclick=\"LHM.combosite.removeFileDocumentByIndex('#list_image_").concat(anytime, "')\" ><i class=\"fa fa-trash\"></i>X\xF3a</a></div>").concat(plus_field, "</div>");
                    LHM.common.notify(null, 'success', 'Upload "' + document_name + ' " thành công');
                } else {
                    LHM.common.notify(null, 'danger', 'File "' + document_name + ' "không được hỗ trợ');
                }
            });
            $("".concat(render_link)).append(html);
        },
        filemanagerquiz: function filemanagerquiz() {
            $.alert({
                title: "Chọn ảnh",
                content: 'url:' + base_url + '/uploader/genuploader?extratools=library,upimage',
                columnClass: "col-sm-8",
                buttons: {close: {text: 'Đóng'}},
                onContentReady: function onContentReady() {
                    window.filemanager = this;//handle uploader
                    LHM.uploader.init(function (data_file) {//calbback when upload success
//object file
                        if (data_file._id) {
                            $('.upload-cover .preview-quiz-' + window.type_image).attr('src', data_file['url']);
                            $('.upload-cover #id_image_comboquiz_' + window.type_image).val(data_file['_id']['$id']);
                        } else {//[datafile, datafile]
                            for (var i in data_file) {//LHM.lessons.addfiletolesson(data_file[i], lesson_id, false);
                                $('.upload-cover .preview-quiz-' + window.type_image).attr('src', data_file[i]['url']);
                                $('.upload-cover #id_image_comboquiz_' + window.type_image).val(data_file[i]['fid']);
                            }
                        }//close popup
                        window.filemanager.close();
                    });
                }
            });
        },
        set_pass_lesson: function set_pass_lesson(curr) {
            var user_id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
            var lids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
            var tick = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
            var is_pass_course = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            return function () {
                var cid = $(curr).parents('.list-section').data('cid');
                if (lids !== null) {
                    var lid = lids;
                } else {
                    var lid = $(curr).data('lid');
                }
                $.ajax({
                    type: 'POST',
                    url: base_url + '/lessons/setpasslesson',
                    data: {
                        lid: lid,
                        cid: cid,
                        user_id: user_id,
                        is_pass_course: is_pass_course,
                        _token: $.cookie('_token')
                    },
                    success: function success(rs) {
                        if(window.lessons && window.lessons.hasOwnProperty(lid)) {
                            window.lessons[lid]['complete_at'] = {
                                sec: Math.floor(new Date().getTime() / 1000)
                            }
                        }
                        $(curr).parents('.l').addClass('passed-lesson');
                        if (rs.set_pass_course) {
                            $('.list-courses .list-section ul li.l').addClass('passed-lesson');
                        }
                        if (rs.url_redirect) {
                            window.location.href = rs.url_redirect;
                        }
                        if (rs.time_open_lesson) $(curr).attr('data-time-open-lesson', rs.time_open_lesson);//Nếu hoàn thành khóa học hiện popup
                        if (rs.complete_course && !window.show_complete) {
                            window.show_complete = 1;
                            LHM.courses.show_complete($('#lesson-' + lid).attr('data-code-course'), rs.show_button_cerficicate, rs.id_certificate);
                        } else if ($('#popup_end_lesson').length) {
                            $.alert({
                                title: "Hoàn thành bài học",
                                columnClass: 'col-md-6',
                                content: $('#popup_end_lesson').html().replace('[lesson_name]', $("#lesson-".concat(lid, " span.name-session:first")).text()).replace('[percent]', parseFloat(rs.percent).toFixed(2) + '%').replace(/\.?0+$/, '')
                            });
                        }
                    }
                }).always(function () {
                    isPassedSubmitScorm = false;
                });
            }(tick);
        },
        show_complete: function show_complete(code, status, id) {
            var button_dowlnoad_certificate = '';
            if (status) {
                button_dowlnoad_certificate = "<p style=\"font-size:18px;padding:0;\">ID ch\u1EE9ng ch\u1EC9 c\u1EE7a b\u1EA1n l\xE0: ".concat(id, "</p><a href=\"javascript:;\" data-code=\"").concat(code, "\" class=\"btn btn-info js-download-certificate\"><i class=\"fas fa-certificate\"></i> Download ch\u1EE9ng ch\u1EC9</a>");
            }
            $.alert({
                title: "",
                columnClass: 'col-md-6',
                content: '<div class="col-lg-12">' + '<div class="cup-complete">' + '<i class="fa fa-trophy" aria-hidden="true"></i>' + '<p>Chúc mừng bạn đã hoàn thành khóa học</p>' + button_dowlnoad_certificate + '</div>' + '</div>'
            });
        },
        show_fail: function show_fail(code) {
            $.alert({
                title: "",
                columnClass: 'col-md-6',
                content: '<div class="col-lg-12">' + '<div class="reset-course">' + '<i class="fas fa-exclamation-circle text-warning" style="font-size:90px;"></i>' + '<p>Bạn chưa hoàn thành khóa học, bạn sẽ cần học lại khóa học này</p>' + '</div>' + '</div>',
                buttons: {
                    Ok: function Ok() {
                        window.location.reload();
                    }
                }
            });
        },
        convertVideoLink: function () {
            var _convertVideoLink = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(url) {
                return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                    while (1) switch (_context5.prev = _context5.next) {
                        case 0:
                            _context5.next = 2;
                            return fetch('https://vimeo.com/api/oembed.json?url=' + url).then(function (response) {
                                return response.json();// data into json
                            }).then(function (data) {
                                var matches = data.html.match(/<iframe.*?src="(.*?)"/i);
                                var duration = 0;
                                if (data.duration) duration = data.duration;
                                console.log([matches[1], duration]);
                                return [matches[1], duration];
                            })["catch"](function (error) {
                                console.log(error);
                            });
                        case 2:
                            return _context5.abrupt("return", _context5.sent);
                        case 3:
                        case"end":
                            return _context5.stop();
                    }
                }, _callee5);
            }));

            function convertVideoLink(_x5) {
                return _convertVideoLink.apply(this, arguments);
            }

            return convertVideoLink;
        }(),
        previewvideo: function () {
            var _previewvideo = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(curr) {
                var id, type, label, text_content, lessonid, youtubelink, vimeolink, doc_link_or_id, use_officeapps,
                    use_subtitle_video, vimeolink_completed, data, pdf_box, content, includePpt;
                return _regeneratorRuntime().wrap(function _callee6$(_context6) {
                    while (1) switch (_context6.prev = _context6.next) {
                        case 0:
                            id = $(curr).data('id');
                            type = $(curr).data('type');
                            label = $(curr).data('label');
                            text_content = $(curr).data('text_content');
                            lessonid = $(curr).data('lessonid');
                            window.label_record = label;
                            youtubelink = $(curr).data('youtubelink');
                            vimeolink = $(curr).data('vimeolink');
                            doc_link_or_id = $(curr).data('docid');
                            use_officeapps = $(curr).data('use_officeapps');
                            use_subtitle_video = $(curr).data('use_subtitle_video');
                            if (!(type != '')) {
                                _context6.next = 26;
                                break;
                            }
                            if (!(type == 'youtube')) {
                                _context6.next = 16;
                                break;
                            }
                            LHM.library.play_video(youtubelink, 'youtube');
                            _context6.next = 24;
                            break;
                        case 16:
                            if (!(type == 'vimeo')) {
                                _context6.next = 23;
                                break;
                            }
                            _context6.next = 19;
                            return LHM.courses.convertVideoLink(vimeolink);
                        case 19:
                            vimeolink_completed = _context6.sent;
                            if (vimeolink_completed) {
                                console.log('vimeolink_completed: ' + vimeolink_completed[0]);
                                LHM.library.play_video(vimeolink_completed[0], 'vimeo');
                            }
                            _context6.next = 24;
                            break;
                        case 23:
                            if (type == 'video') {
                                if (navigator.vendor == "Coc Coc") {
                                    LHM.common.preventCocCoc();
                                } else {// xem video  qua file.unica.vn
                                    data = {
                                        'lessonid': lessonid,
                                        'video_id': id,
                                        'use_subtitle_video': use_subtitle_video
                                    };
                                    window.popup_preview = 1;
                                    LHM.library.play_video(id, 'video', function (previewcontainer) {
                                        LHM.common.player.run(previewcontainer[0], 'videoinet', data, 510, 320);
                                    });
                                }
                            } else if (type == 'stream') {
                                if (navigator.vendor == "Coc Coc") {
                                    LHM.common.preventCocCoc();
                                } else {
                                    window.popup_preview = 1;
                                    LHM.library.play_video(id, 'stream', function (previewcontainer) {
                                        LHM.common.player.run(previewcontainer[0], id, true, 510, 320);
                                    });
                                }
                            } else if (type == 'pdf') {
                                pdf_box = '<iframe src="' + base_url + '/embed/loadPDFTron?file=' + doc_link_or_id + '" width="100%" height="400px"></iframe>';
                                $.alert({title: 'Học thử', columnClass: 'col-md-8', content: pdf_box});
                            } else if (type == 'doc') {
                                content = '<iframe src="' + base_url + '/embed/loadPDFTron?file=' + doc_link_or_id + '" width="100%" height="400px"></iframe>';
                                includePpt = doc_link_or_id.search(".ppt");
                                if (use_officeapps == 1 && includePpt > 0) {
                                    content = '<iframe src="https://view.officeapps.live.com/op/embed.aspx?src=' + doc_link_or_id + '" width="100%" height="400px"></iframe>';
                                }
                                $.alert({title: 'Học thử', columnClass: 'col-md-8', content: content});
                            }
                        case 24:
                            _context6.next = 27;
                            break;
                        case 26:
                            $.alert({
                                title: 'Học thử',
                                columnClass: 'col-md-8',
                                content: text_content ? text_content : 'Bài học chưa có Video'
                            });
                        case 27:
                        case"end":
                            return _context6.stop();
                    }
                }, _callee6);
            }));

            function previewvideo(_x6) {
                return _previewvideo.apply(this, arguments);
            }

            return previewvideo;
        }(),
        previewLessonById: function previewLessonById(lessonId) {
            if (lessonId) {
                $.get('/courses/getReviewLesson/' + lessonId, function (res) {
                    if (res.video_type) {
                        switch (res.video_type) {
                            case'youtube':
                            case'vimeo':
                                if (res.link_video) LHM.library.play_video(res.link_video, res.video_type);
                                break;
                            case'video':
                                if (res.video_id) {
                                    window.popup_preview = 1;
                                    LHM.library.play_video(res.video_id, 'video', function (previewcontainer) {
                                        LHM.common.player.run(previewcontainer[0], 'videoinet', res.data, 510, 320);
                                    });
                                }
                                break;
                            case'stream':
                                if (res.video_id) {
                                    window.popup_preview = 1;
                                    LHM.library.play_video(res.video_id, 'stream', function (previewcontainer) {
                                        LHM.common.player.run(previewcontainer[0], res.video_id, true, 510, 320);
                                    });
                                }
                                break;
                        }
                    } else if (res.linkFile) {
                        var src = base_url + '/embed/loadPDFTron?file=';
                        if (res.use_office_app) {
                            src = 'https://view.officeapps.live.com/op/embed.aspx?src=';
                        }
                        $.alert({
                            title: 'Học thử',
                            columnClass: 'col-md-8',
                            content: '<iframe src="' + src + res.linkFile + '" width="100%" height="400px"></iframe>'
                        });
                    } else if (!res.quiz_test_id) {
                        $.alert({
                            title: 'Học thử',
                            columnClass: 'col-md-8',
                            content: res.text_content ? res.text_content : 'Bài học chưa được cài đặt'
                        });
                    }
                });
            }
        },
        updateCourseNum: function updateCourseNum(data) {
            $.ajax({
                url: '/courses/updateCourseNum',
                type: 'POST',
                data: {course_ids: data, _token: $.cookie('_token')},
                success: function success(res) {
                    if (res.status) {
                        LHM.common.notify(null, 'success', res.message, 'col-md-2');
                    } else {
                        LHM.common.notify(null, 'danger', res.message);
                    }
                }
            });
        },
        updateComboQuizNum: function updateComboQuizNum(data) {
            $.ajax({
                url: '/combosite/updateComboQuizNum',
                type: 'POST',
                data: {combo_ids: data, _token: $.cookie('_token')},
                success: function success(res) {
                    if (res.status) {
                        LHM.common.notify(null, 'success', res.message, 'col-md-2');
                    } else {
                        LHM.common.notify(null, 'danger', res.message);
                    }
                }
            });
        },
        updateComboNum: function updateComboNum(data) {
            $.ajax({
                url: '/courses/updateComboNum',
                type: 'POST',
                data: {combo_ids: data, _token: $.cookie('_token')},
                success: function success(res) {
                    if (res.status) {
                        LHM.common.notify(null, 'success', res.message, 'col-md-2');
                    } else {
                        LHM.common.notify(null, 'danger', res.message);
                    }
                }
            });
        },
        updateCateNum: function updateCateNum(data) {
            $.ajax({
                url: '/courses/updateCateNum',
                type: 'POST',
                data: {cate_ids: data, _token: $.cookie('_token')},
                success: function success(res) {
                    if (res.status) {
                        LHM.common.notify(null, 'success', res.message, 'col-md-2');
                    } else {
                        LHM.common.notify(null, 'danger', res.message);
                    }
                }
            });
        },
        save_combo_courses: function save_combo_courses() {
            var course_id = $('#course_id').val();
            CKEDITOR.instances.instructors_info.updateElement();
            CKEDITOR.instances.course_info.updateElement();
            var datastring = $('#create_combo_course').serialize();
            var hash_tag = [];
            $("#hash_tag :selected").each(function () {
                hash_tag.push($(this).val());
            });
            datastring = datastring + '&course_id=' + course_id + '&hash_tag=' + hash_tag + '&_token=' + $.cookie('_token');
            $('.btn-add-save-cb-course-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang lưu');
            $('.btn-add-save-cb-course-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/courses/saveComboCourses',
                data: datastring,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('.btn-add-save-cb-course-popup').html('<i class="fa fa-save"></i> Lưu lại');
                        $('.btn-add-save-cb-course-popup').removeAttr('disabled');
                        if (!data.error) {
                            LHM.common.notify('fa fa-check', 'success', data.msg[0]);// $('.back-to-combo-course').trigger('click');
                            window.location.reload();
                        }
                        if (data.error && data.msg && data.msg.length > 0) {
                            for (var i = 0; i < data.msg.length; i++) {
                                LHM.common.notify(null, 'danger', data.msg[i]);
                            }
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        },
        addReview: function addReview(course_id) {
            var datastring = {
                course_id: course_id,
                review_content: $('#review_content').val(),
                total_rate: $('#total_rate').val(),
                _token: $.cookie('_token')
            };
            $.ajax({
                type: 'POST',
                url: base_url + '/courses/addReview',
                data: datastring,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        if (!data.error) {
                            LHM.common.notify('fa fa-check', 'success', data.msg);
                            if (data.approval_status) {
                                $('#total_review').html(data.count_review);
                                $('#total_rate').val(0);
                                $('#review_content').val('');
                                $('#rating').raty({
                                    starHalf: 'fas fa-fw fa-star-half-alt',
                                    starOff: 'far fa-fw fa-star',
                                    starOn: 'fas fa-fw fa-star',
                                    starType: 'i',
                                    score: parseInt($('#rating').attr('data-rate')),
                                    click: function click(score) {
                                        $('#total_rate').val(score);
                                    }
                                });
                                $('#list-review').html('<div class="row item-comment">' + '<div class="col-md-2">' + '<img src="' + uphoto + '" alt="' + data.user + '" width="50" height="50" class="rounded-circle">' + '</div>' + '<div class="col-md-10">' + '<p><strong>' + data.user + '</strong></p>' + '<div class="start-rate1" data-rate="' + data.rating + '"></div>' + '<p>' + data.comment + '</p>' + '</div>' + '</div>');
                                $('.start-rate1').raty({
                                    starHalf: 'fas fa-fw fa-star-half-alt',// The name of the half star image.
                                    starOff: 'far fa-fw fa-star',// Name of the star image off.
                                    starOn: 'fas fa-fw fa-star',
                                    starType: 'i',
                                    score: data.rating,
                                    click: false,
                                    readOnly: true
                                });
                                $('.form-review').html('');
                            } else {
                                $('.review-incourse').html('');
                                $('.review-incourse').css('display', 'none');
                            }
                        } else {
                            for (var i = 0; i < data.msg.length; i++) {
                                LHM.common.notify(null, 'danger', data.msg[i]);
                            }
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'Error!!!');
                }
            });
        },
        set_time_start_lesson: function set_time_start_lesson(curr) {
            var lid = $(curr).attr('data-lid');
            var type = $(curr).attr('data-type-close-lesson');
            var cid = $(curr).parents('.list-section').data('cid');
            if (type == 1) {
                $.ajax({
                    type: 'POST',
                    url: base_url + '/lessons/set_time_start_lesson',
                    data: {lid: lid, cid: cid, _token: $.cookie('_token')},
                    success: function success(rs) {
                        if (rs.time_close_lesson) $(curr).attr('data-time-close-lesson', rs.time_close_lesson);
                        if (rs.close_lesson) $(curr).attr('data-close-lesson', rs.close_lesson);
                    }
                });
            }
        },
        updatePosCertificate: function updatePosCertificate(stage, layer, e, offset, textTitle, pr_left, pr_top, pr_font, pr_font_family, pr_color, font_variant, minX, maxX, minY, maxY) {
            var name = arguments.length > 15 && arguments[15] !== undefined ? arguments[15] : false;
            var input_left, input_top;
            if (name) {
                input_left = pr_left;
                input_top = pr_top;
            } else {
                input_left = $('#' + pr_left + offset);
                input_top = $('#' + pr_top + offset);
            }
            if (e.target.attrs.x < minX || e.target.attrs.x > maxX || e.target.attrs.y < minY || e.target.attrs.y > maxY) {
                $.each(layer.children, function (key, val) {
                    if (val.attrs.text == textTitle) {
                        layer.children[key].remove();
                        if (e.target.attrs.x < minX) {
                            input_left.val(minX);
                        } else if (e.target.attrs.y < minY) {
                            input_top.val(minY);
                        } else if (e.target.attrs.x > maxX) {
                            input_left.val(maxX);
                        } else {
                            input_top.val(maxY);
                        }
                        var certificate = new Konva.Text({
                            x: Math.ceil(input_left.val()),
                            y: Math.ceil(input_top.val()),
                            text: textTitle,
                            fontSize: pr_font,
                            fontFamily: pr_font_family,
                            fill: pr_color,
                            fontVariant: font_variant,
                            draggable: true
                        });
                        certificate.on('mouseenter', function () {
                            stage.container().style.cursor = 'pointer';
                        });
                        certificate.on('mouseleave', function () {
                            stage.container().style.cursor = 'default';
                        });
                        layer.add(certificate);
                        certificate.on('dragmove', function (e) {
                            LHM.courses.updatePosCertificate(stage, layer, e, offset, textTitle, pr_left, pr_top, pr_font, pr_font_family, pr_color, font_variant, minX, maxX, minY, maxY, name);
                        });
                    }
                });
            } else {
                input_top.val(Math.ceil(e.target.attrs.y));
                input_left.val(Math.ceil(e.target.attrs.x));
            }
        },
        switchFontfamilyCertificate: function switchFontfamilyCertificate(type) {
            switch (type) {
                case'french-vanilla-italic':
                    return "French Vanilla";
                    break;
                case'roboto-regular':
                    return 'Arial';
                    break;
                case'arial-regular':
                    return 'Arial';
                    break;
                case'open-sans-regular':
                    return 'Open Sans';
                    break;
                case'times-new-roman-regular':
                    return 'Times New Roman';
                    break;
                case'verdana-regular':
                    return 'Verdana';
                    break;
            }
        },
        documentCourse: function documentCourse(e, files, render_link) {
            var dataType = e.data('type');
            $.ajax({
                type: 'POST',
                url: base_url + '/courses/documentCourse',
                data: {_token: $.cookie('_token'), cid: id_course, files: files, type: dataType, typeSubmit: 'add'},
                dataType: 'json',
                success: function success(rs) {
                    if (!rs.error) {
                        renderDataDocumentHtml(rs.data, render_link, dataType);
                        LHM.common.notify(null, 'success', 'Cập nhật thành công');
                    } else {
                        $.each(rs.msg, function (k, v) {
                            LHM.common.notify(null, 'danger', v);
                        });
                    }
                },
                error: function error(err) {
                    console.log(err);
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }
    }, users: {
        checkGetFilterDelete: false,
        checkLoadAjax: true,
        getListDeleteStudentMapCourse: function getListDeleteStudentMapCourse() {
            if (LHM.users.checkLoadAjax) {
                var form = $('#filter-delete-student-map-course');
                if (form.length) {
                    if (!LHM.users.checkGetFilterDelete) {
                        $.ajax({
                            type: 'GET',
                            url: base_url + '/users/getFilters',
                            dataType: 'json',
                            success: function success(res) {
                                var html_course = '<option value="">-- Chọn khóa học --</option>',
                                    html_combo = '<option value="">-- Chọn combo --</option>';
                                if (res.courses.length) {
                                    $.each(res.courses, function (k, v) {
                                        html_course += "<option value=\"".concat(v['_id']['$id'], "\">").concat(v['name'], "</option>");
                                    });
                                }
                                if (res.combos.length) {
                                    $.each(res.combos, function (k, v) {
                                        html_combo += "<option value=\"".concat(v['_id']['$id'], "\">").concat(v['name'], "</option>");
                                    });
                                }
                                $('[name="course_id"]').html(html_course);
                                $('[name="course_package_id"]').html(html_combo);
                                $('#btn-config-delete-student-map-course').attr('data-number', res.number_day).attr('data-checked', res.checked_delete);
                            }
                        }).always(function () {
                            LHM.common.genSelect2();
                        });
                        LHM.users.checkGetFilterDelete = true;
                    }
                    $.ajax({
                        type: 'GET',
                        url: base_url + '/users/getListDeleteStudentMapCourse',
                        data: form.serialize(),
                        beforeSend: function beforeSend() {
                            $('#list_user_delete_map_course').html('<tr><td colspan="6" class="text-center"><i class="fa fa-spinner fa-spin"></i> Đang tải dữ liệu</td></tr>');
                            $('.total-delete-student-map-course').html(0);
                            LHM.users.checkLoadAjax = false;
                        },
                        success: function success(res) {
                            $('#list_user_delete_map_course').html(res.html);
                            $('.total-delete-student-map-course').html(res.totalItems);
                        },
                        error: function error() {
                            $('#list_user_delete_map_course').html('<tr><td colspan="6" class="text-center">Không có dữ liệu</td></tr>');
                            LHM.common.notify(null, 'danger', 'Đã có lỗi xảy ra. Vui lòng thử lại');
                        }
                    }).always(function () {
                        LHM.users.checkLoadAjax = true;
                    });
                }
            }
        },
        getViewLogDelete: function getViewLogDelete(itemId) {
            $.ajax({
                type: 'GET',
                url: base_url + '/users/getDetailLogDelete/' + itemId,
                success: function success(html) {
                    $.alert({title: 'Thông tin chi tiết', columnClass: 'col-md-6', content: html, type: 'blue'});
                },
                error: function error() {
                    LHM.common.notify(null, 'danger', 'Đã có lỗi xảy ra. Vui lòng thử lại');
                }
            });
        }
    }, combosite: {
        save: function save() {
            var reload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
            $('#edit_combo_site textarea.add-js-ckeditor').each(function () {
                if ($(this).attr('id')) {
                    CKEDITOR.instances[$(this).attr('id')].updateElement();
                }
            });
            var data = $('#edit_combo_site').serialize() + '&_token=' + $.cookie('_token');
            $.ajax({
                type: 'POST',
                url: '/combosite/saveCombo',
                data: data,
                dataType: 'json',
                success: function success(res) {
                    if (res.success) {
                        if (!reload) {
                            $('a.back-to-combo-site').click();
                        } else {
                            if (res["new"]) {
                                LHM.combosite.load(res.id, res.typeCombo);
                            }
                        }
                        LHM.common.notify(null, 'success', res.message ? res.message : 'Cập nhật thành công');
                    } else {
                        LHM.common.notifyResponse(res.message);
                    }
                },
                error: function error(res) {
                    LHM.common.notify(null, 'danger', 'Có lỗi xảy ra');
                }
            });
        }, load: function load(itemId) {
            var typeCombo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '1';
            var divEdit, divList;
            $('#wrap-add-combos-quiz, #wrap-add-combo-document-courses').empty();
            if (typeCombo === '1') {// Combo Đề thi
                divList = $('#wrap-combos-quiz');
                divEdit = $('#wrap-add-combos-quiz');
            } else {// Combo tài liệu
                divList = $('#wrap-combo-document-courses');
                divEdit = $('#wrap-add-combo-document-courses');
            }
            $.get("/combosite/pageEdit/".concat(itemId), {type_combo: typeCombo}, function (html) {
                divEdit.show().html(html);
                divList.hide();
                $('a.back-to-combo-site').click(function () {
                    divEdit.html('');
                    divList.show();
                    LHM.mnDashboard.init(typeCombo === '1' ? 'combos_quiz' : 'course_document_package');
                });
                setTimeout(function () {
                    LHM.common.genAllCustom();
                }, 100);
            });
        }, listStudentByCombo: function listStudentByCombo() {
            var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
            var form = $('#form-filter-student-map-combo'), tBody = $('#list-student-combo');
            if (page !== null) {
                form.find('input[name=page]').val(page);
            } else {
                page = form.find('input[name=page]').val();
            }
            $('#combo-site_student input.checkbox-all').prop('checked', false).change();
            if (form.length > 0 && tBody.length > 0) {
                tBody.html('<div class="text-center"><i class="fas fa-spinner fa-spin"></i> Đang tải dữ liệu, xin vui lòng đợi</div>');
                $.get('/combosite/getListStudentByCombo', form.serialize(), function (res) {
                    tBody.html(res.html);
                    var liPagination = $('ul#pagination-combo-student li');
                    liPagination.removeClass('disabled');
                    if (page == 0) {
                        liPagination[0].classList.add('disabled');
                    }
                    if (res.length < 30) {
                        liPagination[1].classList.add('disabled');
                    }
                }).fail(function () {
                    tBody.html('<div class="text-center">Không có dữ liệu</div>');
                });
            }
        }, updateComboDocumentNum: function updateComboDocumentNum(data) {
            $.ajax({
                url: '/combosite/updateComboDocumentNum',
                type: 'POST',
                data: {combo_ids: data, _token: $.cookie('_token')},
                success: function success(res) {
                    if (res.status) {
                        LHM.common.notify(null, 'success', res.message, 'col-md-2');
                    } else {
                        LHM.common.notify(null, 'danger', res.message);
                    }
                }
            });
        }, filemanager: function filemanager() {
            $.alert({
                title: "Chọn ảnh",
                content: 'url:' + base_url + '/uploader/genuploader?extratools=library,upimage',
                columnClass: "col-sm-8",
                buttons: {close: {text: 'Đóng'}},
                onContentReady: function onContentReady() {
                    window.filemanager = this;//handle uploader
                    LHM.uploader.init(function (data_file) {//calbback when upload success
//object file
                        if (data_file._id) {
                            $('.upload-cover .document-preview-' + window.type_image).attr('src', data_file['url']);
                            $('.upload-cover #document_id_image_' + window.type_image).val(data_file['_id']['$id']);
                        } else {//[datafile, datafile]
                            for (var i in data_file) {//LHM.lessons.addfiletolesson(data_file[i], lesson_id, false);
                                $('.upload-cover .document-preview-' + window.type_image).attr('src', data_file[i]['url']);
                                $('.upload-cover #document_id_image_' + window.type_image).val(data_file[i]['fid']);
                            }
                        }//close popup
                        window.filemanager.close();
                    });
                }
            });
        }, documentfilemanager: function documentfilemanager() {
            window.check_upload_combo = 1;
            window.uploaderfilterimage = 'document';
            $.alert({
                title: "Chọn ảnh",
                content: 'url:' + base_url + '/uploader/genuploader?extratools=library,upfiledocument&tab_name=Upload tài liệu từ máy&tab_note=Upload',
                columnClass: "col-sm-8",
                buttons: {close: {text: 'Đóng'}},
                onContentReady: function onContentReady() {
                    $('#up-library-tab').trigger('click');
                    window.documentfilemanager = this;//handle uploader
                    LHM.uploader.init(function (data_file) {
                        var html = '';
                        $.each(data_file, function (key, val) {
                            if (val._id) {
                                if (val.status != 0) {
                                    val.url_file = base_url + '/data/sites/' + sid + '/files/' + val.filename;//icon file
                                    var icon = 'fas fa-file';
                                    var type_file = 'fas fa-file';
                                    var filetype = val.type.split("/");
                                    if (filetype[0] === 'image') {
                                        icon = 'far fa-image';
                                        type_file = 'image';
                                    } else if (filetype[1] === 'pdf') {
                                        icon = 'far fa-file-pdf';
                                        type_file = 'pdf';
                                    } else if (filetype[0] === 'audio') {
                                        icon = 'far fa-file-audio';
                                        type_file = 'audio';
                                    }
                                    if (val.rename) val.name = val.rename; else val.name = val.filename;
                                    html += '<tr id="' + val._id.$id + '">';
                                    html += '<input type="hidden" name="data_document[]" id="data-document" value="' + val._id.$id + '"/>';
                                    html += '<td class="title-content" style="width: 88%; padding-top: 10px; padding-bottom: 10px; vertical-align: middle;">';
                                    html += '<div>';
                                    html += '<a href="' + val.url_file + '" target="_blank"><i class="' + icon + '"></i> ' + val.name + ' </a>';
                                    html += '</div>';
                                    html += '</td>';
                                    html += '<td style="padding-top: 5px; padding-bottom: 5px;">';
                                    html += '<ul class="list-unstyled acts-li">';
                                    html += '<li><a href="javascript:void(0);" data-fid="' + val._id.$id + '" onclick="LHM.combosite.removefileofdocument(\'' + val._id.$id + '\')" style="color: #FF001B"><i class="fa fa-trash"></i>&nbsp;Xóa</a></li>';
                                    html += '</ul>';
                                    html += '</td>';
                                    html += '</tr>';
                                }
                                if (html == '') html = "<tr><td colspan='3' class='nodata'>Không có dữ liệu</td></tr>";
                            } else {
                                LHM.combosite.listFileFromLibrary(val.fid);
                            }
                        });
                        $('#wrap-list-document').append(html);
                        window.documentfilemanager.close();
                    });
                }
            });
        }, removefileofdocument: function removefileofdocument(file_id) {
            $.confirm({
                title: 'Thông báo',
                content: 'Bạn có muốn xóa file này khỏi bộ tài liệu?',
                buttons: {
                    Ok: function Ok() {
                        $('#' + file_id).remove();
                    }, Cancel: {text: 'Đóng'}
                }
            });
        }, removeFileDocumentByIndex: function removeFileDocumentByIndex(target) {
            $.confirm({
                title: 'Thông báo',
                content: 'Bạn có muốn xóa file này khỏi bộ tài liệu?',
                buttons: {
                    Ok: function Ok() {
                        $(target).remove();
                    }, Cancel: {text: 'Đóng'}
                }
            });
        }, listFileFromLibrary: function listFileFromLibrary(file_id) {
            var val_get = {fid: file_id};
            $.ajax({
                type: 'GET',
                data: val_get,
                url: base_url + '/combosite/list_file_from_library',
                dataType: 'json',
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        var html = '';
                        var file_url = '';
                        file_url = base_url + '/data/sites/' + sid + '/files/' + res.data.filename;
                        var icon = 'fas fa-file';
                        var type_file = 'fas fa-file';
                        var filetype = res.data.type.split("/");
                        if (filetype[0] === 'image') {
                            icon = 'far fa-image';
                            type_file = 'image';
                        } else if (filetype[1] === 'pdf') {
                            icon = 'far fa-file-pdf';
                            type_file = 'pdf';
                        } else if (filetype[0] === 'audio') {
                            icon = 'far fa-file-audio';
                            type_file = 'audio';
                        }
                        var file_name = '';
                        if (res.data.rename) file_name = res.data.rename; else file_name = res.data.filename;
                        html += '<tr id="' + res.data._id.$id + '">';
                        html += '<input type="hidden" name="data_document[]" id="data-document" value="' + res.data._id.$id + '"/>';
                        html += '<td class="title-content" style="width: 88%; padding-top: 5px; padding-bottom: 5px; vertical-align: middle;">';
                        html += '<div>';
                        html += '<a href="' + file_url + '" target="_blank"><i class="' + icon + '"></i> ' + file_name + ' </a>';
                        html += '</div>';
                        html += '</td>';
                        html += '<td style="padding-top: 5px; padding-bottom: 5px;">';
                        html += '<ul class="list-unstyled acts-li">';
                        html += '<li><a href="javascript:void(0);" data-fid="' + res.data._id.$id + '" onclick="LHM.combosite.removefileofdocument(\'' + res.data._id.$id + '\')" style="color: #FF001B"><i class="fa fa-trash"></i>&nbsp;Xóa</a></li>';
                        html += '</ul>';
                        html += '</td>';
                        html += '</tr>';
                        $('#wrap-list-document').append(html);
                    } else if (lessons.login && lessons.login == 2) {
                        window.location = lessons.href;
                    }
                }
            });
        }
    }, lives: {
        create_live: function create_live(type) {
            var datastring = $('#form_live').serialize();
            datastring = datastring + '&_token=' + $.cookie('_token');/*var validHours = $('#valid_date').val()
            if (validHours === 'true') {*/
            $('.btn-add-live-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang tạo');
            $('.btn-add-live-popup').attr('disabled', true);
            $('.btn-create-live-cms').html('<i class="fas fa-spinner fa-spin"></i> Đang tạo');
            $('.btn-create-live-cms').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/lives/create_live',
                data: datastring,
                dataType: 'json'
            }).done(function (data) {
                if (!data.error) {
                    if (type == 'create_peronal_site') {
                        LHM.common.notify(null, 'success', 'Đã tạo lớp thành công!');
                        window.location.href = base_url + '/lives';
                    } else {
                        LHM.common.notify(null, 'success', 'Đã tạo lớp thành công!');
                        window.location = document.referrer + '#zoom';
                    }
                }
                if (data.error && data.msg && data.msg.length > 0) {
                    for (var i = 0; i < data.msg.length; i++) {
                        LHM.common.notify(null, 'warning', data.msg[i]);
                    }
                }
            }).fail(function () {
                LHM.common.notify(null, 'warning', 'Có lỗi xảy ra');
            }).always(function () {
                $('.btn-add-live-popup').html('Tạo lịch');
                $('.btn-add-live-popup').removeAttr('disabled');
                $('.btn-create-live-cms').html('<i class="fa fa-save"></i> Tạo lịch');
                $('.btn-create-live-cms').removeAttr('disabled');
            });/*} else {
                $('#start_time').focus()
                LHM.common.notify(null, 'danger', 'thời gian bắt đầu và kết thúc chưa đúng')
            }*/
        }, edit_live: function edit_live(live_id) {
            live_id = live_id ? live_id : '';
            var datastring = $('#form_live').serialize();
            datastring = datastring + '&_token=' + $.cookie('_token') + '&live_id=' + live_id;
            $('.btn-edit-live-cms').html('<i class="fas fa-spinner fa-spin"></i> Cập nhật');
            $('.btn-edit-live-cms').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/lives/edit_live',
                data: datastring,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('.btn-edit-live-cms').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-edit-live-cms').removeAttr('disabled');
                        if (!data.error) {
                            LHM.common.notify(null, 'success', 'Cập nhật thành công!');// window.location.href = base_url + '/edit-course/Demo-2A/624816#classes'
                            if (data.edit_live_edubit) {
                                window.location.href = base_url + '/lives';
                            }
                        }
                        if (data.error && data.msg && data.msg.length > 0) {
                            for (var i = 0; i < data.msg.length; i++) {
                                LHM.common.notify(null, 'warning', data.msg[i]);
                            }
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, page_edit_live: function page_edit_live(live_id) {
            $('#code_live_record').val(live_id);
            $.get(base_url + '/lives/page_edit_live', {id: live_id}, function (rs) {
                $('#v-pills-classes').html('');
                if (rs) {
                    $('#v-pills-classes').html(rs);
                    $('#list-classes').hide();
                    $('#list-classes-edubit').hide();
                    $('#update-list-classes').show();
                }
            });
        }, send_mail_to_student: function send_mail_to_student(curr) {
            $('.form_upload_excel').ajaxSubmit({
                type: 'POST',
                url: base_url + '/lives/sendEmailStudent',
                data: {_token: $.cookie('_token')},
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('#form_upload_excel').trigger("reset");
                        if (!data.status) {
                            if (data.msg && data.msg.length > 0) {
                                for (var i = 0; i < data.msg.length; i++) {
                                    LHM.common.notify(null, 'warning', data.msg[i]);
                                }
                            } else {
                                LHM.common.notify(null, 'warning', 'Có lỗi xảy ra, bạn vui lòng nhập email');
                            }
                        } else {
                            LHM.common.notify(null, 'success', 'Gửi thư mời cho học viên thành công');
                            curr.close();
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, list_students: function list_students(live_id) {
            var val_post = {
                live_id: live_id,
                filter_key: $('#filter_key').val(),
                status_student: $('#status_student').val(),
                _token: $.cookie('_token')
            };
            $.ajax({
                type: 'POST',
                url: base_url + '/lives/ListStudentsInvited',
                data: val_post,
                dataType: 'json',
                success: function success(students) {
                    if (students.login && students.login == 1) {
                        $('#students-page #students-invited tbody').html('');
                        if (students && students.data.length) {
                            var student = students.data;
                            var html = '';
                            for (var i = 0; i < student.length; i++) {
                                html += '<tr>';
                                html += ' <td >' + student[i]['no'] + '</td>';
                                html += ' <td >' + student[i]['email'] + '</td>';
                                html += ' <td > <span class="label label-' + student[i]['status']['label_color'] + '">' + student[i]['status']['label'] + '</span> </td>';
                                html += ' <td >' + student[i]['number_send_mail'];
                                html += ' <td >' + student[i]['updatedAt'];
                                html += ' </td>';
                                html += '</tr>';
                            }
                            $('#students-page #students-invited tbody').html(html);
                        } else {
                            $('#students-page #students-invited  tbody').html('<tr><td colspan="5">Không có dữ liệu</td></tr>');
                        }
                    } else if (students.login && students.login == 2) {
                        window.location = students.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, list_registered_students: function list_registered_students(live_id) {
            var val_post = {live_id: live_id, _token: $.cookie('_token')};
            $.ajax({
                type: 'GET',
                url: base_url + '/lives/ListRegistedStudents',
                data: val_post,
                dataType: 'json',
                beforeSend: function beforeSend() {
                    $('#list-students-registed').html('<tr><td colspan="8" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                },
                success: function success(students) {
                    $('#export-excel-student-in-live').attr('href', base_url + '/lives/ListRegistedStudents?live_id=' + live_id + '&export=1');
                    if (students.mod) {
                        $('#join_mod_zoom').show();
                        $('#join_mod_zoom').attr('href', students.mod);
                    } else $('#join_mod_zoom').hide();
                    $('#list-students-registed').html('');
                    if (students && students.data.length > 0) {
                        var student = students.data;
                        var html = '';
                        for (var i = 0; i < student.length; i++) {
                            html += '<tr>';
                            html += ' <td>' + student[i]['no'] + '</td>';
                            html += ' <td>' + student[i]['fullname'] || '-' + '</td>';
                            html += ' <td>' + (student[i]['phone'] || '-') + '</td>';
                            html += ' <td>' + student[i]['email'] + '</td>';
                            html += ' <td>' + (student[i]['time_join'] || '-') + '</td>';
                            html += ' <td>' + (student[i]['time_out'] || '-') + '</td>';
                            html += ' <td>' + (student[i]['room_status'] || '-') + '</td>';
                            if (student[i]['status'] == 1) {
                                if (student[i]['zoom'] == 1) html += ' <td align="center"><a href="javascript:void(0);"><span class="fa fa-unlock"></span></a>'; else html += ' <td align="center"><a href="javascript:void(0);" onclick=LHM.lives.remove_student("' + student[i]['_id'] + '","' + student[i]['live_id'] + '","' + student[i]['status'] + '")><span class="fa fa-unlock"></span></a>';
                            } else {
                                html += ' <td align="center"><a href="javascript:void(0);" onclick=LHM.lives.remove_student("' + student[i]['_id'] + '","' + student[i]['live_id'] + '","' + student[i]['status'] + '")><span class="fas fa-lock "></span></a>';
                            }
                            html += ' </td>';
                            html += '</tr>';
                        }
                        $('#list-students-registed').html(html);
                    } else {
                        $('#list-students-registed').html('<tr><td colspan="7">Không có dữ liệu</td></tr>');
                    }
                    $('#link-share-u').html('<a href="javascript:void(0);">' + students.link_share + '</a>');
                    if (students.code_join_room) {
                        $('#code-share-room').html(students.code_join_room);
                    } else {
                        $('#code-share-room').html('');
                    }
                    if (students.password) {
                        $('#password-room').html(students.password);
                    } else {
                        $('#password-room').html('');
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, remove_student: function remove_student(_id, live_id, status) {
            var val_post = {status: status, _id: _id, live_id: live_id, _token: $.cookie('_token')};
            $.confirm({
                title: 'Xác nhận',
                content: 'Thay đổi trạng thái, bạn có muốn tiếp tục?',
                buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/lives/deleteInviteStudent',
                            data: val_post,
                            dataType: 'json',
                            success: function success(data) {
                                if (data.login && data.login == 1) {
                                    if (data.success) {
                                        LHM.lives.list_registered_students(live_id);
                                    }
                                } else if (data.login && data.login == 2) {
                                    window.location = data.href;
                                }
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: {'text': 'Đóng'}
                }
            });
        }, list_courses: function list_courses(page) {
            page = page ? page : 0;
            var val_post = {limit_record: page};
            $.ajax({
                type: 'GET',
                url: base_url + '/lives/listCourses/',
                data: val_post,
                dataType: 'json',
                beforeSend: function beforeSend() {
                    $('table').removeClass('table');
                    $('table').css('border', 'none');
                    $('#course_registed').html('<tr style="background:#f3f5f6;"><td colspan="5"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                },
                success: function success(lives) {
                    var txt_giangvien = __('Giảng viên');
                    var txt_vaohoc = __('Vào học');
                    var txt_chitiet = __('Chi tiết');
                    if (lives.login && lives.login == 1) {
                        $('table').addClass('table');
                        LHM.common.pagination_site(lives.count_record, lives.limit, page, 'course_registed');
                        document.getElementById('course_registed').innerHTML = '';
                        if (lives && lives.data) {
                            var live = lives.data;
                            var button;
                            if (live.length > 0) {
                                for (var i = 0; i < live.length; i++) {
                                    var html_record = '';
                                    if (live[i]['percent'] == 0) {
                                        var styleProcess = 'style="width:' + live[i]['percent'] + '%;color:black;margin-left:8px"';
                                    } else {
                                        var styleProcess = 'style="width:' + live[i]['percent'] + '%;color:black"';
                                    }
                                    var time_group = live[i]['time_in_group'];
                                    var study_time_user = live[i]['study_time_user'] ? live[i]['study_time_user'] : '';
                                    var isExpired = live[i]['is_expired'];
                                    if (live[i]['live'] && live[i]['show_record'] && live[i]['course_id'] == null) html_record += '<a href="' + base_url + '/list-records/' + live[i]['code'] + '" class="flex-1 btn btn-primary btn-join-my-record" style="color:#fff;"><i class="fa fa-play-circle"></i> Record</a>';
                                    html_record += "<a class=\"flex-1 btn btn-primary text-white list-detail-lesson\" data-uid=\"".concat(uid, "\" data-course-id=\"").concat(live[i]['course_id']['$id'], "\" href=\"javascript:;\" style=\"padding: 10px 20px\">").concat(txt_chitiet, "</a>");
                                    var html = ' <tr class="box-ele-course">';
                                    html += '     <td id ="img_my_course">';
                                    if (!isExpired) {
                                        html += '         <a href="' + live[i]['link_join'] + '" class="' + live[i]['btn_class'] + '" data-course-complete="' + live[i]['complete_course'] + '" data-msg-time-group="' + live[i]['msg_time_group'] + '" ><img src="' + live[i]['cover'] + '" class="course-cover aspect-ratio-5-3"></a>';
                                    } else {
                                        html += '         <a href="' + live[i]['link_join'] + '" class="' + live[i]['btn_class'] + '" data-course-complete="' + live[i]['complete_course'] + '" data-msg-time-group="' + live[i]['msg_time_group'] + '" ><img src="https://www.perfectlens.ca/img/articles/expired-red-stamp.jpg" class="course-cover aspect-ratio-5-3"></a>';
                                    }
                                    html += '     </td>';
                                    html += '     <td>';
                                    html += '         <div class="name-item-course"><a href="' + live[i]['link_join'] + '" class="' + live[i]['btn_class'] + '" data-msg-time-group="' + live[i]['msg_time_group'] + '" data-course-complete="' + live[i]['complete_course'] + '">' + live[i]['name'] + '</a></div>';
                                    html += '         <div class="name-teacher"><strong>' + txt_giangvien + ': </strong> ' + live[i]['teacher'] + '</div>';
                                    if (!live[i]['hide_progress']) {
                                        html += '         <div class="progress progress-lives-mycourses"><div class="progress-bar progress-bar-striped active progress-bar-animated bg-success" role="progressbar" aria-valuenow="' + live[i]['percent'] + '" aria-valuemin="0" aria-valuemax="100" ' + styleProcess + '>' + live[i]['percent'] + '%</div></div>';
                                    }
                                    html += time_group;
                                    html += study_time_user;
                                    html += '     </td>';
                                    html += '     <td class="btn-join-course" style="min-width: 225px"><div class="gap-1 d-flex"><a href="' + live[i]['link_join'] + '" class="btn btn-success text-white flex-1 btn-join-my-course ' + live[i]['btn_class'] + '" data-msg-time-group="' + live[i]['msg_time_group'] + '" data-course-complete="' + live[i]['complete_course'] + '"><i class="fas fa-angle-right"></i> ' + txt_vaohoc + '</a>' + html_record + '</div></td>';
                                    html += ' </tr>';
                                    document.getElementById('course_registed').innerHTML += html;
                                }
                            } else {
                                document.getElementById('course_registed').innerHTML = '<tr><td colspan="5"><span>' + __('Bạn chưa tham gia khóa học nào') + '</span></td></tr>';
                            }
                            $('.paginate-course-list').show();
                        }
                    } else if (lives.login && lives.login == 2) {
                        window.location = lives.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, list_combo_quiz: function list_combo_quiz(page) {
            page = page ? page : 0;
            var val_post = {limit_record: page};
            $.ajax({
                type: 'GET',
                url: base_url + '/combosite/listComboQuiz/',
                data: val_post,
                dataType: 'json',
                success: function success(res) {
                    var html = '<div class="text-center">' + __('Không tồn tại dữ liệu') + '</div>';
                    if (res.data) {
                        LHM.common.pagination_site(res.data.length === res.limit ? res.data.length + 1 : res.data.length, res.limit, res.page, 'list_combo_quiz_acount');
                        if (res.data.length > 0) {
                            html = '';
                            $('#content-combo-quiz-list').show();
                            $.each(res.data, function (k, v) {
                                if (v.items.length > 0) {
                                    html += '<div class="combo-quiz-child mb-2"><div class="d-flex gap-1 py-3 px-2 align-items-center" style="background-color: #e7e9e9"><h5 class="mb-0 mr-auto">' + v.combo_name + '</h5><a class="js-collapsed-click cursor-pointer" data-id="' + v._id['$id'] + '"><i class="fas fa-' + (k === 0 ? 'minus' : 'plus') + '" aria-hidden="true"></i></a></div><div class="' + v._id['$id'] + '" style="' + (k === 0 ? '' : 'display: none') + '">';
                                    $.each(v.items, function (k2, v2) {
                                        html += '<div class="d-flex gap-1 align-items-center p-2 ' + (k2 === v.items.length - 1 ? '' : 'border-bottom') + '"><div class="mr-auto">' + v2.quiz_title + '</div><a href="/quiz/' + (v2.code_join_quiz ? v2.code_join_quiz : v2._id['$id']) + '" class="review-demo">' + __('Vào thi') + '</a></div>';
                                    });
                                    html += '</div></div>';
                                }
                            });
                        }
                    }
                    $('#list_combo_quiz_acount').html(html);
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, list_combo_document: function list_combo_document(page) {
            var dataHtml = $('#list_combo_document_account'), html = '';
            $.ajax({
                type: 'GET',
                url: base_url + '/combosite/listComboDocument/',
                dataType: 'json',
                success: function success(res) {
                    if (res.data && res.data.length > 0) {
                        $('#content-combo-document-list').show();
                        $.each(res.data, function (k, v) {
                            html += "<div class='document-child'><div class=\"py-3 px-2 mb-3 d-flex gap-1\" style=\"background-color: #e7e9e9\"><h5 class='mb-0 mr-auto'>".concat(v.name, "</h5><a class='js-collapsed-click cursor-pointer' href='javascript:;' data-id='collapsed-document-" + k + "'><i class='fas fa-" + (k === 0 ? 'minus' : 'plus') + "'></i></a></div><div class='collapsed-document-" + k + "' style='" + (k === 0 ? '' : 'display: none') + "'>");
                            if (v.items && v.items.length > 0) {
                                $.each(v.items, function (k1, v1) {
                                    var border = 'border-bottom';
                                    if (k1 === v.items.length - 1) {
                                        border = '';
                                    }
                                    html += "<div class=\"py-2 pl-3 d-flex justify-content-between ".concat(border, "\">\n                                            <div style=\"word-break: break-all\">").concat(v1.name_document, "</div>\n                                            <div style=\"width: 100px\"><a href=\"").concat(v1.href, "\" class=\"btn-download-document ").concat(v1["class"], "\" data-combo=\"").concat(v.id, "\" data-item=\"").concat(v1.itemId, "\">T\u1EA3i v\u1EC1</a></div>\n                                         </div>\n                                        ");
                                });
                            }
                            html += '</div></div>';
                        });
                    }
                }
            }).always(function () {
                dataHtml.html(html);
            });
        }, list_records: function list_records(page) {
            page = page ? page : 0;
            var val_post = {limit_record: page, code: $('#code_live_record').val()};
            var url = location.href;
            var check = url.indexOf("list-records");
            $.ajax({
                type: 'GET',
                url: base_url + '/lives/getListRecord/',
                data: val_post,
                dataType: 'json',
                beforeSend: function beforeSend() {
                    $('#list_records').html('<tr><td colspan="5" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                },
                success: function success(lives) {
                    if (lives.login && lives.login == 1) {
                        LHM.common.pagination_site(lives.count_record, lives.limit, page, 'list_records');
                        document.getElementById('list_records').innerHTML = '';
                        $('#live_name').text(lives.live_name);
                        if (lives && lives.data) {
                            var live = lives.data;
                            if (live.length > 0) {
                                for (var i = 0; i < live.length; i++) {
                                    if (live[i]['zoom'] != 1) {
                                        var link_record = '<a href="javascript:;" onclick="LHM.courses.previewvideo(this)" id="filename_record_' + live[i]['_id'] + '" data-id="' + live[i]['_id'] + '" data-label="Record: ' + live[i]['createdAt'] + '" data-type="stream" style="color:#007bff;">' + live[i]['name'] + '</a>';
                                    } else {
                                        var link_record = '<a href="' + live[i]['name'] + '" target="_blank" id="filename_record_' + live[i]['_id'] + '" data-id="' + live[i]['_id'] + '" data-label="Record: ' + live[i]['createdAt'] + '" data-type="stream" style="color:#007bff;" target="_blank">' + live[i]['name'] + '</a>' + '</br>' + live[i]['password'] + '</br>Chat file: <a href="' + live[i]['chat'] + '" style="color:#007bff;" target="_blank">' + live[i]['chat'] + '</a>';
                                    }
                                    var html = ' <tr>';
                                    html += '     <td>' + (i + 1) + '</td>';
                                    html += '     <td>' + link_record + '</td>';
                                    html += '     <td>' + live[i]['createdAt'] + '</td>';
                                    html += '     <td>' + live[i]['duration'] + '</td>';
                                    if (live[i]['zoom'] != 1) {
                                        html += '     <td style="text-align: right;"><a href="javascript:;" onclick="LHM.courses.previewvideo(this)" data-id="' + live[i]['_id'] + '" data-label="Record: ' + live[i]['createdAt'] + '" data-type="stream" style="margin-right:20px"><i class="fa fa-play-circle"></i> Xem</a>';
                                        if (check < 0) {
                                            html += '     <a href="javascript:void(0);" name="' + live[i]['name'] + '" onclick=LHM.courses.update_fields_in_file(this,"' + live[i]['_id'] + '") style="margin-right:20px"><i class="fas fa-edit"></i> Sửa </a>';
                                            html += '     <a href="javascript:void(0);" onclick=LHM.lives.remove_record(this,"' + live[i]['_id'] + '") style="margin-right:20px"><i class="fa fa-trash"></i> Xóa </a></td>';
                                        }
                                    }
                                    html += ' </tr>';
                                    document.getElementById('list_records').innerHTML += html;
                                }
                            } else {
                                document.getElementById('list_records').innerHTML = '<tr><td colspan="6"><span>Không có dữ liệu</span></td></tr>';
                            }
                        }
                    } else if (lives.login && lives.login == 2) {
                        window.location = lives.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, list_notify: function list_notify(live_id) {
            var data = {live_id: live_id};
            $.ajax({
                type: 'GET',
                url: base_url + '/lives/ListNotify',
                data: data,
                dataType: 'json',
                success: function success(notifications) {
                    if (notifications.login && notifications.login == 1) {
                        $('#notifications').html('');
                        if (notifications && notifications.data.length) {
                            var notify = notifications.data;
                            var html = '';
                            for (var i = 0; i < notify.length; i++) {
                                html += '<div class="panel">' + '<div class="panel-heading">' + '<div class="text-center">' + '<div class="row">' + '<div class="col-sm-9">' + '<h3 class="pull-left">' + notify[i]['title'] + '</h3>' + '</div>' + '<div class="col-sm-3">' + '<h5 class="pull-right">' + '<small><i class="fa fa-clock"></i> ' + notify[i]['createdAt'] + '</small>' + '</h5>' + '</div>' + '</div>' + '</div>' + '</div>' + '<div class="panel-body">' + notify[i]['content'] + '</div>' + '<div class="panel-footer" style="padding-bottom:10px;">' + '<a href="javascript:;" class="btn btn-link btn-sm pull-right" title="Xóa" onclick="LHM.notification.del(\'' + notify[i]['_id']['$id'] + '\',this)" data-title="' + notify[i]['title'] + '" data-content="' + notify[i]['content'] + '"><i class="fa fa-trash"></i> Xóa</a>' + '<a href="javascript:;" onclick="LHM.notification.edit(\'' + notify[i]['_id']['$id'] + '\',this)" class="btn btn-link btn-sm pull-right" title="Chỉnh sửa" style="margin-right:5px;" data-title="' + notify[i]['title'] + '" data-content="' + notify[i]['content'] + '"><i class="fa fa-edit"></i> Chỉnh sửa</a>' + '</div>' + '</div>';
                            }
                            $('#notifications').html(html);
                        } else {
                            $('#notifications').html('<div class="panel">' + '<div class="panel-heading">' + '</div>' + '<div class="panel-body text-center">' + 'Không có thông báo' + '</div>' + '<div class="panel-footer" style="padding-bottom:10px;">' + '</div>' + '</div>');
                        }
                    } else if (notifications.login && notifications.login == 2) {
                        window.location = notifications.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, invite_student: function invite_student(live_id) {
            var link = $('#link-share-u').text();
            var code = $('#code-share-room').html();
            var pass = $('#password-room').html();
            var html = '<div>' + '<label><strong> Cách 1: </strong></label>' + '<span> Link chia sẻ: ' + link + '</span>' + '</div>' + '<label><strong> Cách 2: </strong></label>' + '<span>' + code + '</span>' + '<span>' + pass + '</span>' + '</div>' + '<div class="input-invite-student">' + '<label><strong> Cách 3:  </strong></label>' + '<span class="form-check-label" for="email-student"> Mời qua email.</span>' + '<div id="invite-email" style="margin-top: 10px;overflow:hidden;">' + '<form role="form" class="form_upload_excel" id="form_upload_excel" enctype="multipart/form-data">' + '<input type="hidden" name="code_live" value="' + live_id + '"/>' + '<div class="row form-group">' + '<div id="wait" style="display:none;position:absolute;top:30;left:35%;top:35%;z-index:1000;width:155px;text-align:center;">' + '<i class="fa fa-spinner fa-spin" style="font-size:50px"></i>' + '<br>' + '<span>Đang gửi...</span>' + '</div>' + '<div class="col-sm-12">' + '<textarea name="send_email" id="send_email" rows="6" cols="8" class="form-control input-step" placeholder="Nhập mỗi dòng một địa chỉ email"></textarea>' + '</div>' + '</div>' + '</form>' + '</div>';
            $.confirm({
                title: 'Mời học viên',
                columnClass: 'col-md-6',
                type: 'blue',
                content: html,
                onContentReady: function onContentReady() {
                },
                buttons: {
                    formSubmit: {
                        text: 'OK', btnClass: 'btn-blue btn-send-invite', action: function action() {
                            var _this = this;
                            $('.btn-send-invite').attr('disabled', 'disabled');
                            LHM.lives.send_mail_to_student(_this);
                            $('.btn-send-invite').removeAttr('disabled');
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, invite_student_common: function invite_student_common(live_id, code) {
            var pass = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
            var link = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
            var html = '<div>' + '<div>' + '<label><strong> Cách 1: </strong></label>' + '<span> Link chia sẻ: ' + link + '</span>' + '</div>' + '<div class="mt-10">' + '<label><strong> Cách 2: </strong></label>' + '<span>' + code + '</span>' + '<span>' + pass + '</span>' + '</div>';
            if (typeof sid != 'undefined') html += '<div class="input-invite-student mt-10">' + '<label><strong> Cách 3:  </strong></label>' + '<span class="form-check-label" for="email-student"> Mời qua email.</span>' + '<div id="invite-email" style="margin-top: 10px;overflow:hidden;">' + '<form role="form" class="form_upload_excel" id="form_upload_excel" enctype="multipart/form-data">' + '<input type="hidden" name="code_live" value="' + live_id + '"/>' + '<div class="row form-group">' + '<div id="wait" style="display:none;position:absolute;top:30;left:35%;top:35%;z-index:1000;width:155px;text-align:center;">' + '<i class="fa fa-spinner fa-spin" style="font-size:50px"></i>' + '<br>' + '<span>Đang gửi...</span>' + '</div>' + '<div class="col-sm-12">' + '<textarea name="send_email" id="send_email" rows="6" cols="8" class="form-control input-step" placeholder="Nhập mỗi dòng một địa chỉ email"></textarea>' + '</div>' + '</div>' + '</form>' + '</div>';
            html += '</div>';
            $.confirm({
                title: 'Mời học viên',
                columnClass: 'col-md-6',
                type: 'blue',
                content: html,
                onContentReady: function onContentReady() {
                },
                buttons: {
                    formSubmit: {
                        text: 'OK', btnClass: 'btn-blue btn-send-invite', action: function action() {
                            var _this = this;
                            $('.btn-send-invite').attr('disabled', 'disabled');
                            LHM.lives.send_mail_to_student(_this);
                            $('.btn-send-invite').removeAttr('disabled');
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, get_files_in_classes: function get_files_in_classes(page) {
            page = page ? page : 0;
            var filter = {
                category: $('#category_show_filter').val(),
                limit_record: $('#limit_record').val(),
                page: page
            };
            $.ajax({
                type: 'GET',
                data: filter,
                url: base_url + '/library/getFilesInLibrary',
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.library.print_html.data_file = rs.files;
                        LHM.common.pagination_site(rs.file_total, rs.limit, page, 'get_files_in_library');
                        LHM.library.print_html.print_files_in_library();//print uploader
                        $('.uploader_targer').html(rs.uploader);//calbback when upload success
                        LHM.uploader.init(function (file) {
                            LHM.library.get_files_in_library();
                        });
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, addfiletolive: function addfiletolive(fid, live_id) {
            $.ajax({
                type: 'POST',
                url: base_url + '/lives/addfiletolive',
                data: {fid: fid, live_id: live_id, _token: $.cookie('_token')},
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, get_document: function get_document(page) {
            page = page ? page : 0;
            var filter = {
                id: $('#v-pills-classes-tab').attr('data-id'),
                limit_record: $('#limit_record').val(),
                page: page
            };
            $.ajax({
                type: 'GET',
                data: filter,
                url: base_url + '/lives/getFilesInLive',
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.pagination_site(rs.file_total, rs.limit, page, 'list_files_in_live');//print uploader
                        $('.uploader_targer_live').html(rs.uploader);
                        $('#list_files_in_live').html('');
                        var html = '';
                        var files = rs.files;
                        if (files.length) {
                            for (var i = 0; i < files.length; i++) {
                                var action_remove = '<a href="javascript:void(0);" onclick=LHM.library.update_fields_in_file(this,"' + files[i]['_id'] + '","remove")><i class="fa fa-trash"></i>&nbsp;Xóa</a>';
                                html += '<tr id="' + files[i]['_id'] + '">';
                                html += '<td style="vertical-align: middle;">' + (i + 1) + '</td>';
                                html += '<td class="title-content" style="padding-left: 5px; vertical-align: middle;">';
                                html += '    <div>';
                                if (files[i]['type'] != 'youtube') html += '<a href="' + files[i]['url_file'] + '" target="_blank"><i class="far fa-file-pdf"></i> <span id="filename_' + files[i]['_id'] + '">' + files[i]['name'] + '</span> </a>'; else html += '<a href="javascript:void(0);" onclick="LHM.library.play_video(\'' + files[i]['url_file'] + '\', \'youtube\')"><i class="fab fa-youtube"></i> ' + files[i]['name'] + ' </a>';
                                html += '    </div>';
                                html += '</td>';
                                html += ' <td align="right">';
                                html += '           <ul class="list-unstyled acts-li">';// html += '           <li><a href="javascript:void(0);" category_id="'+files[i]['category_id']+'" name="'+files[i]['name']+ '" onclick=LHM.library.update_fields_in_file(this,"'+files[i]['_id']+ '","rename")><i class="fas fa-edit"></i> Sửa </a></li>'
                                html += '           <li style="float:none;">' + action_remove + '</li>';
                                html += '           </ul>';
                                html += ' </td>';
                                html += '</tr>';
                            }
                        } else html = "<tr><td colspan='3' class='nodata'>Không có dữ liệu</td></tr>";
                        $('#list_files_in_live').html(html);//calbback when upload success
                        LHM.uploader.init(function (file) {
                            LHM.lives.addfiletolive(file._id['$id'], $('#v-pills-classes-tab').attr('data-id'));
                            LHM.lives.get_document();
                        });
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, remove_record: function remove_record(current, fid) {
            $.confirm({
                title: 'Xóa file', content: 'Bạn có muốn xóa file này?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/lives/removeRecord',
                            data: {fid: fid, _token: $.cookie('_token')},
                            dataType: 'json',
                            success: function success(_success6) {
                                if (_success6.login && _success6.login == 1) {
                                    if (!_success6.error) {
                                        $(current).closest("tr").remove();
                                        if ($('#list_records').find('tr').length == 0) $('#list_records').html("<tr><td colspan='4' class='nodata'>Không có dữ liệu</td></tr>");
                                    }
                                } else if (_success6.login && _success6.login == 2) {
                                    window.location = _success6.href;
                                }
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }
    }, mnDashboard: {
        init: function init(feature) {
            switch (feature) {
                case"courses":
                    this.getCourses();
                    break;
                case"course_package":
                    this.getCoursePackage();
                    break;
                case"combos_quiz":
                    this.getComboQuiz();
                    break;
                case"course_document_package":
                    this.getCourseDocumentPackage();
                    break;
                case"classes":
                    this.getClasses();
                    break;
                case"edubit_classes":
                    this.getEdubitClasses();
                    break;
                case"library":
                    this.getLibrary();
                    break;
                case"sites":
                    this.getSites();
                    break;
                case"users":
                    this.getUsers();
                    break;
                case"setting_plugin":
                    this.getSettingPlugins();
                    break;
                case"setting_api":
                    this.getInfoApi();
                    break;
                case"setting_automation":
                    this.getInfoAutomation();
                    break;
                case"setting_domain":
                    this.getInfoDomain();
                    break;
                case"site_info":
                    this.getInfoSite();
                    break;
                case"website":
                    this.getInfoWebSite();
                    break;
                case"coupons":
                    this.getCoupons();
                    break;
                case"active_class":
                    this.getActiveCode();
                    break;
                case"setup-course":
                    this.getActiveCode();
                    break;
                case"membership_info":
                    this.getMembership();
                    break;
                case"intergrade_tool":
                    this.getIntergrade();
                    break;
                case"setting_payment_method":
                    this.getPaymentMethod();
                    break;
                case"setting_affiliate":
                    this.getSettingAffiliate();
                    break;
                case"landingpage_nav":
                    this.landingpageNav();
                    break;
                case"getnews":
                    this.getNews();
                    break;
                case"landingpage_page":
                    this.landingpagePage();
                    break;
                case"landingpage_layout":
                    this.landingpageLayout();
                    break;
                case"overview":
                    this.getDashboard();
                    break;
                case"division":
                    this.getDivision();
                    break;
                case"quiz_test":
                    this.getQuizTest();
                    break;
                case"comprehensive_exam":
                    this.getQuizTest(null, 'comprehensive_exam');
                    break;
                case"course_test":
                    this.getCourseTest();
                    break;
                case"report":
                    this.getReport();
                    break;
                case"setting_email_template":
                    this.setting_email_template();
                    break;
                case"setting_certificate_template":
                    this.setting_certificate_template();
                    break;
                case"setting_site_login":
                    this.setting_site_login();
                    break;
                case"setting_site_popup":
                    this.setting_site_popup();
                    break;
                case"security":
                    this.getSecurity();
                    break;
                case"landingpage_themes":
                    this.landingpageThemes();
                    break;
                case"review_cms":
                    this.getReview_cms();
                    break;
                case"setting_site_tag":
                    this.setting_site_tag();
                    break;
                case"store":
                    this.getStore();
                    break;
                case"get_setting_notification":
                    this.getSettingNotification();
                    break;
                case"save_setting_notification":
                    this.saveSettingNotification();
                    break;
                default:
                    break;
            }
        }, getSettingNotification: function getSettingNotification() {
            $.get('/new_notification/getSettingSite', function (res) {
                $('#v-pills-setting-notification').html(res.html ? res.html : '');
            });
        }, saveSettingNotification: function saveSettingNotification() {
            var form = $('#setting_notification_site');
            LHM.common.confirmAjax('/new_notification/saveSettingSite', 'POST', "".concat(form.serialize(), "&_token=").concat($.cookie('_token')));
        }, getStore: function getStore() {
            if ('content' in document.createElement('template')) {
                var template = document.querySelector('#store_card');
                var store = document.querySelector('.js-pages-in-store');
                if (store.childNodes.length === 0) {
                    fetch('/store/getStore').then(function (res) {
                        return res.json();
                    }).then(function (res) {
                        if (res.data && res.data.length > 0) {
                            res.data.forEach(function (page) {
                                var card = template.content.cloneNode(true);
                                var id = page._id['$id'];
                                var currency = new Intl.NumberFormat('vi-VN', {style: 'currency', currency: 'VND'});
                                card.querySelector('.js-thumb').href = "/data/store/".concat(id, ".jpg");
                                card.querySelector('.js-thumb img').src = "/data/store/".concat(id, ".jpg");
                                card.querySelector('.js-price').innerText = page.price === 0 ? 'Miễn phí' : currency.format(page.price);
                                card.querySelector('.js-name').innerText = page.title;
                                card.querySelector('.js-active').dataset.id = id;
                                card.querySelector('.js-buy').href = "/upgrade/page/".concat(id);
                                if (page.active) {
                                    card.querySelector('.js-buy').remove();
                                    card.querySelector('.js-active').classList.remove('d-none');
                                }
                                if (['hotro.edubit.vn', 'utb.vn'].includes(window.location.host)) {
                                    card.querySelector('.js-buy, .js-active').remove();
                                    card.querySelector('.js-readonly').classList.remove('d-none');
                                }
                                store.appendChild(card);
                            });
                        }
                    })["catch"](function (e) {
                        return console.error(e);
                    });
                }
            }
        }, integratedomain: function integratedomain(cur) {
            $(cur).attr('disabled', 'disabled');
            $(cur).find('span').text('Đang cập nhật');
            $('.btn-add-live-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-add-live-popup').attr('disabled', true);
            $('#form-ssl').ajaxSubmit({
                url: base_url + '/sites/integratedomain',
                data: {_token: $.cookie('_token')},
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        $('.btn-add-live-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-add-live-popup').removeAttr('disabled');
                        if (res.status) {
                            $('textarea[name=crt_key]').val('');
                            $('textarea[name=private_key]').val('');
                            $('#v-pills-profile-tab').data('domain', res.domain);
                        }
                        if (res.messages && res.messages.length > 0) {
                            for (var i = 0; i < res.messages.length; i++) {
                                LHM.common.notify(null, res.status ? 'success' : 'danger', res.messages[i]);
                            }
                        }
                        if (res.redirect) window.location = res.redirect;
                        $(cur).find('span').text('Cập nhật');
                        $(cur).removeAttr('disabled');
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                }
            });
        }, getListPackageTrial: function getListPackageTrial() {
            var selected = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
            var html = '<option value="" >Không</option>';
            var option_select_old = $('#save_package_trail_membership').val();
            $('#info-membership .package_membership input[type="checkbox"]').each(function (index, el) {
                if ($(this).is(':checked')) {
                    var day = $(this).val();
                    var value = day + '_' + $(this).data('type');
                    if (option_select_old == value) {
                        if ($(this).data('type') == "day") {
                            html += '<option value="' + day + '_' + $(this).data('type') + '" selected>Gói ' + day + ' ngày</option>';
                        } else {
                            html += '<option value="' + day + '_' + $(this).data('type') + '" selected>Gói ' + day + ' tháng</option>';
                        }
                    } else if (selected == value) {
                        if ($(this).data('type') == "day") {
                            html += '<option value="' + day + '_' + $(this).data('type') + '" selected>Gói ' + day + ' ngày</option>';
                        } else {
                            html += '<option value="' + day + '_' + $(this).data('type') + '" selected>Gói ' + day + ' tháng</option>';
                        }
                    } else {
                        if ($(this).data('type') == "day") {
                            html += '<option value="' + day + '_' + $(this).data('type') + '">Gói ' + day + ' ngày</option>';
                        } else {
                            html += '<option value="' + day + '_' + $(this).data('type') + '">Gói ' + day + ' tháng</option>';
                        }
                    }
                }
            });
            $('#select_package_membership_trail_cms').html(html);
        }, updatesite: function updatesite() {
            $('.btn-update-site-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-update-site-popup').attr('disabled', true);
            $('#form-update-site').ajaxSubmit({
                url: base_url + '/sites/updatesite',
                data: {_token: $.cookie('_token')},
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        $('.btn-update-site-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-update-site-popup').removeAttr('disabled');
                        if (res.status) {
                        }
                        if (res.messages && res.messages.length > 0) {
                            for (var i = 0; i < res.messages.length; i++) {
                                LHM.common.notify(null, res.status ? 'success' : 'danger', res.messages[i]);
                            }
                        }
                        if (res.newlang) {//setlangDefault(res.newlang)
                            LHM.common.changeLanguages(res.newlang);
                        }
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                }
            });
        }, updateSiteLogin: function updateSiteLogin() {
            $('.btn-update-site-login').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-update-site-login').attr('disabled', true);
            $('#form-update-config-login').ajaxSubmit({
                url: base_url + '/sites/updateSiteLogin',
                data: {_token: $.cookie('_token')},
                success: function success(res) {
                    $('.btn-update-site-login').html('<i class="fa fa-save"></i> Cập nhật');
                    $('.btn-update-site-login').removeAttr('disabled');
                    if (res.login && res.login == 1) {
                        if (res.status) {
                        }
                        if (res.messages && res.messages.length > 0) {
                            for (var i = 0; i < res.messages.length; i++) {
                                LHM.common.notify(null, res.status ? 'success' : 'danger', res.messages[i]);
                            }
                        }
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                }
            });
        }, updatewebsite: function updatewebsite() {
            $('.btn-add-live-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-add-live-popup').attr('disabled', true);
            $('#form-update-options').ajaxSubmit({
                url: base_url + '/sites/updatewebsite',
                data: {_token: $.cookie('_token')},
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        $('.btn-add-live-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-add-live-popup').removeAttr('disabled');
                        if (res.status) {
                        }
                        if (res.messages && res.messages.length > 0) {
                            for (var i = 0; i < res.messages.length; i++) {
                                LHM.common.notify(null, res.status ? 'success' : 'danger', res.messages[i]);
                            }
                        }
                        $('.msg-verify-email').html('');
                        if (res.email_send && res.show_link_verify) {
                            $('#verify_email_sender').show();
                        } else {
                            $('#verify_email_sender').hide();
                        }
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                }
            });
        }, updateToken: function updateToken() {
            LHM.mnDashboard.updateKeySite('token_str');
        }, updateUrlWebHook: function updateUrlWebHook() {
            LHM.mnDashboard.updateKeySite('web_hook_url');
        }, updateUrlWebHookV2: function updateUrlWebHookV2() {
            LHM.mnDashboard.updateKeySite('web_hook_url_v2');
        }, updateWebHookInfoYbai: function updateWebHookInfoYbai() {
            var data = {_token: $.cookie('_token')};
            data['fields[ybai_access_key]'] = $('#v-pills-auto [name="ybai_access_key"]').val();
            data['fields[ybai_secret_key]'] = $('#v-pills-auto [name="ybai_secret_key"]').val();
            $.ajax({
                type: 'POST',
                url: base_url + '/sites/updateKeySite',
                data: data,
                dataType: 'json',
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        $('#v-pills-auto').css('pointer-events', 'unset');
                        LHM.common.notify(null, res.success ? 'success' : 'danger', res.message ? res.message : 'Có lỗi xảy ra');
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                }
            });
        }, updateKeySite: function updateKeySite(key) {
            var noti = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
            if (key) {
                var data = {_token: $.cookie('_token')};
                if ($('#v-pills-auto [name=' + key + ']').length) {
                    if ($('#v-pills-auto [name=' + key + ']').attr('type') == 'checkbox') {
                        if ($('#v-pills-auto [name=' + key + ']').is(':checked')) {
                            data['fields[' + key + ']'] = 'on';
                        } else {
                            data['fields[' + key + ']'] = '';
                        }
                    } else {
                        data['fields[' + key + ']'] = $('#v-pills-auto [name=' + key + ']').val();
                    }/*$('#v-pills-auto').css('pointer-events', 'none');*/
                    $.ajax({
                        type: 'POST',
                        url: base_url + '/sites/updateKeySite',
                        data: data,
                        dataType: 'json',
                        success: function success(res) {
                            if (res.login && res.login == 1) {
                                $('#v-pills-auto').css('pointer-events', 'unset');
                                if (noti) {
                                    LHM.common.notify(null, res.success ? 'success' : 'danger', res.message ? res.message : 'Có lỗi xảy ra');
                                }
                            } else if (res.login && res.login == 2) {
                                window.location = res.href;
                            }
                        }
                    });
                }
            }
        }, checkUrlWebHook: function checkUrlWebHook() {
            $.post('/sites/checkUrlWebHook', {
                url: $('#web_hook_url').val(),
                '_token': $.cookie('_token')
            }, function (res) {
                LHM.common.notify(null, res.error ? 'danger' : 'success', res.message ? res.message : 'Có lỗi xảy ra');
            });
        }, syncUltraMailer: function syncUltraMailer() {
            $('#form-update-token .btn-sync-now').html('<i class="fas fa-spinner fa-spin"></i> Đang đồng bộ');
            $('#v-pills-auto').css('pointer-events', 'none');
            $('#form-update-token').ajaxSubmit({
                url: base_url + '/sites/syncToUltraMailer',
                data: {_token: $.cookie('_token')},
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        $('#form-update-token .btn-sync-now').html('Đồng bộ ngay');
                        $('#v-pills-auto').css('pointer-events', 'unset');
                        if (res.message) {
                            LHM.common.notify(null, res.success ? 'success' : 'danger', res.message);
                        }
                        if (res.time) {
                            $('#form-update-token .time-end').html(res.time).parent().show();
                        }
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                }
            });
        }, syncToWebHookUrl: function syncToWebHookUrl() {
            $('#form-update-weHookUrl .btn-sync-now').html('<i class="fas fa-spinner fa-spin"></i> Đang đồng bộ');
            $('#v-pills-auto').css('pointer-events', 'none');
            $('#form-update-weHookUrl').ajaxSubmit({
                url: base_url + '/sites/syncToWebHookUrl',
                data: {_token: $.cookie('_token')},
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        $('#form-update-weHookUrl .btn-sync-now').html('Đồng bộ ngay');
                        $('#v-pills-auto').css('pointer-events', 'unset');
                        if (res.message) {
                            LHM.common.notify(null, res.success ? 'success' : 'danger', res.message);
                        }
                        if (res.time) {
                            $('#form-update-weHookUrl .time-end').html(res.time).parent().show();
                        }
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                }
            });
        }, editorPage: function editorPage(pid) {//show / hide box
            $('#navs-links #list-pages').hide();
            $('#navs-links #editor').show();//load section data & setup
            $.get('sites/getSections?s=' + sid, {pid: pid}, function (data) {
                if (data.login && data.login == 1) {
                    var html = '';
                    for (var i in data.section_form) {
                        html += data.section_form[i];
                    }
                    $('#editor #form-data').html(html);
                    if (data.page.url == '/') {
                        $('#seting-page').hide();
                        $('#editor #form-seting').html('');
                    } else {
                        $('#seting-page').show();//parse seting form
                        var form_seting = '<form style="border: 1px solid #ccc;padding: 20px;">' + '<div class="form-group form-row">' + '<div class="col-4">' + '<div class="form-check">' + '<input class="form-check-input" type="checkbox" name="show_header" checked id="show_header">' + '<label class="form-check-label" for="show_header">' + 'Hiện header' + '</label>' + '</div>' + '</div>' + '<div class="col-4">' + '<div class="form-check">' + '<input class="form-check-input" type="checkbox" name="show_footer" checked id="show_footer">' + '<label class="form-check-label" for="show_footer">' + 'Hiện footer' + '</label>' + '</div>' + '</div>' + '</div>' + '<div class="form-group">' + '<label for="seting-page-title">Tiêu đề</label>' + '<input type="text" class="form-control" id="seting-page-title" name="title" value="' + data.page.title + '" placeholder="Tiêu đề">' + '</div>' + '<div class="form-group">' + '<label for="seting-page-url">Đường dẫn URL</label>' + '<input type="text" class="form-control" id="seting-page-url" name="url" value="' + data.page.url + '" placeholder="Đường dẫn URL">' + '</div>' + '</form>';
                        $('#editor #form-seting').html(form_seting);//check show header & footer
                        $('#editor #show_header, #editor #show_footer').prop('checked', false);
                        if (data.page.show_header) {
                            $('#editor #show_header').prop('checked', true);
                        }
                        if (data.page.show_footer) {
                            $('#editor #show_footer').prop('checked', true);
                        }
                    }
                    $('#favicon-landing').attr('src', data.favicon);
                    $('#logo-landing').attr('src', data.logo);
                    $('#theme-name-layout').text(data.theme);//assign update pid
                    $('#editor .btn-save-page').data('pid', pid);//sortable sections
                    $('#editor #form-data').sortable({
                        handle: '.hold', cursorAt: {top: 100}, update: function update(e, ui) {//fix error ckeditor
                            var id = $(ui.item).find('textarea').attr('id');
                            if (id) {
                                CKEDITOR.instances[id].destroy();
                                LHM.common.ckeditor(id);
                            }
                        }
                    });
                    $('#editor #form-data').disableSelection();
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, getDashboard: function getDashboard() {
            $.get('sites/getDashboard?s=' + sid, {}, function (data) {
                $('#dashboard #overview').html(data);
            });
        }, getDivision: function getDivision() {
            $.get('dashboard/getDivision?s=' + sid, {}, function (data) {
                $('#dashboard #division_profit').html(data);
                $('#dashboard .profit a.nav-link:first').trigger('click');
            });
        }, getReport: function getReport() {
            $.get('dashboard/getReport?s=' + sid, {}, function (data) {
                $('#dashboard #report').html(data);//trigger tab auto with hash on url
                if (window.hash_report) {//auto click first tab
                    setTimeout(function () {
                        if ($('.main-tab-report a.nav-link:not(.ignore-menu)[data-link="' + window.hash_report + '"]').length) $('.main-tab-report a.nav-link:not(.ignore-menu)[data-link="' + window.hash_report + '"]').trigger('click');
                    }, 200);
                    $("html, body").animate({scrollTop: 0});
                } else $('#dashboard #report a.nav-link:first').trigger('click');
            });
        }, landingpagePage: function landingpagePage() {
            $('#navs-links #list-pages').show();
            $('#navs-links #editor').hide();
            $.get('sites/getPages?s=' + sid, {}, function (data) {
                if (data.login && data.login == 1) {//parse pases customize
                    var page_default = '', action_popup = '';
                    if (data.isPopupForm) {
                        action_popup = '<li class=""><a href="javascript:;" class="js-modal-page" title="Thêm popup"><i class="fas fa-plus"></i></a></li>';
                    }
                    if (!['hotro.edubit.vn', 'utb.vn'].includes(window.location.host)) {
                        $('#navs-links #page-default thead th:last-child').hide();
                    }
                    for (var i in data.page_customize) {
                        var pc = data.page_customize[i];
                        var url = base_url + (!pc.editor ? '/' + pc.url : '/p/' + pc.url);
                        if (pc.url.indexOf('http') != -1) url = pc.url;
                        page_default += '<tr id="' + pc._id['$id'] + '">' + '<td>' + pc.title + ' <span class="label-home-default badge badge-info ' + (pc.home ? '' : 'd-none') + ' "> Trang chủ</span></td>' + '<td><a target="_blank" href="' + url + '">' + (pc["default"] ? pc.url : pc.url.indexOf('http') != -1 ? pc.url : '/p/' + pc.url) + '</a></td>' + '<td align="center">' + '<ul class="list-unstyled acts-li">' + '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.deleteLink(\'' + pc._id['$id'] + '\')" title="Xóa"><i class="far fa-trash-alt"></i> </a></li>';
                        if (pc.editor) {
                            if (pc.v2) {
                                page_default += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.copyLink(\'' + pc._id['$id'] + '\')" title="Copy"><i class="fas fa-copy"></i></a></li>';
                                page_default += '<li class=""><a href="/edit-page/' + pc._id['$id'] + '" target="_blank" title="Sửa trang v2"><i class="fas fa-edit"></i></a></li>';
                            } else {
                                page_default += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.editorPage(\'' + pc._id['$id'] + '\');" title="Sửa trang"><i class="fas fa-edit"></i></a></li>';
                            }
                        }
                        page_default += '<li class=""><a target="_blank" href="' + url + '" title="Xem trang"><i class="far fa-eye"></i> </a></li>' + '<li class="set-home-default ' + (!pc.home ? '' : 'd-none') + '"><a href="javascript:;" onclick="setHome(this, \'' + pc._id['$id'] + '\')" title="Đặt làm trang chủ"><i class="fas fa-home"></i></a></li>' + action_popup + '</ul>' + '</td>';
                        if (['hotro.edubit.vn', 'utb.vn'].includes(window.location.host)) {
                            page_default += '<td><form method="POST" action="/store/uploadPage/' + pc._id['$id'] + '" class="js-form-upload-page"><div class="input-group"><input type="hidden" name="_token" value="' + $.cookie('_token') + '"><input type="number" placeholder="1000000" class="form-control" required step="1000" min="0" name="price" value="' + (pc.price ? pc.price : 0) + '"><span class="input-group-btn"><button class="btn btn-info" type="submit"><i class="fas fa-cloud-upload"></i></button></span></div></form></td>';
                        }
                        page_default += '</tr>';
                    }
                    for (var _i4 in data.page_default) {
                        var pd = data.page_default[_i4];
                        var _url = base_url + (pd.url == '/' ? '' : !pd.editor ? '/' + pd.url : '/p/' + pd.url);//
                        if (pd.url == 'kich-hoat-khoa-hoc') _url = "javascript:;";
                        page_default += '<tr id="' + pd._id['$id'] + '">' + '<td>' + pd.title + ' <span class="label-home-default badge badge-info ' + (pd.home ? '' : 'd-none') + ' "> Trang chủ</span></td>' + '<td><a target="_blank" href="' + _url + '">' + (pd["default"] ? pd.url != '/' ? '/' + pd.url : pd.url : '/p/' + pd.url) + '</a></td>' + '<td align="center">' + '<ul class="list-unstyled acts-li">';
                        if (pd.url == '/') page_default += '<li class="set-home-default ' + (!pd.home ? '' : 'd-none') + '"><a href="javascript:;" onclick="setHome(this, \'' + pd._id['$id'] + '\')" title="Đặt làm trang chủ"><i class="fas fa-home"></i></a></li>';
                        if (pd.url != 'kich-hoat-khoa-hoc') page_default += '<li class=""><a href="' + _url + '" target="_blank" title="Xem trang"><i class="far fa-eye"></i> </a></li>';
                        if (pd.editor) {
                            if (pd.v2) {
                                page_default += '<li class=""><a href="/edit-page/' + pd._id['$id'] + '" target="_blank" title="Sửa trang v2"><i class="fas fa-edit"></i></a></li>';
                            } else {
                                page_default += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.editorPage(\'' + pd._id['$id'] + '\');" title="Sửa trang"><i class="fas fa-edit"></i></a></li>';
                            }
                        }
                        page_default += action_popup + '</ul></td>';
                        if (['hotro.edubit.vn', 'utb.vn'].includes(window.location.host)) {
                            page_default += '<td></td>';
                        }
                        page_default += '</tr>';
                    }
                    $('#navs-links #page-default tbody').html(page_default);
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, landingpageLayout: function landingpageLayout() {//load section data & setup
            $.get('sites/getSectionsLayout', {sid: sid}, function (data) {
                if (data.login && data.login == 1) {
                    var html = '';
                    var footer1 = '';
                    var footer2 = '';
                    var footer3 = '';
                    for (var i in data.section_form) {
                        html += data.section_form[i];
                    }
                    $('#main-layout #form-data').html(html);
                    for (var j in data.footer1) {
                        footer1 += data.footer1[j];
                    }
                    $('#main-layout #form-data-footer1').html(footer1);
                    for (var h in data.footer2) {
                        footer2 += data.footer2[h];
                    }
                    $('#main-layout #form-data-footer2').html(footer2);
                    for (var k in data.footer3) {
                        footer3 += data.footer3[k];
                    }
                    $('#main-layout #form-data-footer3').html(footer3);
                    $('#favicon-layout').attr('src', data.favicon);
                    $('#favicon-landing').attr('src', data.favicon);
                    $('#logo-landing').attr('src', data.logo);
                    $('#logo-layout').attr('src', data.logo);
                    $('#theme-name-layout').text(data.theme);//assign update pid
                    $('#main-layout .btn-save-page').data('pid', data.pid);//sortable sections
                    $('#main-layout #form-data').sortable({
                        handle: '.hold', cursorAt: {top: 100}, update: function update(e, ui) {//fix error ckeditor
                            var id = $(ui.item).find('textarea').attr('id');
                            if (id) {
                                CKEDITOR.instances[id].destroy();
                                LHM.common.ckeditor(id);
                            }
                        }
                    });
                    $('#main-layout #form-data').disableSelection();//sortable sections footer1
                    $('#main-layout #form-data-footer1').sortable({
                        handle: '.hold', cursorAt: {top: 100}, update: function update(e, ui) {//fix error ckeditor
                            var id = $(ui.item).find('textarea').attr('id');
                            if (id) {
                                CKEDITOR.instances[id].destroy();
                                LHM.common.ckeditor(id);
                            }
                        }
                    });
                    $('#main-layout #form-data-footer1').disableSelection();//sortable sections footer2
                    $('#main-layout #form-data-footer2').sortable({
                        handle: '.hold', cursorAt: {top: 100}, update: function update(e, ui) {//fix error ckeditor
                            var id = $(ui.item).find('textarea').attr('id');
                            if (id) {
                                CKEDITOR.instances[id].destroy();
                                LHM.common.ckeditor(id);
                            }
                        }
                    });
                    $('#main-layout #form-data-footer2').disableSelection();//sortable footer3
                    $('#main-layout #form-data-footer3').sortable({
                        handle: '.hold', cursorAt: {top: 100}, update: function update(e, ui) {//fix error ckeditor
                            var id = $(ui.item).find('textarea').attr('id');
                            if (id) {
                                CKEDITOR.instances[id].destroy();
                                LHM.common.ckeditor(id);
                            }
                        }
                    });
                    $('#main-layout #form-data-footer3').disableSelection();
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, landingpageNav: function landingpageNav() {
            $.get('sites/getNavigation?s=' + sid, {}, function (data) {
                if (data.login && data.login == 1) {
                    var header = '';
                    for (var i in data.header) {
                        var ih = data.header[i];//store for edit
                        window[ih._id['$id']] = ih;
                        header += '<tr id="' + ih._id['$id'] + '">' + '<td>' + ih.title + '</td>' + '<td>' + (ih.url != '/' ? '/' + ih.url : ih.url) + '</td>' + '<td>' + (ih.on_header.status != 4 ? 'Hiển thị' : 'Ẩn') + '</td>' + '<td align="center">' + '<ul class="list-unstyled acts-li">';
                        if (ih["delete"]) {
                            header += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.deleteLink(\'' + ih._id['$id'] + '\')" title="Xóa"><i class="far fa-trash-alt"></i> </a></li>';
                        }
                        if (ih.modify) {
                            header += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.navAddEditLink(\'edit\', \'header\',\'' + ih._id['$id'] + '\')" title="Sửa"><i class="fas fa-edit"></i></a></li>';
                        } else {
                            header += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.navAddEditLink(\'edit\', \'header\',\'' + ih._id['$id'] + '\', \'1\')" title="Sửa"><i class="fas fa-edit"></i></a></li>';
                        }
                        header += '</ul>' + '</td>' + '</tr>';
                    }
                    $('#navs-header tbody').html(header);
                    var footer = '';
                    for (var _i5 in data.footer) {
                        var _ih = data.footer[_i5];//store for edit
                        window[_ih._id['$id']] = _ih;
                        footer += '<tr id="' + _ih._id['$id'] + '">' + '<td>' + _ih.title + '</td>' + '<td>' + (_ih.url != '/' ? _ih.url.indexOf('http') != -1 ? _ih.url : '/' + _ih.url : _ih.url) + '</td>' + '<td>' + (_ih.on_footer.status != 4 ? 'Hiển thị' : 'Ẩn') + '</td>' + '<td align="center">' + '<ul class="list-unstyled acts-li">';
                        if (_ih.modify) {
                            footer += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.navAddEditLink(\'edit\', \'footer\',\'' + _ih._id['$id'] + '\')" title="Sửa"><i class="fas fa-edit"></i></a></li>';
                        }
                        if (_ih["delete"]) {
                            footer += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.deleteLink(\'' + _ih._id['$id'] + '\')" title="Xóa"><i class="far fa-trash-alt"></i> </a></li>';
                        }
                        footer += '</ul>' + '</td>' + '</tr>';
                    }
                    $('#navs-footer tbody').html(footer);
                    $('#navs-header tbody, #navs-footer tbody').sortable({
                        cursorAt: {top: 10},
                        update: function update(e, ui) {
                            var data = $(this).sortable('toArray', {attribute: 'id'});
                            $.post('/sites/updateSortLink', {
                                lid: data,
                                type: $(e.target).data('type'),
                                '_token': $.cookie('_token')
                            }, function (rs) {
                                if (rs.error) {
                                    for (var i in rs.msg) {
                                        var error = '';
                                        for (var i in rs.msg) {
                                            error += '- ' + rs.msg[i] + '<br>';
                                        }
                                    }
                                } else {
                                }
                            });
                        }
                    });
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, landingpageThemes: function landingpageThemes() {
            var gallery_content = '', theme_html = '';
            $.get('sites/getThemes', function (data) {
                if (data.login && data.login == 1) {
                    if (data.themes) {
                        $.each(data.themes, function (index, el) {
                            var status = '<a href="javascript:;" class="btn-link" onclick="LHM.mnDashboard.setUpTheme(this)">Áp dụng</a>';
                            if (el.status) status = 'Đang sử dụng';
                            theme_html += '<div class="col-lg-4 col-md-4 col-sm-12 col-12 text-center">' + '<div class="item-theme ' + el.active + '" data-id="' + el.theme_id['$id'] + '" data-name="' + el.theme_name + '" data-code="' + el.theme_code + '">' + '<a href="javascript:;" data-slide="gallery_' + el.theme_code + '" class="thumb-theme"><img src="' + el.thumb + '" alt="" class="img-fluid"></a>' + '<p class="theme_name text-center">' + el.theme_name + '</p>' + '<p class="text-center status-theme">' + status + '</p>' + '</div>' + '</div>';
                            $.each(el.list_img, function (k, v) {
                                gallery_content += "\n                                    <div class=\"gallery__item_".concat(el.theme_code, "\">\n                                        <a data-fancybox=\"gallery_").concat(el.theme_code, "\" class=\"fancy-theme gallery_").concat(el.theme_code, "_").concat(k, "\" href=\"").concat(v, "\"><img src=\"").concat(v, "\"></a>\n                                    </div>\n                                    ");
                            });
                        });
                    }
                    $('.list-themes').html(theme_html);
                    $('.gallery__content').html(gallery_content);
                    $('.thumb-theme').click(function (event) {
                        $('.' + $(this).attr('data-slide') + '_1').trigger('click');
                    });
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, setUpTheme: function setUpTheme(curr) {
            var theme_id = $(curr).parents('.item-theme').attr('data-id');
            var theme_name = $(curr).parents('.item-theme').attr('data-name');
            var theme_code = $(curr).parents('.item-theme').attr('data-code');
            var html_choice_theme = '<div class="form-check">' + '<input class="form-check-input chk-choice-theme" type="checkbox" id="create_new_section_theme" name="type_change_theme" value="1">' + '<label class="form-check-label" for="create_new_section_theme">' + 'Áp dụng section mới' + '</label>' + '<p class="text-danger">(Lưu ý: Sẽ xóa tất cả các section hiện có thay bằng section của giao diện)</p>' + '</div>';
            $.confirm({
                title: 'Xác nhận áp dụng theme <strong>' + theme_name + '</strong>',
                content: html_choice_theme,
                columnClass: 'col-md-6',
                type: 'blue',
                buttons: {
                    formSubmit: {
                        text: 'OK', btnClass: 'btn-blue', action: function action() {
                            var _this = this;
                            $.post('/sites/setUpTheme', {
                                theme_id: theme_id,
                                theme_code: theme_code,
                                type: $('.chk-choice-theme:checked').val(),
                                _token: $.cookie('_token')
                            }, function (rs) {
                                if (rs.login && rs.login == 1) {
                                    if (rs.error) {
                                        LHM.common.notify(null, 'danger', rs.msg);
                                    } else {
                                        $('.active-theme').find('.status-theme').html('<a href="javascript:;" class="btn-link" data-id="' + $('.active-theme').attr('data-id') + '" data-name="' + $('.active-theme').attr('data-name') + '" data-code="' + $('.active-theme').attr('data-code') + '" onclick="LHM.mnDashboard.setUpTheme(this)">Áp dụng</a>');
                                        $('.item-theme').removeClass('active-theme');
                                        $(curr).parents('.item-theme').addClass('active-theme');
                                        $(curr).parents('p').text('Đang sử dụng');
                                        $(curr).remove();
                                        $.alert({
                                            title: 'Thông báo',
                                            content: 'Áp dụng thành công theme ' + theme_name + '</b> Bạn sẽ được chuyển hướng trong giây lát!',
                                            autoClose: 'Ok|5000',
                                            type: 'blue',
                                            buttons: {
                                                Ok: {
                                                    text: 'Chuyển hướng', action: function action() {
                                                        window.open(base_url, '_blank');
                                                    }
                                                }, cancel: function cancel() {
                                                    text:'Đóng';
                                                }
                                            }
                                        });
                                        _this.close();
                                    }
                                } else if (rs.login && rs.login == 2) {
                                    window.location = rs.href;
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, navAddPackageMembership: function navAddPackageMembership() {
            var count = Number($('#count_package_membership_config_cms').val()) + 1;
            var item = '<div class="form-row align-items-center package_membership add-package-membership-config-cms">';
            item += '<div class="col-sm-3">';
            item += '<div class="form-group">';
            item += '<div class="form-check">';
            item += '<input class="form-check-input period" type="checkbox" value="30" name="day_config_' + count + '" id="day_config_' + count + '" data-type="day">';
            item += '<input type="number" for="day_config_' + count + '" value="30" name ="input_day_config_' + count + '" id="input_day_config_' + count + '" style="width:30%;"> Ngày ';
            item += '</div>';
            item += '</div>';
            item += '</div>';
            item += '<div class="col-auto">';
            item += '<div class="form-group">';
            item += '<input type="number" name="membership_price_config_' + count + '" id="membership_price_config_' + count + '" value="50000" class="form-control membership_price_config" placeholder="Phí">';
            item += '</div>';
            item += '</div>';
            item += '<div class="col-auto">';
            item += '<div class="form-group">';
            item += '<span class="pricepermonth_' + count + '">50.000</span>/Tháng';
            item += '<span class="percent" style="display: none;"></span>';
            item += '</div>';
            item += '</div>';
            item += '<div class="col-auto">';
            item += '<div class="form-group">';
            item += '<a href="javascript:;" onclick="LHM.mnDashboard.deletePackageConfig(this)" title="Xóa"><i class="far fa-trash-alt"></i> </a>';
            item += '</div>';
            item += '</div>';
            item += '</div>';
            $('.list-package-membership-cms').append(item);
            $('#count_package_membership_config_cms').val(count);
            $('#info-membership .membership_price_config, #info-membership #input_day_config_' + count).on('keyup change', function (e) {
                var p = $(this).parents('.package_membership');
                var checked = p.find('input:checkbox.period').is(':checked');
                var period = p.find('#input_day_config_' + count).val();
                var price = p.find('.membership_price_config').val();
                p.find('#day_config_' + count).val(period);
                if (price == '' || period == '') {
                    p.find('.pricepermonth_' + count).text('...');
                } else {//fix input non format number int ex: 0050000
                    price = parseInt(price);
                    p.find('.membership_price_config').val(price);
                    var pricepermon = Math.round(price / period * 30).format(0, 3, '.', ',');
                    p.find('.pricepermonth_' + count).text(pricepermon);
                }
                e.preventDefault();
            });
            $('#info-membership .membership_price_config').blur(function () {
                var price = $(this).val();
                if (price < 0 || price == '') {
                    $(this).val(50000);
                    $(this).trigger('change');
                    alert('Phí phải là số >= 0');
                }
            });
            $('#info-membership input:checkbox').change(function () {// if($(this).is(':checked')){
//     // $(this).parents('.package_membership').find('.membership_price').removeAttr('disabled');
//     // $(this).parents('.package_membership').find('.membership_price_config').removeAttr('disabled');
// }
// else{
//     // $(this).parents('.package_membership').find('.membership_price').attr('disabled','');
//     // $(this).parents('.package_membership').find('.membership_price_config').attr('disabled','');
//     //reinit only keydown price is number
//     // onlyKeydownNumber();
// }
                var selected = $('#select_package_membership_trail_cms').children("option:selected").val();
                if (selected) {
                    $('#save_package_trail_membership').val(selected);
                }
                setTimeout(function () {
                    LHM.mnDashboard.getListPackageTrial(selected);
                }, 1000);
            });
        }, deletePackageConfig: function deletePackageConfig(curr) {
            $.confirm({
                title: 'Xóa gói',
                content: 'Bạn thực sự muốn xóa gói này?',
                buttons: {
                    Ok: {
                        text: 'OK', action: function action() {
                            $(curr).parents('.add-package-membership-config-cms').remove();
                            var selected = $('#select_package_membership_trail_cms').children("option:selected").val();
                            setTimeout(function () {
                                LHM.mnDashboard.getListPackageTrial(selected);
                            }, 1000);
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, navAddEditLink: function navAddEditLink(_action2, type, id) {
            var disable_url = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '0';
            var lid = '';
            var content = '<form id="mnav-link">' + '<div class="form-group">' + '<label for="">Tiêu đề <span class="text-danger">*</span></label>' + '<input type="text" placeholder="Tiêu đề" name="title" id="title" class="form-control" required />' + '</div>' + '<div class="form-group">' + '<label for="">Đường dẫn URL <span class="text-danger">*</span></label>' + '<input type="text" id="url" placeholder="' + (_action2 != 'add_other_page' && _action2 != 'edit_other_page' ? 'Ex: lien-he, https://websitecuaban.com/lien-he' : 'link-web-moi') + '" name="url" class="form-control" required />' + '</div>';
            if (_action2 != 'add_other_page' && _action2 != 'edit_other_page') {
                content += '<div class="form-group form-check">' + '<input class="form-check-input" type="checkbox" name="target_blank" id="target_blank" required />' + '<label class="form-check-label" for="target_blank">' + 'Mở tab mới' + '</label>' + '</div>' + '<div class="form-group">' + '<label for="">Hiển thị khi</label>' + '<select name="status" id="status" class="custom-select">' + '<option value="1" selected>Luôn hiện</option>' + '<option value="2">Đăng nhập</option>' + '<option value="3">Chưa đăng nhập</option>' + '<option value="4">Không hiện</option>' + '</select>' + '</div>';
            }
            content += '</div>' + '</form>' + '<div class="invalid-feedback"></div>';
            $.confirm({
                title: _action2 == 'edit' ? 'Sửa link' : 'Thêm link',
                columnClass: 'col-md-6',
                content: content,
                onContentReady: function onContentReady() {
                    if (_action2 == 'edit') {
                        lid = id;
                        var row = window[id];
                        $('#mnav-link #title').val(row.title);
                        $('#mnav-link #url').val(row.url);
                        if (row.blank) {
                            $('#mnav-link #target_blank').prop('checked', true);
                        }
                        $('#mnav-link #status').val(type == 'header' ? row.on_header.status : row.on_footer.status);
                    }
                    if (disable_url == "1") {
                        $("#url").prop('readonly', true);
                    }
                },
                type: 'blue',
                buttons: {
                    formSubmit: {
                        text: 'OK', btnClass: 'btn-blue btn-add-landingpage-popup', action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').hide();
                            var form = _this.$content.find('form').serialize();
                            form += '&_token=' + $.cookie('_token') + '&type=' + type + '&sort=' + $('#navs-' + type + ' tbody tr').length + '&lid=' + lid;
                            $('.btn-add-landingpage-popup').html('<i class="fas fa-spinner fa-spin"></i> OK');
                            $('.btn-add-landingpage-popup').attr('disabled', true);
                            $.post('/sites/updateLink/' + _action2 + '?s=' + sid, form, function (rs) {
                                if (rs.login && rs.login == 1) {
                                    $('.btn-add-landingpage-popup').html('OK');
                                    $('.btn-add-landingpage-popup').removeAttr('disabled');
                                    if (rs.error) {
                                        for (var i in rs.msg) {
                                            var error = '';
                                            for (var i in rs.msg) {
                                                error += '- ' + rs.msg[i] + '<br>';
                                            }
                                            _this.$content.find('.invalid-feedback').html(error).show();
                                        }
                                    } else {//store then edit
                                        window[rs.data._id['$id']] = rs.data;
                                        var newHeader = '';
                                        if (_action2 == 'add' || _action2 == 'edit') {
                                            newHeader = '<tr id="' + rs.data._id['$id'] + '">' + '<td>' + rs.data.title + '</td>' + '<td>' + (rs.data.url != '/' ? rs.data.url.indexOf('http') != -1 ? rs.data.url : '/' + rs.data.url : rs.data.url) + '</td>' + '<td>' + (rs.data['on_' + type].status != 4 ? 'Hiển thị' : 'Ẩn') + '</td>' + '<td align="center">' + '<ul class="list-unstyled acts-li">';
                                            if (rs.data.modify) {
                                                newHeader += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.navAddEditLink(\'edit\', \'' + type + '\',\'' + rs.data._id['$id'] + '\')" title="Sửa"><i class="fas fa-edit"></i></a></li>';
                                            } else {
                                                newHeader += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.navAddEditLink(\'edit\', \'' + type + '\',\'' + rs.data._id['$id'] + '\',\'1\')" title="Sửa"><i class="fas fa-edit"></i></a></li>';
                                            }
                                            if (rs.data["delete"]) {
                                                newHeader += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.deleteLink(\'' + rs.data._id['$id'] + '\')" title="Xóa"><i class="far fa-trash-alt"></i> </a></li>';
                                            }
                                            newHeader += '</ul>' + '</td>' + '</tr>';
                                        }
                                        if (_action2 == 'add') {
                                            LHM.common.checkTableData($('.popup_header tbody'), newHeader, '', "1");
                                        } else if (_action2 == 'edit') {
                                            LHM.common.checkTableData($('.popup_header tbody'), newHeader, id);
                                        } else if (_action2 == 'add_other_page') {
                                            LHM.mnDashboard.init('landingpage_page');/*let url = base_url + (!rs.data.editor ? '/' + rs.data.url : '/p/' + rs.data.url);
                                            let new_page_customize = '<tr id="' + rs.data._id['$id'] + '">' + '<td>' + rs.data.title + ' <span class="label-home-default badge badge-info ' + (rs.data.home ? '' : 'd-none') + ' "> Trang chủ</span></td>' + '<td><a target="_blank" href="' + url + '">' + (rs.data.default ? rs.data.url : '/p/' + rs.data.url) + '</a></td>' + '<td align="center">' + '<ul class="list-unstyled acts-li">' + '<li class="set-home-default ' + (!rs.data.home ? '' : 'd-none') + '"><a href="javascript:;" onclick="setHome(this, \'' + rs.data._id['$id'] + '\')" title="Đặt làm trang chủ"><i class="fas fa-home"></i></a></li>' + '<li class=""><a target="_blank" href="' + url + '" title="Xem trang"><i class="far fa-eye"></i> </a></li>';
                                            if (rs.data.v2) {
                                                new_page_customize += '<li class=""><a href="/edit-page/' + rs.data._id['$id'] + '" target="_blank" title="Sửa trang"><i class="fas fa-edit"></i></a></li>';
                                            } else {
                                                new_page_customize += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.editorPage(\'' + rs.data._id['$id'] + '\');" title="Sửa trang"><i class="fas fa-edit"></i></a></li>';
                                            }
                                            new_page_customize += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.deleteLink(\'' + rs.data._id['$id'] + '\')" title="Xóa"><i class="far fa-trash-alt"></i> </a></li>' + '</ul>' + '</td>' + '</tr>';
                                            LHM.common.checkTableData($('#' + type + ' tbody'), new_page_customize);*/
                                        }
                                        _this.close();
                                    }
                                } else if (rs.login && rs.login == 2) {
                                    window.location = rs.href;
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, navAddEditLinkSection: function navAddEditLinkSection(_action3, type, id) {
            var idsection = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
            var lid = '';
            var content = '<form id="mnav-link">' + '<div class="form-group">' + '<label for="">Tiêu đề <span class="text-danger">*</span></label>' + '<input type="text" placeholder="Tiêu đề" name="title" id="title" class="form-control" required />' + '</div>' + '<div class="form-group">' + '<label for="">Đường dẫn URL <span class="text-danger">*</span></label>' + '<input type="text" id="url" placeholder="link-web-moi" name="url" class="form-control" required />' + '</div>' + '<div class="form-group form-check" >' + '<input class="form-check-input" type="checkbox" name="target_blank" id="target_blank" required />' + '<label class="form-check-label" for="target_blank" style="margin-right: 40px;">' + 'Mở tab mới' + '</label>' + '<input class="form-check-input" type="checkbox" name="nofollow" id="nofollow" required />' + '<label class="form-check-label" for="nofollow">' + 'Nofollow' + '</label>' + '</div>' + '<div class="form-group">' + '<label for="">Hiển thị khi</label>' + '<select name="status" id="status" class="custom-select">' + '<option value="1" selected>Luôn hiện</option>' + '<option value="2">Không hiện</option>' + '</select>' + '</div>' + '</div>' + '</form>' + '<div class="invalid-feedback"></div>';
            $.confirm({
                title: _action3 == 'edit' ? 'Sửa link' : 'Thêm link',
                columnClass: 'col-md-6',
                content: content,
                onContentReady: function onContentReady() {
                    if (_action3 == 'edit') {
                        lid = id;
                        var title = $('#' + id + " #edit_link_section").attr('data-title');
                        var url = $('#' + id + " #edit_link_section").attr('data-url');
                        var nofollow = $('#' + id + " #edit_link_section").attr('data-nofollow');
                        var target_blank = $('#' + id + " #edit_link_section").attr('data-target_blank');
                        var status = $('#' + id + " #edit_link_section").attr('data-status');
                        $('#mnav-link #title').val(title);
                        $('#mnav-link #url').val(url);
                        if (target_blank == "true") {
                            $('#mnav-link #target_blank').prop('checked', true);
                        }
                        if (nofollow == "true") {
                            $('#mnav-link #nofollow').prop('checked', true);
                        }
                        $('#mnav-link #status').val(status);
                    }
                },
                type: 'blue',
                buttons: {
                    formSubmit: {
                        text: 'OK', btnClass: 'btn-blue', action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').hide();
                            var form = _this.$content.find('form').serialize();
                            form += '&_token=' + $.cookie('_token');
                            $.post('/sites/updateLinkSection', form, function (rs) {
                                if (rs.login && rs.login == 1) {
                                    if (rs.error) {
                                        for (var i in rs.msg) {
                                            var error = '';
                                            for (var i in rs.msg) {
                                                error += '- ' + rs.msg[i] + '<br>';
                                            }
                                            _this.$content.find('.invalid-feedback').html(error).show();
                                        }
                                    } else {//store then edit
                                        var newHeader = '';
                                        if (_action3 == 'add') {
                                            newHeader = '<tr id="' + rs.data._id + '">' + '<td>' + rs.data.title + '</td>' + '<td>' + rs.data.url + '</td>' + '<td>' + (rs.data.status != 2 ? 'Hiển thị' : 'Ẩn') + '</td>' + '<td align="center">' + '<ul class="list-unstyled acts-li">';
                                            newHeader += '<li class=""><a id="edit_link_section" data-id="' + rs.data._id + '" data-title="' + rs.data.title + '" data-url="' + rs.data.url + '" data-nofollow="' + rs.data.nofollow + '" data-target_blank="' + rs.data.target_blank + '" data-status="' + rs.data.status + '" href="javascript:;" onclick="LHM.mnDashboard.navAddEditLinkSection(\'edit\', \'' + type + '\',\'' + rs.data._id + '\')" title="Sửa"><i class="fas fa-edit"></i></a></li>';
                                            newHeader += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.deleteLinkSection(\'' + rs.data._id + '\')" title="Xóa"><i class="far fa-trash-alt"></i> </a></li>';
                                            newHeader += '</ul>' + '</td>' + '</tr>';
                                            $('#' + idsection).append(newHeader);
                                        } else if (_action3 == 'edit') {
                                            newHeader = '<td>' + rs.data.title + '</td>' + '<td>' + rs.data.url + '</td>' + '<td>' + (rs.data.status != 2 ? 'Hiển thị' : 'Ẩn') + '</td>' + '<td align="center">' + '<ul class="list-unstyled acts-li">';
                                            newHeader += '<li class=""><a id="edit_link_section" data-id="' + id + '" data-title="' + rs.data.title + '" data-url="' + rs.data.url + '" data-nofollow="' + rs.data.nofollow + '" data-target_blank="' + rs.data.target_blank + '" data-status="' + rs.data.status + '" href="javascript:;" onclick="LHM.mnDashboard.navAddEditLinkSection(\'edit\', \'' + type + '\',\'' + id + '\')" title="Sửa"><i class="fas fa-edit"></i></a></li>';
                                            newHeader += '<li class=""><a href="javascript:;" onclick="LHM.mnDashboard.deleteLinkSection(\'' + id + '\')" title="Xóa"><i class="far fa-trash-alt"></i> </a></li>';
                                            newHeader += '</ul>' + '</td>';
                                            $('#' + id).html("");
                                            $('#' + id).html(newHeader);
                                        }
                                        _this.close();
                                    }
                                } else if (rs.login && rs.login == 2) {
                                    window.location = rs.href;
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, deleteLinkSection: function deleteLinkSection(id) {
            $.confirm({
                title: 'Xóa link',
                content: 'Bạn thực sự muốn xóa link này?',
                buttons: {
                    Ok: {
                        text: 'OK', action: function action() {
                            $('#' + id).remove();
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, copyLink: function copyLink(id) {
            $.confirm({
                title: 'Nhân bản trang',
                content: 'Bạn thực sự muốn nhân bản trang này?',
                buttons: {
                    Ok: {
                        text: 'OK', action: function action() {
                            $.post('/pages/copyPage/' + id, {'_token': $.cookie('_token')}, function (rs) {
                                if (rs.success) {
                                    LHM.common.notify(null, 'success', rs.message ? rs.message : 'Nhân bản thành công');
                                    setTimeout(function () {
                                        LHM.mnDashboard.init('landingpage_page');
                                    }, 1000);
                                } else {
                                    LHM.common.notify(null, 'danger', rs.message ? rs.message : 'Có lỗi xảy ra');
                                }
                            });
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, deleteLink: function deleteLink(id) {
            $.confirm({
                title: 'Xóa link',
                content: 'Bạn thực sự muốn xóa link này?',
                buttons: {
                    Ok: {
                        text: 'OK', action: function action() {
                            $.post('/sites/deleteLink?s=' + sid, {
                                lid: id,
                                '_token': $.cookie('_token')
                            }, function (rs) {
                                if (rs.login && rs.login == 1) {
                                    if (!rs.error) {
                                        $('#' + id).remove();
                                    }
                                } else if (rs.login && rs.login == 2) {
                                    window.location = rs.href;
                                }
                            });
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, deleteSection: function deleteSection(curr) {
            var idsec = $(curr).parents('.content_section').attr('id');
            $.confirm({
                title: 'Xóa section', content: 'Bạn thực sự muốn xóa section này?', buttons: {
                    Ok: {
                        text: 'OK', action: function action() {
                            $.post('/sites/deleteSection?s=' + sid, {
                                secid: idsec,
                                '_token': $.cookie('_token')
                            }, function (rs) {
                                if (rs.login && rs.login == 1) {
                                    if (!rs.error) {
                                        $('.content_section#' + idsec).remove();
                                        if ($('.content_section').length == 0) {
                                            var html = '';
                                            html += '<div class="content_section" id ="delete_last_section" style="padding:0px;margin-bottom:0px;border:0px solid #ccc;background:#ccc">';
                                            html += '<div class="btn-group dropright add-section">';
                                            html += '<button type="button" class="btn btn-link dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Thêm section</button>';
                                            html += '<div class="dropdown-menu" aria-labelledby="dropdownMenuLink">';
                                            html += '<a class="dropdown-item" href="javascript:;" onclick="addSection(this, \'html\')">HTML/CSS</a>';
                                            html += '<a class="dropdown-item" href="javascript:;" onclick="addSection(this, \'text\')">Text</a>';
                                            html += '<a class="dropdown-item" href="javascript:;" onclick="addSection(this, \'whychoice\')">Tại sao chọn chúng tôi & Cảm nhận học viên</a>';
                                            html += '<a class="dropdown-item" href="javascript:;" onclick="addSection(this, \'courses\')">Các khóa học</a>';
                                            html += '<a class="dropdown-item" href="javascript:;" onclick="addSection(this, \'combo\')">Các gói khóa học</a>';
                                            html += '<a class="dropdown-item" href="javascript:;" onclick="addSection(this, \'header\')">Ảnh nền + Text + Nút</a>';
                                            html += '<a class="dropdown-item" href="javascript:;" onclick="addSection(this, \'what_learn_today\')">Hôm nay bạn muốn học gì?</a>';
                                            html += '<a class="dropdown-item" href="javascript:;" onclick="addSection(this, \'course_of_category\')">Các khóa học theo danh mục</a>';
                                            html += '<a class="dropdown-item" href="javascript:;" onclick="addSection(this, \'teacher\')">Giảng viên</a>';
                                            html += '</div></div></div>';
                                            $('#editor #form-data').html(html);
                                        }
                                    }
                                } else if (rs.login && rs.login == 2) {
                                    window.location = rs.href;
                                }
                            });
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, getCourses: function getCourses(page) {
            page = page ? page : 0;
            var url = 'courses/list_schedule_courses';
            $('#dashboard #courses tbody#list_schedule_courses').html('<tr><td colspan="10" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            var data = $('#list_schedule_courses_form').serialize() + "&page=".concat(page);
            $.get(url, data, function (courses) {
                if (courses.login && courses.login == 1) {
                    LHM.common.pagination_site(courses.count_record, courses.limit, page, 'list_schedule_courses', null, true, null, courses.total_record);
                    $('#dashboard #courses tbody#list_schedule_courses').html('');
                    if (courses && courses.data) {
                        var course = courses.data;
                        var html;
                        if (course.length > 0) {
                            var _loop = function _loop(i) {
                                link_setting_course = base_url + '/edit-course/' + course[i]['course_url'] + '/' + course[i]['code_course'] + '#course-lessons-setting';
                                var course_hot = course[i].course_hot ? 'hot-css' : '';
                                if (course[i]['status_origin'] == 1) sync_token = '<a href="javascript:void(0)" class="btn-get-token-sync-course-to-unica dropdown-item" data-token="' + course[i]['course_id'] + '"><span> Lấy Token </span></a>'; else sync_token = '';
                                html += '<tr data-id=' + course[i]['course_id'] + '>';
                                html += ' <td>';
                                html += '   <div class="row">';
                                html += '       <div class="col-md-2"><img src="' + course[i]['cover'] + '" alt="' + course[i]['name'] + '" class="course-cover"/></div>';
                                html += '       <div class="col-md-10">';
                                html += '           <a href="' + course[i]['link_edit'] + '" class="link-detail-course ' + course_hot + '">' + course[i]['name'] + '</a>';
                                html += '           <div class="d-flex gap-4">';
                                html += '               <div class="link-detail-course-teacher">ID: ' + course[i]['code_course'] + '</div>';
                                html += '               <div class="link-detail-course-teacher">Giảng viên: ' + course[i]['teacher'] + '</div>';
                                html += '               <a class="link-detail-course-teacher" href="' + base_url + '/' + course[i]['course_url'] + '?hl=' + course[i]['lang'] + '" title="Xem trang" target="_blank"><i class="fa fa-eye" aria-hidden="true"></i> Xem trang</a>';
                                html += '           </div>';
                                html += '       </div>';
                                html += '   </div>';
                                html += ' </td>';
                                html += ' <td> <a href="' + course[i]['link_detail'] + '?hl=' + course[i]['lang'] + '" style="color: #fff;" class="btn btn-primary" title="Xem khóa học" class="detail-course-link" target="_blank"><i class="fa fa-play" aria-hidden="true" style="font-weight: 900 !important;"></i> Xem</a></td>';
                                html += "<td>";
                                if (course[i]['course_type'] !== 4) {
                                    html += "<a href=\"".concat(course[i]['link_edit'], "#lessons\" class=\"clicked-link-border\">").concat(course[i]['count_lesson'], "</a>");
                                }
                                html += "</td>";
                                html += ' <td> <a href="javascript:;" class="show-student-course clicked-link-border" data-course="' + course[i]['course_id'] + '" data-live="' + course[i]['live_id'] + '">' + course[i]['count_student'] + ' </a></td>';
                                if (course[i]['check_show_price']) {
                                    html += ' <td> ' + course[i]['price_sell'] + '</td>';
                                } else {
                                    html += ' <td> ' + course[i]['price'] + '</br>' + course[i]['price_sell'] + '</td>';
                                }// online=1, offline=2, meet=3 , document = 4
                                if (courses.is_site_custom_course_type) {
                                    html += "<td>";
                                    switch (course[i]['course_type']) {
                                        case 1:
                                            html += 'Online';
                                            break;
                                        case 2:
                                            html += 'Offline';
                                            break;
                                        case 3:
                                            html += 'Meet';
                                            break;
                                        case 4:
                                            html += 'Document';
                                            break;
                                        default:
                                            html += '';
                                            break;
                                    }
                                    html += "</td>";
                                }
                                if ($('#dashboard #courses table#tbl-list-course th.lang').length > 0) {
                                    html += "<td>";
                                    if (course[i]['list_lang']) {
                                        $.each(course[i]['list_lang'], function (key, value) {
                                            html += "<a href=\"courses/updateOrCreate/".concat(course[i]['course_id'], "/").concat(key, "\"><img class=\"witdth-25\" src=\"").concat(value, "\" title=\"Click Edit (").concat(key, ")\"></a>");
                                        });
                                    }
                                    html += "</td>";
                                }
                                html += ' <td> <span class="badge badge-' + course[i]['status']['label_color'] + '">' + course[i]['status']['label'] + '</span> </td>';
                                if (!course[i]['site_course_type_not_document']) {
                                    html += "\n                                        <td align=\"center\">\n                                            <a class=\"course-settings\" data-toggle=\"dropdown\" aria-expanded=\"false\"><i class=\"far fa-ellipsis-v\"></i></a>\n                                            <div class=\"dropdown-menu dropdown-menu-domain\">\n                                                <a class=\"dropdown-item\" href=\"".concat(course[i]['link_edit'], "\"> Ch\u1EC9nh s\u1EEDa </a>\n                                                <a class=\"dropdown-item\" \n                                                    href=\"javascript:;\" \n                                                    onclick=\"LHM.common.xService('courses/copyItem','").concat(course[i]['course_id'], "','js-click-filter')\"\n                                                    >\n                                                    Nh\xE2n b\u1EA3n \n                                                </a>\n                                                ").concat(sync_token, "\n                                                <a class=\"dropdown-item\" href=\"").concat(link_setting_course, "\"> C\xE0i \u0111\u1EB7t </a>");
                                    if (course[i].action.remove_course) {
                                        html += '<a class="dropdown-item" href="javascript:;" onclick="LHM.courses.cancel_remove_course(this, \'' + course[i]['course_id'] + '\')">Xóa</a>';
                                    }
                                    html += '</div></td>';
                                }
                                html += '</tr>';
                            };
                            for (var i = 0; i < course.length; i++) {
                                var link_setting_course, sync_token, sync_token;
                                _loop(i);
                            }
                            $('#dashboard #courses tbody#list_schedule_courses').html(html);
                        } else {
                            $('#dashboard #courses tbody#list_schedule_courses').html('<tr><td colspan="10">Không có dữ liệu</td></tr>');
                        }
                    }
                    if ($('#filter-category-course').length && !$('#filter-category-course').hasClass('isChange')) {
                        $('#filter_category_cms').val('store').change();
                    }
                } else if (courses.login && courses.login == 2) {
                    window.location = courses.href;
                }
            });
        }, getReview_cms: function getReview_cms(page) {
            page = page ? page : 0;
            var type = $('#select_type_show_cms_review').val();
            var course_id = $('#filter_course_cms_review').val();
            var star = $('#select_value_star_review').val();
            var lesson_id = $('#filter_lesson_cms_comment').val();
            var url = 'courses/list_review_cms';
            $('#list_review_cms').html('<tr><td colspan="4" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {
                limit_record: page,
                type: type,
                course: course_id,
                star: star,
                lesson_id: lesson_id
            }, function (courses) {
                if (courses.login && courses.login == 1) {
                    LHM.common.pagination_site(courses.count_record, courses.limit, page, 'list_review_cms');
                    $('#list_review_cms').html('');
                    var star_review = courses.rate_avg;
                    var count_review = courses.total_review;
                    var ratio_star = courses.ratio_star;
                    var html = '';
                    if (type == 1 && course_id) {
                        html += '<div class="col-xs-12 col-12 content_star_review">';
                        html += '<div class="col-md-3 col-12 col-sm-12 rating-student-left">';
                        html += '<div class="number-big-rate">' + star_review + '</div>';
                        html += '<div class="star-big-rate">';
                        html += '<span class="star-rate-course">';
                        html += '</span>';
                        html += '</div>';
                        html += '<div class="count-review">' + count_review + ' đánh giá</div>';
                        html += '</div>';
                        html += '<div class="col-md-9 col-12 col-sm-12 rating-student-right">';
                        $.each(ratio_star, function (k, v) {
                            html += '<div class="col-md-7 col-12 col-sm-12 u-rate-f1-progress">';
                            html += '<div class="progress">';
                            html += '<div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="80" aria-valuemin="0" aria-valuemax="100" style="width: ' + v + '%;"></div>';
                            html += '</div>';
                            html += '</div>';
                            html += '<div class=" u-rate-f1-star">';
                            html += '<span class="star-rate-' + (5 - k) + '"></span>';
                            html += '</div>';
                            html += '<div class=" u-rate-f1-num">';
                            html += '<p>' + v + '%</p>';
                            html += '</div>';
                            setTimeout(function () {
                                $('.star-rate-' + (5 - k)).raty({
                                    starHalf: 'fas fa-fw fa-star-half-alt',// The name of the half star image.
                                    starOff: 'far fa-fw fa-star',// Name of the star image off.
                                    starOn: 'fas fa-fw fa-star',
                                    starType: 'i',
                                    score: parseInt(5 - k),
                                    click: false,
                                    readOnly: true
                                });
                            }, 100);
                        });
                        html += '</div>';
                        html += '</div>';
                        setTimeout(function () {
                            $('.star-rate-course').raty({
                                starHalf: 'fas fa-fw fa-star-half-alt',// The name of the half star image.
                                starOff: 'far fa-fw fa-star',// Name of the star image off.
                                starOn: 'fas fa-fw fa-star',
                                starType: 'i',
                                score: parseInt(star_review),
                                click: false,
                                readOnly: true
                            });
                        }, 100);
                    }
                    if (courses && courses.data) {
                        var course = courses.data;
                        if (course.length > 0) {
                            var _loop2 = function _loop2(i) {
                                html += '<tr id=' + course[i]['id'] + '>';
                                html += '<div class="col-xs-12 col-12 content_comment">';
                                html += ' <td>';
                                html += ' <div class="row list-comment-course">';
                                html += '   <div class="col-sm-1 ava-hv">';
                                html += '     <img class="img-thumbnail comment-review-cover"  alt="" src="' + course[i]['photo'] + '">';
                                html += '   </div>';
                                html += '   <div class="col-sm-10 block-hv">';
                                html += '       <div class="block-inner">';
                                html += '           <div class="name-student">' + course[i]['name_user'] + '<span style="margin-left:10px;font-weight:normal;color:#aaa;">' + course[i]['createdAt'] + '</span></div>';
                                html += '       </div>';
                                html += '       <div > Khóa học : ' + course[i]['name_course'] + '</div>';
                                html += '       <div class="cm-hv">';
                                html += '           <span class="star-comment-student-' + course[i]['id'] + '"></span>';
                                if (type == 3) {
                                    html += '           <p>' + course[i]['title'] + ' - ' + course[i]['live_name'] + '</p>';
                                }
                                html += '           <div class="content-item-qa">' + course[i]['comment'] + '</div>';
                                if (course[i]['image']) {
                                    html += '<div><a data-fancybox="img_' + course[i]['id'] + '" class="img_' + course[i]['id'] + '" href="' + course[i]['image'] + '"></a>' + '<a class="thumb-image-comment" onclick="LHM.comment.trigger_image($(this))" href="javascript:;" data-id="' + course[i]['id'] + '"><image src="' + course[i]['image'] + '" weight="146" height="146"></a></div>';
                                }
                                html += '       </div>';
                                html += '   </div>';
                                html += ' </div>';
                                html += ' </td>';
                                if (type == 1) {
                                    html += ' <td align="center">';
                                    html += '   <a onclick=LHM.courses.prioritizeReviewCms(this,"' + course[i]['id'] + '",' + course[i]['type'] + ') href="javascript:void(0);">' + course[i]['prioritize'] + '</a>';
                                    html += ' </td>';
                                    if (course[i]['approval_feedback']) {
                                        html += ' <td align="center">';
                                        html += '   <a onclick=LHM.courses.changeApprovalStatus(this,"' + course[i]['id'] + '",' + course[i]['type'] + ') href="javascript:void(0);">' + course[i]['approval_status_tittle'] + '</a>';
                                        html += ' </td>';
                                    }
                                }
                                if (type == 2 && course[i]['count_reply_comment'] >= 0) {
                                    html += '       <td align="center" id=show_rep_' + course[i]['id'] + '>';
                                    html += '       <a href="javascript:void(0);">';
                                    if (course[i]['count_reply_comment'] > 0) {
                                        html += '           <i class="fas fa-comments icon-comments" style="color: #0bacea;"></i><br class="d-none d-sm-block" />';
                                    } else {
                                        html += '           <i class="fas fa-comments icon-comments"></i><br class="d-none d-sm-block" />';
                                    }
                                    html += '           <span style="font-size: 13px" id="total_reply_cms"><strong>' + course[i]['count_reply_comment'] + '</strong> Bình luận</span>';
                                    html += '       </a>';
                                    html += '       </td>';
                                }
                                if (course[i]['approval_comment']) {
                                    html += ' <td align="center">';
                                    html += '   <a onclick=LHM.courses.changeApprovalStatus(this,"' + course[i]['id'] + '",' + course[i]['type'] + ') href="javascript:void(0);">' + course[i]['approval_status_tittle'] + '</a>';
                                    html += ' </td>';
                                }
                                html += ' <td align="center">';
                                html += '   <a onclick=LHM.courses.removeReviewCms(this,"' + course[i]['id'] + '",' + course[i]['type'] + ') href="javascript:void(0);"><i class="fa fa-trash deletes"></i> Xóa</a>';
                                html += ' </td>';
                                html += ' </div>';
                                html += '</tr>';
                                reply = course[i].reply;
                                if (reply.length > 0) {
                                    for (var j = 0; j < reply.length; j++) {
                                        html += '<tr id=' + reply[j]['id'] + ' class=' + course[i]['id'] + ' style="display:none">';
                                        html += '<div class="col-xs-12 col-12 content_comment">';
                                        html += ' <td>';
                                        html += ' <div class="row list-comment-course list-reply-comment-cms">';
                                        html += '   <div class="col-sm-1 ava-hv ava-hv-rep">';
                                        html += '     <img class="img-thumbnail comment-review-cover"  alt="" src="' + reply[j]['photo'] + '">';
                                        html += '   </div>';
                                        html += '   <div class="col-sm-10 block-hv">';
                                        html += '       <div class="block-inner">';
                                        html += '           <div class="name-student">' + reply[j]['name_user'] + '<span style="margin-left:10px;font-weight:normal;color:#aaa;">' + reply[j]['createdAt'] + '</span></div>';
                                        html += '       </div>';
                                        html += '       <div class="cm-hv content-item-qa">';
                                        html += reply[j]['comment'];
                                        if (reply[j]['image']) {
                                            html += '<div><a data-fancybox="img_' + reply[j]['id'] + '" class="img_' + reply[j]['id'] + '" href="' + reply[j]['image'] + '"></a>' + '<a class="thumb-image-comment" onclick="LHM.comment.trigger_image($(this))" href="javascript:;" data-id="' + reply[j]['id'] + '"><image src="' + reply[j]['image'] + '" weight="146" height="146"></a></div>';
                                        }
                                        html += '       </div>';
                                        html += '   </div>';
                                        html += ' </div>';
                                        html += ' </td>';
                                        html += ' <td align="center"></td>';
                                        if (reply[j]['approval_comment']) {
                                            html += ' <td align="center">';
                                            html += '   <a onclick=LHM.courses.changeApprovalStatus(this,"' + reply[j]['id'] + '",' + reply[j]['type'] + ') href="javascript:void(0);">' + reply[j]['approval_status_tittle'] + '</a>';
                                            html += ' </td>';
                                        }
                                        html += ' <td align="center">';
                                        html += '   <a onclick=LHM.courses.removeReviewCms(this,"' + reply[j]['id'] + '",' + reply[j]['type'] + ',"' + course[i]['id'] + '") href="javascript:void(0);"><i class="fa fa-trash deletes"></i> Xóa</a>';
                                        html += ' </td>';
                                        html += ' </div>';
                                        html += '</tr>';
                                    }
                                }
                                if (type == 2) {
                                    html += ' <tr class=form_rep_' + course[i]['id'] + ' style="display:none">';
                                    html += ' <td>';
                                    html += '<div class="form-comment">';
                                    html += '   <div class="list-reply-comment-cms input-group">';
                                    html += '       <input type="file" class="display-none file-image" accept="image/*" onChange="LHM.comment.load_image($(this));"/><textarea class="form-control comment-content" placeholder="Trả lời của bạn...?"></textarea>';
                                    html += '       <div class="input-group-append"><button class="input-group-text btnupload icon-search" onclick="LHM.comment.click_button_image($(this))" style="padding-right: 0"><i class="fas fa-image" style="color: #0bacea;"></i></button><button class="input-group-text btnsend icon-search" onclick="LHM.comment.reply_cms(this, \'' + course[i]['id'] + '\')"><i class="fas fa-paper-plane icon-send-comment" style="color: #0bacea"></i></button></div>';
                                    html += '   </div>';
                                    html += '<div class="list-reply-comment-cms load-image display-none"><img src="" weight="146" height="146"/><a class="delFile removeFile" href="javascript:;" onclick="LHM.comment.delete_image($(this))" title="Xóa ảnh đính kèm"><i class="fa fa-times"></i></a></div></div>';
                                    html += ' </td>';
                                    html += ' <td></td>';
                                    html += ' <td></td>';
                                    html += ' </tr>';
                                }
                                if (course[i]['rate']) {
                                    setTimeout(function () {
                                        $('.star-comment-student-' + course[i]['id']).raty({
                                            starHalf: 'fas fa-fw fa-star-half-alt',// The name of the half star image.
                                            starOff: 'far fa-fw fa-star',// Name of the star image off.
                                            starOn: 'fas fa-fw fa-star',
                                            starType: 'i',
                                            score: parseInt(course[i]['rate']),
                                            click: false,
                                            readOnly: true
                                        });
                                    }, 100);
                                }
                                setTimeout(function () {
                                    $('#show_rep_' + course[i]['id']).click(function (event) {
                                        $('.' + course[i]['id']).toggle();
                                        $('.form_rep_' + course[i]['id']).toggle();
                                    });
                                }, 200);
                            };
                            for (var i = 0; i < course.length; i++) {
                                var reply;
                                _loop2(i);
                            }
                            $('#list_review_cms').html(html);
                            MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                        } else {
                            html += '<tr id="none_data_comment"><td colspan="4">Không có dữ liệu</td></tr>';
                            $('#list_review_cms').html(html);
                        }
                    }
                } else if (courses.login && courses.login == 2) {
                    window.location = courses.href;
                }
            });
            setTimeout(function () {
                MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
            }, 350);
        }, getCoursePackage: function getCoursePackage(page) {
            page = page ? page : 0;
            $('#wrap-add-combo-courses').hide();
            $('#wrap-combo-courses').show();
            var url = 'courses/list_course_package';
            $('#list_course_package').html('<tr><td colspan="7" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {
                limit_record: page,
                combo_course_name: $('#filter-combo-course-name').val()
            }, function (courses) {
                if (courses.login && courses.login == 1) {
                    LHM.common.pagination_site(courses.count_record, courses.limit, page, 'list_course_package', null, true, null, courses.total_record);
                    $('#list_course_package').html('');
                    if (courses && courses.data) {
                        var course = courses.data;
                        var html;
                        if (course.length > 0) {
                            for (var i = 0; i < course.length; i++) {
                                html += '<tr data-id=' + course[i]['_id'] + '>';
                                html += ' <td>' + (page * courses.limit + i + 1) + '</td>';
                                html += ' <td>';
                                html += '   <div class="row">';
                                html += '       <div class="col-md-2"><img src="' + course[i]['cover'] + '" alt="' + course[i]['name'] + '" class="combo-course-cover"/></div>';
                                html += '       <div class="col-md-10">';
                                html += '           <a href="' + course[i]['link_detail'] + '" target="_blank">' + course[i]['name'] + '</a>';
                                html += '           <div>' + course[i]['updated'] + '</div>';
                                html += '       </div>';
                                html += '   </div>';
                                html += ' </td>';
                                html += ' <td> ' + course[i]['price'] + '</br>' + course[i]['price_sell'] + '</td>';
                                html += ' <td> <span class="badge badge-' + course[i]['status']['label_color'] + '">' + course[i]['status']['label'] + '</span> </td>';
                                html += ' <td> ' + course[i]['total_course'] + ' </td>';
                                html += ' <td> ' + course[i]['code'] + ' </td>';
                                html += ' <td align="center">';
                                html += '           <ul class="list-unstyled acts-li">';
                                html += '           <li><a data-id="' + course[i]['_id'] + '" href="javascript:void(0);" class="btn-remove-course-package"><i class="fa fa-trash deletes"></i> Xóa</a></li>';
                                html += '           <li><a href="javascript:;" class="btn-edit-course-package" data-id="' + course[i]['_id'] + '"><i class="fas fa-edit"></i> Sửa </a></li>';
                                html += '           </ul>';
                                html += ' </td>';
                                html += '</tr>';
                            }
                            $('#list_course_package').html(html);
                        } else {
                            $('#list_course_package').html('<tr><td colspan="7">Không có dữ liệu</td></tr>');
                        }
                    }
                    $('#tbl-list-combo tbody').sortable({
                        update: function update(e, ui) {
                            var data = $(this).sortable('toArray', {attribute: 'data-id'});
                            LHM.courses.updateComboNum(data);
                        }
                    });
                    $('#tbl-list-combo tbody').disableSelection();
                } else if (courses.login && courses.login == 2) {
                    window.location = courses.href;
                }
            });
        }, getComboQuiz: function getComboQuiz(page) {
            page = page ? page : 0;
            $('#wrap-add-combos-quiz').hide();
            $('#wrap-combos-quiz').show();
            var url = 'combosite/list_combo_quiz';
            $('#list_combos_quiz').html('<tr><td colspan="7" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {limit_record: page, combo_name: $('#filter-combo-quiz-name').val()}, function (courses) {
                if (courses.login && courses.login == 1) {
                    LHM.common.pagination_site(courses.count_record, courses.limit, page, 'list_combos_quiz', null, true, null, courses.total_record);
                    $('#list_combos_quiz').html('');
                    if (courses && courses.data) {
                        var course = courses.data;
                        var html;
                        if (course.length > 0) {
                            for (var i = 0; i < course.length; i++) {
                                html += '<tr data-id=' + course[i]['_id'] + '>';
                                html += ' <td>' + (page * courses.limit + i + 1) + '</td>';
                                html += ' <td>';
                                html += '   <div class="row">';
                                html += '       <div class="col-md-2 d-flex"><img src="' + course[i]['cover'] + '" alt="' + course[i]['name'] + '" class="combo-quiz-cover m-auto"/></div>';
                                html += '       <div class="col-md-10">';
                                html += '           <a href="' + course[i]['link_detail'] + '" target="_blank">' + course[i]['name'] + '</a>';
                                html += '           <div>' + course[i]['updated'] + '</div>';
                                html += '       </div>';
                                html += '   </div>';
                                html += ' </td>';
                                html += ' <td> ' + course[i]['price'] + '</br>' + course[i]['price_sell'] + '</td>';
                                html += ' <td> <span class="badge badge-' + course[i]['status']['label_color'] + '">' + course[i]['status']['label'] + '</span> </td>';
                                html += ' <td> ' + course[i]['total_course'] + ' </td>';
                                html += ' <td> <a href="javascript:;" class="show-student-combo-dethi clicked-link-border" data-id="' + course[i]['_id'] + '">' + course[i]['total_student'] + ' </a></td>';
                                html += ' <td align="center">';
                                html += '           <ul class="list-unstyled acts-li">';
                                html += '           <li><a data-id="' + course[i]['_id'] + '" href="javascript:void(0);" class="btn-remove-combo-site"><i class="fa fa-trash deletes"></i> Xóa</a></li>';
                                html += '           <li><a href="javascript:;" class="btn-edit-combo-site" data-type="1" data-id="' + course[i]['_id'] + '"><i class="fas fa-edit"></i> Sửa </a></li>';
                                html += '           </ul>';
                                html += ' </td>';
                                html += '</tr>';
                            }
                            $('#list_combos_quiz').html(html);
                        } else {
                            $('#list_combos_quiz').html('<tr><td colspan="7">Không có dữ liệu</td></tr>');
                        }
                    }/*$('#tbl-list-combos-quiz tbody').sortable({
                        update: function (e, ui) {
                            var data = $(this).sortable('toArray', {
                                attribute: 'data-id'
                            });
                            LHM.courses.updateComboQuizNum(data);
                        }
                    });
                    $('#tbl-list-combos-quiz tbody').disableSelection();*/
                } else if (courses.login && courses.login == 2) {
                    window.location = courses.href;
                }
            });
        }, getCourseDocumentPackage: function getCourseDocumentPackage(page) {
            page = page ? page : 0;
            $('#wrap-add-combo-document-courses').hide();
            $('#wrap-combo-document-courses').show();
            var url = 'combosite/list_course_document_package';
            $('#list_course_document_package').html('<tr><td colspan="8" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            var data = $('#list_course_document_package_form').serialize() + "&limit_record=".concat(page);
            $.get(url, data, function (courses) {
                if (courses.login && courses.login == 1) {
                    LHM.common.pagination_site(courses.count_record, courses.limit, page, 'list_course_document_package', null, true, null, courses.total_record);
                    $('#list_course_document_package').html('');
                    if (courses && courses.data) {
                        var course = courses.data;
                        var html;
                        if (course.length > 0) {
                            for (var i = 0; i < course.length; i++) {
                                html += '<tr data-id=' + course[i]['_id'] + '>';
                                html += ' <td>' + (page * courses.limit + i + 1) + '</td>';
                                html += ' <td>';
                                html += '   <div class="row">';
                                html += '       <div class="col-md-2 d-flex"><img src="' + course[i]['cover'] + '" alt="' + course[i]['name'] + '" class="combo-document-cover m-auto"/></div>';
                                html += '       <div class="col-md-10">';
                                html += '           <a href="' + course[i]['link_detail'] + '" target="_blank">' + course[i]['name'] + '</a>';
                                html += '           <div>' + course[i]['updated'] + '</div>';
                                html += '       </div>';
                                html += '   </div>';
                                html += ' </td>';
                                if (course[i]['check_show_price']) {
                                    html += ' <td> ' + course[i]['price_sell'] + '</td>';
                                } else {
                                    html += ' <td> ' + course[i]['price'] + '</br>' + course[i]['price_sell'] + '</td>';
                                }
                                html += ' <td> <span class="badge badge-' + course[i]['status']['label_color'] + '">' + course[i]['status']['label'] + '</span> </td>';
                                html += ' <td> ' + course[i]['total_items'] + ' </td>';
                                if (courses.view_category) {
                                    var _course$i$category_na;
                                    html += ' <td> ' + ((_course$i$category_na = course[i]['category_name']) !== null && _course$i$category_na !== void 0 ? _course$i$category_na : '') + ' </td>';
                                } else if (courses.show_download) {
                                    html += ' <td> ' + course[i]['total_student'] + ' </td>';
                                }
                                if (courses.show_download) html += ' <td> ' + course[i]['total_download'] + ' </td>';
                                html += ' <td align="center">';
                                html += '           <ul class="list-unstyled acts-li">';
                                html += '           <li><a data-id="' + course[i]['_id'] + '" href="javascript:void(0);" class="btn-remove-combo-site"><i class="fa fa-trash deletes"></i> Xóa</a></li>';
                                html += '           <li><a href="javascript:;" class="btn-edit-combo-site" data-type="2" data-id="' + course[i]['_id'] + '"><i class="fas fa-edit"></i> Sửa </a></li>';
                                html += '           </ul>';
                                html += ' </td>';
                                html += '</tr>';
                            }
                            $('#list_course_document_package').html(html);
                        } else {
                            $('#list_course_document_package').html('<tr><td colspan="8">Không có dữ liệu</td></tr>');
                        }
                    }
                    if (courses && courses.groups) {
                        $('#list_ul_group').html('<tr><td class="text-center" colspan="5">Không tồn tại nhóm<td/></tr>');
                        if (courses.groups.length) {
                            $('#list_ul_group').html('');
                            courses.groups.forEach(function (group, index) {
                                var category_name = '', category_id = '';
                                if (group.categories && group.categories.length) {
                                    category_name = '- ' + group.categories.map(function (child) {
                                        return child.name;
                                    }).join('<br/>- ');
                                    category_id = group.categories.map(function (child) {
                                        return child._id['$id'];
                                    }).join(',');
                                }
                                $('#list_ul_group').append("\n                                    <tr data-id=\"".concat(group._id['$id'], "\" data-category-id=\"").concat(category_id, "\">\n                                        <td class=\"text-center\">").concat(index + 1, "</td>\n                                        <td>").concat(group.name, "</td>\n                                        <td class=\"text-center\">").concat(group.total_user, "</td>\n                                        <td>").concat(category_name, "</td>\n                                        <td class=\"text-center\"><a href=\"javascript:;\" class=\"btn btn-sm btn-success js-add-category-to-group\"><i class=\"fa fa-pencil\"></i></a></td>\n                                    </tr>\n                                    "));
                            });
                        }
                    }
                } else if (courses.login && courses.login == 2) {
                    window.location = courses.href;
                }
            }).always(function () {
                if ($('#filter-category-document').length && $('#filter-category-document > ul > li').length === 0 && $('#filter_category_cms').length) {
                    $('#filter_category_cms').val('combo_document').change();
                }
            });
        }, getStudents: {
            getStudentMemberShip: function getStudentMemberShip(page, email, status, tab) {
                page = page ? page : 0;
                email = $('.email-input-membership[name="email"]').val();
                status = $('.status_student[name="status_student"]').val();
                tab = tab ? tab : 'membership_tab';
                var url = 'sites/list_students';
                $('#dashboard #students #list_student_memberships').html('<tr><td colspan="8" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                var data = {limit_record: page, email: email, status: status, tab: tab};
                $.get(url, data, function (students) {
                    if (students.login && students.login == 1) {
                        LHM.common.pagination_site(students.count_record, students.limit, page, 'list_student_memberships', null, true, null, students.total_record);
                        $('#dashboard #students #list_student_memberships').html('');
                        $('#export-excel-student-membership').attr('href', base_url + '/sites/list_students?tab=membership_tab' + '&email=' + email + '&status=' + status + '&export=1');
                        if (students && students.data) {
                            var student = students.data;
                            var html;
                            var view;
                            if (student.length > 0) {
                                for (var i = 0; i < student.length; i++) {
                                    view = '<tr>';
                                    view += '<td>' + student[i]['membership']['info'] + '</td>';
                                    if (student[i]['period'] != 'unlimit') view += '<td>' + student[i]['period'] + student[i]['name_type_packge'] + ' - ' + student[i]['price'] + ' đ</td>'; else view += '<td>Không giới hạn - ' + student[i]['price'] + ' đ</td>';
                                    view += '</tr>';
                                    html += '<tr data-name="' + student[i]['name'] + '"  data-userid="' + student[i]['user_id'] + '" data-email="' + student[i]['email'] + '" data-start="' + student[i]['start'] + '" data-end="' + student[i]['end'] + '" data-phone="' + student[i]['phone'] + '" data-photo="' + student[i]['photo'] + '" data-custom="' + student[i]['custom'] + '">';
                                    html += ' <td>' + student[i]['stt'] + '</td>';
                                    html += ' <td>' + student[i]['name'] + '</td>';
                                    html += ' <td>' + student[i]['email'] + '</td>';
                                    html += ' <td>' + student[i]['phone'] + '</td>';
                                    html += ' <td>' + student[i]['start'] + '</td>';
                                    html += ' <td>' + student[i]['end'] + '</td>';
                                    html += '<td class="text-right"><a href="javascript:void(0);" class="btn-view-membership" data-membership="' + view + '"><i class="fas fa-info-circle"></i> Chi tiết </a></li></td>';
                                    html += ' <td class="text-right">';
                                    html += ' <a data-id="' + student[i]['user_id'] + '" href="javascript:void(0);" class="btn-remove-user-membership-acount"><i class="fa fa-trash deletes"></i> Xóa</a>';
                                    html += ' </td>';
                                    html += '</tr>';
                                }
                                $('#dashboard #students #list_student_memberships').html(html);
                            } else {
                                $('#dashboard #students #list_student_memberships').html('<tr><td colspan="8">Không có dữ liệu</td></tr>');
                            }
                        }
                    } else if (students.login && students.login == 2) {
                        window.location = students.href;
                    }
                });
            }, getStudentCertificate: function getStudentCertificate(page) {
                page = page ? page : 0;
                var url = 'sites/list_student_certificate';
                $('#dashboard #students #list_student_certificates').html('<tr><td colspan="8" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                var data = {
                    limit_record: page,
                    filters: {
                        'key_user': $('[name="filter_certificate[key_user]"]').val(),
                        'course_id': $('[name="filter_certificate[course_id]"]').val(),
                        'time': $('[name="filter_certificate[time]"]').val()
                    }
                };
                $.get(url, data, function (students) {
                    if (students.login && students.login == 1) {
                        LHM.common.pagination_site(students.total, students.limit, page, 'list_student_certificates', null, true, null, students.total_record);
                        $('#dashboard #students #list_student_certificates').html('');
                        $('#export-excel-student-membership').attr('href', base_url + '/sites/list_students?tab=membership_tab' + '&email=' + $('.email-input-membership').val() + '&status=' + $('.status_student').val() + '&export=1');
                        if (students && students.data) {
                            var student = students.data;
                            var html;
                            if (student.length > 0) {
                                for (var i = 0; i < student.length; i++) {
                                    html += "\n                                        <tr>\n                                            <td>".concat(student[i]['_id'], "</td>\n                                            <td>").concat(student[i]['fullname'], "</td>\n                                            <td>").concat(student[i]['course_name'], "</td>\n                                            <td>").concat(student[i]['time'], "</td>\n                                            <td>\n                                                <a href=\"javascript:;\" class=\"js-download-certificate\" \n                                                    data-code=\"").concat(student[i]['code'], "\" data-user-id=\"").concat(student[i]['uuid'], "\"\n                                                >\n                                                    <i class=\"far fa-cloud-download\"></i>\n                                                </a>\n                                            </td>\n                                        </tr>\n                                        ");
                                }
                                $('#dashboard #students #list_student_certificates').html(html);
                            } else {
                                $('#dashboard #students #list_student_certificates').html('<tr><td colspan="8">Không có dữ liệu</td></tr>');
                            }
                        }
                    } else if (students.login && students.login == 2) {
                        window.location = students.href;
                    }
                });
            }, getStudentRetail: function getStudentRetail(page, email, tab) {
                page = page ? page : 0;
                email = email ? email : '';
                tab = tab ? tab : 'retail_tab';
                var url = 'sites/list_students';
                var data = $('#list-filter-join-course').serialize() + '&limit_record=' + page + '&tab=' + tab;
                $('#dashboard #students #list_student_retail').html('<tr><td colspan="8" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                $('.btn-delete-student-retail-all').hide();
                $('.btn-check-all-student-retail').prop('checked', false);
                $.get(url, data, function (students) {
                    if (students.login && students.login == 1) {
                        LHM.common.pagination_site(students.count_record, students.limit, page, 'list_student_retail', null, true, null, students.total_record);
                        $('#dashboard #students #list_student_retail').html('');
                        $('#export-excel-student-joined').attr('href', base_url + '/sites/list_students?export=1&' + data);
                        if (students && students.data) {
                            var html, student = students.data;
                            if (student.length > 0) {
                                for (var i = 0; i < student.length; i++) {
                                    var studentId = student[i]['user_id']['$id'];
                                    html += "\n                                        <tr>\n                                            <td><input type=\"checkbox\" value=\"".concat(studentId, "\" /></td>\n                                            <td class=\"text-center\">").concat(page * students.limit + i + 1, "</td>\n                                            <td>").concat(student[i]['name'], "</td>\n                                            <td>").concat(student[i]['email'], "</td>\n                                            <td>").concat(student[i]['phone'], "</td>\n                                            <td>").concat(student[i]['createdAt'], "</td>\n                                            <td>").concat(student[i]['group'], "</td>\n                                            <td class=\"text-right\">\n                                                <a href=\"javascript:;\" class=\"btn-edit-student mr-2\" data-id=\"").concat(studentId, "\"><i class=\"fas fa-edit\"></i> S\u1EEDa</a>\n                                                <a href=\"javascript:;\" class=\"btn-delete-student-retail\" data-id=\"").concat(studentId, "\"><i class=\"fa fa-trash\"></i> X\xF3a</a>\n                                            </td>\n                                        </tr>\n                                    ");
                                }
                                $('#dashboard #students #list_student_retail').html(html);
                            } else {
                                $('#dashboard #students #list_student_retail').html('<tr><td colspan="8">Không có dữ liệu</td></tr>');
                            }
                        }
                    } else if (students.login && students.login == 2) {
                        window.location = students.href;
                    }
                });
            }, getUserGroups: function getUserGroups() {
                var tbody = $('#list_user_groups');
                $('#wrap-add-user-group').hide();
                $('#wrap-user-group').show();
                LHM.common.getListTable('list_user_groups', '/groups/list_user_groups', function (res) {
                    tbody.html(res.html);
                    if (res.show_th_category) {
                        $('th.group_category_th').show();
                    } else {
                        $('th.group_category_th').remove();
                    }
                    $('#export-user-group').attr('href', "".concat(base_url, "/groups/exportExcel?").concat($('#list_user_groups_form').serialize()));
                });
            }, getLogsUser: function getLogsUser(page) {
                page = page ? page : 0;
                var name = $('.view-user-logs-cms').attr('data-name');
                var email = $('.view-user-logs-cms').attr('data-email');
                var id = $('.view-user-logs-cms').data('id');
                var url = base_url + '/sites/logs_user_registed';
                $.get(url, {id: id, filter: $('#filter-log').val(), limit_record: page}, function (users) {
                    if (users.login && users.login == 1) {
                        LHM.common.pagination_site(users.count_record, users.limit, page, 'list_logs_user_cms');
                        $('#list_logs_user_cms').html('');
                        if (users && users.data) {
                            var user = users.data;
                            var html;
                            if (user.length > 0) {
                                for (var i = 0; i < user.length; i++) {
                                    var quiz_point = '';
                                    if (user[i]['quiz_point'] != '') {
                                        quiz_point = '<p><strong>Điểm bài kiểm tra:' + user[i]['quiz_point'] + '</strong></p>';
                                    } else if (user[i]['quiz_point_fail'] != '') {
                                        $.each(user[i]['quiz_point_fail'], function (index, el) {
                                            quiz_point += '<p><strong>Điểm bài kiểm tra lần ' + (index + 1) + ': ' + el.score + '/' + el.total_score + '</strong></p>';
                                        });
                                    }
                                    html += '<tr>';
                                    html += ' <td>' + (page * users.limit + i + 1) + '</td>';
                                    html += '<td >' + user[i]['type'] + '</td>';
                                    html += '<td >' + user[i]['time'] + '</td>';
                                    html += '<td >' + user[i]['ip'] + '</td>';
                                    html += '<td >' + user[i]['agent'] + '</td>';
                                    html += '<td ><p>' + user[i]['course'] + '</p>' + quiz_point + '</td>';
                                    html += '</tr>';
                                }
                                $('#list_logs_user_cms').html(html);
                            } else {
                                $('#list_logs_user_cms').html('<tr><td colspan="5">Không có dữ liệu</td></tr>');
                            }
                        }
                    } else if (users.login && users.login == 2) {
                        window.location = users.href;
                    }
                });
            }, getCourseUser: function getCourseUser(uid) {
                var tbody = $('#learn_one_student');
                LHM.common.getListTable('learn_one_student', "/courses/listCourseOneStudent/".concat(uid), function (res) {
                    tbody.html(res.html);
                });
            }, getDeviceUser: function getDeviceUser(uid) {
                var tbody = $('#list_device_user');
                LHM.common.getListTable('list_device_user', "/device/listDeviceUser/".concat(uid), function (res) {
                    tbody.html(res.html);
                });
            }, getUserRegisted: function getUserRegisted() {
                $('#v-pills-student-registed .x-check-all').prop('checked', false).change()
                LHM.common.getListTable('list_user_registed', '/sites/listUser', function (res) {
                    if(res.html){
                        $('#list_user_registed').html(res.html)
                    }
                })
                let export_button = $('#export-student-registed')
                if(!export_button.hasClass('export-event')){
                    export_button.addClass('export-event').click(function () {
                        window.location.href = '/sites/exportListUser?' + $('#list_user_registed_filter').serialize();
                    })
                }
            }, getListEmailCampaign: function getListEmailCampaign(page) {
                page = page ? page : 0;
                var url = base_url + '/sites/list_email_campaign_cms';
                $('#list_email_campaign_cms').html('<tr><td colspan="9" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                $.get(url, {limit_record: page}, function (res) {
                    if (res.login && res.login == 1) {
                        if (!res.setup_email_service) LHM.common.setupEmailService();
                        LHM.common.pagination_site(res.count_record, res.limit, page, 'list_email_campaign_cms');
                        $('#list_email_campaign_cms').html('');
                        if (res && res.data) {
                            $('#count_email_sent_quota').html('CÒN LẠI: ' + res.email_sent_quota + ' EMAIL TRONG THÁNG ');
                            var campaigns = res.data;
                            var html;
                            if (campaigns.length > 0) {
                                for (var i = 0; i < campaigns.length; i++) {
                                    html += '<tr class="email-campaign-' + campaigns[i]['id'] + '">';
                                    html += ' <td class="text-center"><span>' + campaigns[i]['no'] + '</span></td>';
                                    if (campaigns[i]['type_choose_campaign'] == '99') {
                                        html += ' <td class="table-responsive"><strong>' + campaigns[i]['campaign_name'] + '</strong></br>' + campaigns[i]['title'] + '</td>';
                                        html += ' <td class="text-center"> ' + campaigns[i]['sents'] + ' </td>';
                                        html += ' <td class="text-center"> Tự động </td>';
                                        html += ' <td class="text-center"> Tự động </td>';
                                        html += ' <td class="text-center"></td>';
                                    } else {
                                        html += ' <td class="table-responsive"><a href="/sites/view_email_campaign?id=' + campaigns[i]['id'] + '"><strong>' + campaigns[i]['campaign_name'] + '</strong></br>' + campaigns[i]['title'] + '</a></td>';
                                        html += ' <td class="text-center"> ' + campaigns[i]['sents'] + ' </td>';
                                        html += ' <td class="text-center"> ' + campaigns[i]['creator'] + ' </td>';
                                        html += ' <td class="text-center"> ' + campaigns[i]['date_to_send'] + ' </td>';
                                        html += '<td>';
                                        html += '<div>';
                                        if (campaigns[i]['type_choose_campaign'] != '99') {
                                            if (campaigns[i]['status_old'] == 1 || campaigns[i]['status_old'] == 2) {
                                                html += '<a href="/sites/edit_email_campaign?id=' + campaigns[i]['id'] + '" class="btn-edit-email-campaign"><i class="fa fa-edit"></i> Sửa </a>';
                                                html += '<a href="javascript:void(0);" class="btn-delete-email-campaign" data-id="' + campaigns[i]['id'] + '"><i class="fa fa-trash"></i> Xóa </a>';
                                            }
                                            if (campaigns[i]['status_old'] == 4 && campaigns[i]['name_queue']) {
                                                html += '<a href="javascript:void(0);" class="btn-delete-email-campaign" data-id="' + campaigns[i]['id'] + '"><i class="fa fa-trash"></i> Xóa </a>';
                                            }
                                            html += '<a href="/sites/view_email_campaign?id=' + campaigns[i]['id'] + '" class="btn-view-email-campaign"><i class="fa fa-eye fs_15"></i> Xem </a>';
                                        }
                                        html += '</div>';
                                        html += '</td>';
                                    }
                                    html += '</tr>';
                                }
                                $('#list_email_campaign_cms').html(html);
                            } else {
                                $('#list_email_campaign_cms').html('<tr><td colspan="9">Không có dữ liệu</td></tr>');
                            }
                        }
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                });
            }, getStudentActiveCourse: function getStudentActiveCourse(page) {
                page = page ? page : 0;
                var url = base_url + '/sites/list_history_active_course_cms';
                $('#list_user_active_api').html('<tr><td colspan="5" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                $.get(url, {limit_record: page, email_phone: $('#name_student_active_course').val()}, function (users) {
                    if (users.login && users.login == 1) {
                        LHM.common.pagination_site(users.count_record, users.limit, page, 'list_user_active_api');
                        $('#list_user_active_api').html('');
                        if (users && users.data) {
                            $('#count_active_course_api').html('CÒN LẠI: ' + users.active_course_api + ' LƯỢT KÍCH HOẠT ');
                            var html;
                            if (users.data.length) {
                                $.each(users.data, function (k, v) {
                                    html += '<tr>' + '<td>' + v['stt'] + '</td>' + '<td>' + v['name'] + '</td>' + '<td>' + v['email'] + '</td>' + '<td>' + v['phone'] + '</td>' + '<td>' + v['time_create'] + '</td>' + '</tr>';
                                });
                                $('#list_user_active_api').html(html);
                            } else {
                                $('#list_user_active_api').html('<tr><td colspan="5">Không có dữ liệu</td></tr>');
                            }
                        }
                    } else if (users.login && users.login == 2) {
                        window.location = users.href;
                    }
                });
            }
        }, getUserAffChild: function getUserAffChild(page) {
            page = page ? page : 0;
            var url = base_url + '/sites/list_aff_child';
            $('#list_aff_child tbody').html('<tr><td colspan="4" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {
                limit_record: page,
                email_name_phone: $('#name_email_phone_user_aff_child').val()
            }, function (users) {
                if (users.login && users.login == 1) {
                    LHM.common.pagination_site(users.count_record, users.limit, page, 'list_aff_child');
                    $('#list_aff_child tbody').html('');
                    if (users && users.data) {
                        var user = users.data;
                        var html;
                        if (user.length > 0) {
                            for (var i = 0; i < user.length; i++) {
                                html += '<tr>';
                                html += ' <td>' + (page * users.limit + i + 1) + '</td>';
                                html += ' <td>' + user[i]['name'] + '</td>';
                                html += ' <td> ' + user[i]['phone'] + ' </td>';
                                html += ' <td> ' + user[i]['email'] + ' </td>';
                                html += ' <td><a href="javascript:void(0);" data-id="' + user[i]['_id'] + '" class="view-process-study-user"><i class="fa fa-eye fs_15"></i> Tiến độ</a></td>';
                                html += ' <td><a href="javascript:void(0);" data-id="' + user[i]['_id'] + '" data-email="' + user[i]['email'] + '" class="send-mail-user-aff-child"><i class="fas fa-envelope"></i> Gửi mail</a></td>';
                                html += '</tr>';
                            }
                            $('#list_aff_child tbody').html(html);
                        } else {
                            $('#list_aff_child tbody').html('<tr><td colspan="4">Không có dữ liệu</td></tr>');
                        }
                    }
                } else if (users.login && users.login == 2) {
                    window.location = users.href;
                }
            });
        }, filemanager: function filemanager() {
            $.alert({
                title: "Chọn ảnh",
                content: 'url:' + base_url + '/uploader/genuploader?extratools=library,upimage',
                columnClass: "col-sm-8",
                buttons: {close: {text: 'Đóng'}},
                onContentReady: function onContentReady() {
                    window.filemanager = this;//handle uploader
                    LHM.uploader.init(function (data_file) {//calbback when upload success
//object file
                        if (data_file._id) {
                            $('.upload-cover img').attr('src', data_file['url']);
                            $('.upload-cover #url_banner').val(data_file['url']);
                        } else {
                            for (var i in data_file) {
                                $('.upload-cover img').attr('src', data_file[i]['url']);
                                $('.upload-cover #url_banner').val(data_file[i]['url']);
                            }
                        }//close popup
                        window.filemanager.close();
                    });
                }
            });
        }, add_email_campaign: function add_email_campaign(type) {
            CKEDITOR.instances.content_campaign.updateElement();
            var courses = [], lives = [], forms = [];
            $('#filter_course_create_email_campaign :selected').each(function () {
                courses.push($(this).val());
            });
            $('#filter_course_live_create_email_campaign :selected').each(function () {
                lives.push($(this).val());
            });
            $('#form_id_email_campaign :selected').each(function () {
                forms.push($(this).val());
            });
            var dataString = $('.frm-add-email-campaign').serialize() + '&_token=' + $.cookie('_token') + '&type=' + type + '&courses=' + courses + '&lives=' + lives + '&forms=' + forms;
            if (type == 'save') {
                $('.btn-add-email-campaign-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang gửi');
                $('.btn-add-email-campaign-popup').attr('disabled', true);
            } else if (type == 'draft') {
                $('.btn-save-email-campaign-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang lưu nháp');
                $('.btn-save-email-campaign-popup').attr('disabled', true);
            }
            $.ajax({url: '/sites/create_email_campaign', type: 'POST', data: dataString}).done(function (res) {
                if (res.login && res.login == 1) {
                    if (res.status) {
                        localStorage.back_to_email_campaign = "1";
                        LHM.common.notify(null, 'success', res.message);
                        setTimeout(function () {
                            window.location = "/manage#email_campaign";
                        });
                    } else {
                        $.each(res.message, function (index, el) {
                            LHM.common.notify(null, 'danger', el);
                        });
                    }
                } else if (res.login && res.login == 2) {
                    window.location = res.href;
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                var msg = jqXHR.responseJSON.message ? jqXHR.responseJSON.message : errorThrown;
                LHM.common.notify(null, 'danger', msg);
            }).always(function () {
                if (type == 'save') {
                    $('.btn-add-email-campaign-popup').html('Gửi');
                    $('.btn-add-email-campaign-popup').removeAttr('disabled');
                } else if (type == 'draft') {
                    $('.btn-save-email-campaign-popup').html('Lưu nháp');
                    $('.btn-save-email-campaign-popup').removeAttr('disabled');
                }
            });
        }, edit_email_campaign: function edit_email_campaign(type) {
            CKEDITOR.instances.content_campaign.updateElement();
            var courses = [], lives = [], forms = [];
            $('#filter_course_edit_email_campaign :selected').each(function () {
                courses.push($(this).val());
            });
            $('#filter_course_live_edit_email_campaign :selected').each(function () {
                lives.push($(this).val());
            });
            $('#form_id_email_campaign :selected').each(function () {
                forms.push($(this).val());
            });
            var dataString = $('.frm-edit-email-campaign').serialize() + '&_token=' + $.cookie('_token') + '&type=' + type + '&courses=' + courses + '&lives=' + lives + '&forms=' + forms;
            if (type == 'save') {
                $('.btn-add-email-campaign-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang gửi');
                $('.btn-add-email-campaign-popup').attr('disabled', true);
            } else if (type == 'draft') {
                $('.btn-save-email-campaign-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang lưu nháp');
                $('.btn-save-email-campaign-popup').attr('disabled', true);
            }
            $.ajax({url: '/sites/edit_email_campaign', type: 'POST', data: dataString}).done(function (res) {
                if (res.status) {
                    localStorage.back_to_email_campaign = "1";
                    LHM.common.notify(null, 'success', res.message);
                    setTimeout(function () {
                        window.location = "/manage#email_campaign";
                    });
                } else {
                    $.each(res.message, function (index, el) {
                        LHM.common.notify(null, 'danger', el);
                    });
                }
            }).fail(function (jqXHR, textStatus, errorThrown) {
                var msg = jqXHR.responseJSON.message ? jqXHR.responseJSON.message : errorThrown;
                LHM.common.notify(null, 'danger', msg);
            }).always(function () {
                if (type == 'save') {
                    $('.btn-add-email-campaign-popup').html('Gửi');
                    $('.btn-add-email-campaign-popup').removeAttr('disabled');
                } else if (type == 'draft') {
                    $('.btn-save-email-campaign-popup').html('Lưu nháp');
                    $('.btn-save-email-campaign-popup').removeAttr('disabled');
                }
            });
        }, getClasses: function getClasses() {// page = page ? page : 0;
// tab_room = tab_room ? tab_room : 1;
            $('#list-classes').show();
            $('#update-list-classes').hide();
            $('div[data-starttime]').html('');// var currentdate = window.choicedate;
            var courseid = $('#listcourse').val();
            var teachersid = $('#listteachers').val();
            var status_zoom = $('#status_zoom').val();
            var start_date_list_zoom = $('#start_date_list_zoom').val();
            var end_date_list_zoom = $('#end_date_list_zoom').val();
            var count_live = $('#count_live_zoom').val();
            var check_show_count_live = $('#count_live_zoom').attr('data-check_show_count_live');
            $('div[data-starttime]').html('');// setTimeout(function() {
// let tab_room = $('#tab_room_cms .active').attr("data-value");
            $.get(base_url + '/lives/list_schedule_lives', {
                courseid: courseid,
                teachersid: teachersid,
                status_zoom: status_zoom,
                start_date_list_zoom: start_date_list_zoom,
                end_date_list_zoom: end_date_list_zoom
            }, function (lives) {
                if (lives.login && lives.login == 1) {
                    $('#detail_course #zoom tbody').html('');
                    if (lives && lives.data) {
                        $('#list_room_lives_cms').html("");
                        var live = lives.data;
                        var live_all = lives.data_all;
                        var item_add_default = '<div class="card" style="width: 18rem; margin-right: 15px; margin-bottom: 15px; display:inline-block;text-align: center;height:335px;float: left;background-color:#007bff">' + '<a href="' + base_url + '/lives/create" style="color: white;display: block;font-size: 24px;text-align: center;">' + '<div class="card-body" style="margin-top:160px;padding: 15px 0;">' + '<img src="' + base_url + '/statics/home/images/add-svg.svg" alt="" style="width:80px;margin-top: -180px; ">' + '<p style="line-height: 0;margin-top: 0px;">Tạo lớp học ảo</p>';
                        if (check_show_count_live == 1) {
                            item_add_default += '<div class="count_live_zoom_cms" style="margin-top: 75px;"><p style="height: 1px;margin-bottom: 20px;background-color: #7abfb6;width: 100%;"></p><p style="line-height: 0;font-size: 16px;">Bạn còn ' + count_live + ' lịch zoom</p></div>';
                        }
                        item_add_default += '</div></a>' + '</div>';
                        $('#list_room_lives_cms').append(item_add_default);
                        if (live.length > 0) {
                            for (var _i6 in live) {
                                var item = '<div class="card" style="width: 18rem; margin-right: 15px; margin-bottom: 15px; display:inline-block;text-align: center;height:335px;">'// + '<div class="course-item-image-room" style="background-image: url('+ live[i]['cover_course'] +')"></div>'
                                    + '<div class="card-body">' + '<h5 class="live_name"><a href="javascript:;" class="btn-update-classes name-live-room" data-code="' + live[_i6]['code'] + '" data-id="' + live[_i6]['_id']['$id'] + '"><i class="fas fa-video"></i> ' + live[_i6]['name'] + '</a><p class="name-live-room">' + live[_i6]['course_name'] + '</p></h5>' + '<p class="card-text">' + live[_i6]['start_date'] + (live[_i6]['end_date'] != '' ? ' - ' + live[_i6]['end_date'] : '') + '<br>' + live[_i6]['hours'] + (live[_i6]['end_date'] != '' ? '<br> Thứ ' + live[_i6]['day_of_week'] : '<br>') + ' <br>' + '<span class="text-' + live[_i6]['status']['label_color'] + '">' + live[_i6]['status']['label'] + '</span>' + '</p>' + live[_i6]['instructor'] + '<p class="card-text"><a href="javascript:;" data-code="' + live[_i6]['code'] + '" data-id="' + live[_i6]['_id']['$id'] + '" class="btn-update-classes-student-tab btn btn-light" style="margin-right:5px;">' + live[_i6]['total_student'] + ' Học viên </a><a href="javascript:;" class="btn btn-light" onclick="LHM.lives.invite_student_common(\'' + live[_i6]['_id']['$id'] + '\',\'' + live[_i6]['code_join'] + '\',\'' + live[_i6]['password'] + '\',\'' + live[_i6]['link_room'] + '\')" title="Mời học viên"> +MỜI</a> <br>' + ' <br>' + '</p>' + '<a style="width:100%" class="btn btn-primary" target="_blank" href="' + live[_i6]['link_room'] + '">' + 'Vào học' + '</a>' + '</div>' + '</div>';
                                $('#list_room_lives_cms').append(item);
                            }
                        }//parse courses
                        var listcourse = '<option value="">-- Tất cả khóa học --</option>';
                        for (var i in lives.courses) {
                            listcourse += '<option value="' + lives.courses[i]._id['$id'] + '" ' + (lives.courses[i]._id['$id'] === courseid ? 'selected' : '') + ' >' + lives.courses[i].name + '</option>';
                        }
                        $('#listcourse').html(listcourse);
                        var listteachers = '<option value="">-- Tất cả giảng viên --</option>';
                        for (var k in lives.teachers) {
                            listteachers += '<option value="' + lives.teachers[k]._id['$id'] + '" ' + (lives.teachers[k]._id['$id'] === teachersid ? 'selected' : '') + ' >' + lives.teachers[k].fullname + '</option>';
                        }
                        $('#listteachers').html(listteachers);
                    }
                } else if (lives.login && lives.login == 2) {
                    window.location = lives.href;
                }
            });// }, 10);
        }, getEdubitClasses: function getEdubitClasses() {
            $('#list-classes-edubit').show();
            $('#update-list-classes').hide();
            var status_zoom_edubit = $('#status_zoom_edubit').val();
            var start_date_list_zoom_edubit = $('#start_date_list_zoom_edubit').val();
            var end_date_list_zoom_edubit = $('#end_date_list_zoom_edubit').val();
            $.get(base_url + '/lives/list_edubit_lives', {
                status_zoom_edubit: status_zoom_edubit,
                start_date_list_zoom_edubit: start_date_list_zoom_edubit,
                end_date_list_zoom_edubit: end_date_list_zoom_edubit
            }, function (lives) {
                if (lives.login && lives.login == 1) {
                    $('.box-live-edubit').html('');
                    if (lives && lives.data) {
                        $('.box-live-edubit').html("");
                        var live = lives.data;
                        if (live.length > 0) {
                            for (var i in live) {
                                var item = '<div class="col-md-3 class-item">' + '<a class="mt-3" style="display: block;" title="Click để vào" alt="Click để vào" href="' + live[i]['link_room'] + '">' + '<h3 class="live_name">' + '<a href="' + base_url + '/lives/edit_live_edubit?id=' + live[i]['_id']['$id'] + '" class="btn-update-classes name-live-room" data-code="' + live[i]['code'] + '" data-id="' + live[i]['_id']['$id'] + '"><i class="fas fa-video"></i> ' + live[i]['name'] + '</a>' + '</h3>' + '</a>' + '<div class="carendar">' + live[i]['start_date'] + (live[i]['end_date'] != '' ? ' - ' + live[i]['end_date'] : '') + '<br>' + live[i]['hours'] + (live[i]['end_date'] != '' ? '<br> Thứ ' + live[i]['day_of_week'] : '<br>') + '<p class="text-' + live[i]['status']['label_color'] + ' mt-10">' + live[i]['status']['label'] + '</p>' + '</div>' + '<p class="mt-10">' + live[i]['instructor'] + '</p>' + '<p style="margin-bottom: 25px;">' + '<a href="javascript:;" class="btn-update-classes-student-tab btn btn-light">' + live[i]['total_student'] + ' Học viên <a href="javascript:;" class="btn btn-light" onclick="LHM.lives.invite_student_common(\'' + live[i]['_id']['$id'] + '\',\'' + live[i]['code_join'] + '\',\'' + live[i]['password'] + '\',\'' + live[i]['link_share'] + '\')" title="Mời học viên"> +MỜI</a></a>' + '</p>' + '<a class="btn btn-primary" target="_blank" href="' + live[i]['link_room'] + '" style="width: 100%;color: white;">Vào học</a>' + '</div>';
                                $('.box-live-edubit').append(item);
                            }
                        }
                    }
                } else if (lives.login && lives.login == 2) {
                    window.location = lives.href;
                }
            });
        }, coppyLink: function coppyLink(data) {
            var copyText = $(data).attr("data-coppylink");
            var textArea = document.createElement('textarea');
            textArea.textContent = copyText;
            document.body.append(textArea);
            textArea.select();
            document.execCommand("copy");
            LHM.common.notify(null, 'success', 'Coppy link thành công');
            $('textarea').remove();
        }, coppyCode: function coppyCode(data) {
            var copyText = $(data).attr("data-coppycode");
            var textArea = document.createElement('textarea');
            textArea.textContent = copyText;
            document.body.append(textArea);
            textArea.select();
            document.execCommand("copy");
            LHM.common.notify(null, 'success', 'Coppy mã thành công');
            $('textarea').remove();
        }, getLibrary: function getLibrary() {
            LHM.library.get_files_in_library();
        }, getSites: function getSites(page) {
            page = page ? page : 0;
            var url = '/sites/getSites';
            $.get(url, {limit_record: page}, function (sites) {
                if (sites.login && sites.login == 1) {
                    LHM.common.pagination_site(sites.count_record, sites.limit, page, 'list-sites');
                    $('#mn-sites #sites tbody').html('');
                    var token = sites.token_across_domain;
                    if (sites && sites.data) {
                        var sites = sites.data;
                        if (sites.length > 0) {
                            var html = '';
                            for (var i = 0; i < sites.length; i++) {
                                html += '<tr>';
                                html += '<td>' + (i + 1) + '</td>';
                                html += '<td>' + (sites[i]['logo'] ? '<img height="25" src="' + base_url + '/data/sites/' + sites[i]['_id'] + '/logos/' + sites[i]['logo'] + '"/>' : '-') + '</td>';
                                html += '<td>' + (sites[i]['name'] || '-') + '</td>';
                                html += '<td>' + (sites[i]['domain'] || '-') + '</td>';
                                html += '<td>' + (sites[i]['subdomain'] + '.edubit.vn' || '-') + '</td>';
                                html += '<td>' + (sites[i]['package'] || '-') + '</td>';
                                html += '<td><ul class="list-unstyled acts-li">';
                                html += '           <li><a href="https://' + sites[i]['subdomain'] + '.edubit.vn/manage?s=' + sites[i]['_id'] + '&t=' + token + '#overview"><i class="fa fa-list-alt"></i> Dashboard</a></li>';
                                html += '           <li><a href="https://' + sites[i]['subdomain'] + '.edubit.vn/manage?s=' + sites[i]['_id'] + '&t=' + token + '#setting"><i class="fas fa-cog"></i> Cài đặt</a></li>';
                                html += '           </ul>';
                                html += '</td>';
                                html += '</tr>';
                            }
                            $('#mn-sites #sites tbody').html(html);
                        } else {
                            $('#mn-sites #sites tbody').html('<tr class="no-data"><td colspan="7">Không có dữ liệu</td></tr>');
                        }
                    }
                } else if (sites.login && sites.login == 2) {
                    window.location = sites.href;
                }
            });
        }, getCoupons: function getCoupons() {
            var tbody = $('#tbl_coupon');
            LHM.common.getListTable('tbl_coupon', '/courses/get_coupons', function (res) {
                tbody.html(res.html);
            });
        }, getMembershipCards: function getMembershipCards(page) {
            page = page ? page : 0;
            var student_group = $('#list_student_group_membership').val();
            var code_tag_filter_membership = $('#code_tag_filter_membership').val();
            var status_filter = $('#status_filter_membership').val();
            var url = '/sites/list_membership_card';
            $('#dashboard #cards tbody#list_membership_cards').html('<tr><td colspan="10" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            var data = {
                'limit_record': page,
                'id_group': student_group,
                'code_tag_filter_membership': code_tag_filter_membership,
                'status_filter': status_filter
            };
            $.get(url, data, function (cards) {
                if (cards.login && cards.login == 1) {
                    LHM.common.pagination_site(cards.count_record, cards.limit, page, 'list_membership_cards');
                    $('#dashboard #cards tbody#list_membership_cards').html('');
                    $('#list_student_group_membership').html('');
                    if (cards && cards.student) {
                        var students = cards.student;//parse student_group
                        var list_group_std = '';
                        if (students.length > 0) {
                            for (var i = 0; i < students.length; i++) {
                                list_group_std += '<option value="' + students[i]._id + '" ' + (students[i]._id === student_group ? 'selected' : '') + ' >' + students[i].name + '</option>';
                            }
                        }
                        $('#list_student_group_membership').html(list_group_std);
                    }
                    if (cards && cards.tag) {
                        var tag = cards.tag;//parse student_group
                        var list_tag = '';
                        if (tag.length > 0) {
                            for (var _i7 = 0; _i7 < tag.length; _i7++) {
                                list_tag += '<option value="' + tag[_i7] + '" ' + (tag[_i7] === code_tag_filter_membership ? 'selected' : '') + ' >' + tag[_i7] + '</option>';
                            }
                        }
                        $('#code_tag_filter_membership').html(list_tag);
                    }
                    if (cards && cards.data) {
                        var btn_edit = !!cards.btn_edit;
                        var btn_delete = !!cards.btn_delete;
                        var cards = cards.data;
                        if (cards.length > 0) {
                            var html = '';
                            for (var _i8 = 0; _i8 < cards.length; _i8++) {
                                html += '<tr _id="' + cards[_i8]['_id'] + '">';
                                html += '<td _code>' + cards[_i8]['code'] + '</td>';
                                html += '<td class="js-order"></td>';
                                html += '<td>' + cards[_i8]['serial'] + '</td>';
                                html += '<td>' + cards[_i8]['period'] + '</td>';
                                html += '<td>' + cards[_i8]['status'] + '</td>';
                                html += '<td>' + cards[_i8]['createdAt'] + '</td>';
                                html += '<td>' + cards[_i8]['expire_date'] + '</td>';
                                html += '<td>' + cards[_i8]['user'] + '</br>' + cards[_i8]['user_email'] + '</td>';
                                html += '<td>' + cards[_i8]['updatedAt'] + '</td>';
                                html += '<td>' + cards[_i8]['user_group'] + '</td>';
                                html += ' <td align="center">';
                                if (cards[_i8]['user'] == "") {
                                    html += '           <ul class="list-unstyled acts-li">';
                                    if (btn_delete) {
                                        html += '           <li><a href="javascript:void(0);" onclick="LHM.mnDashboard.del_membership_card(this)" class="delete"><span class="fa fa-trash"></span> Xóa</a></li>';
                                    }
                                    if (btn_edit) {
                                        html += '           <li><a href="javascript:void(0);" data-id="' + cards[_i8]._id + '" data-email-user="' + cards[_i8].user_email + '" class="btn-update-member-ship-card"><i class="fas fa-edit"></i> Sửa </a></li>';
                                    }
                                }
                                html += '           </ul>';
                                html += ' </td>';
                                html += '</tr>';
                            }
                            var discountIds = cards.map(function (c) {
                                return c._id;
                            });
                            $.post('/lives/get_orders_by_discounts', {
                                ids: discountIds,
                                _token: $.cookie('_token')
                            }).done(function (orders) {
                                if (orders && orders.length > 0) {
                                    orders.forEach(function (order) {
                                        var tr = $("tr[_id=" + order.discount_id + "]");
                                        tr.find('td.js-order').html("<a style='color:#007bff' target='_blank' href='/order-detail/" + order._id + "'>" + order._id + "</a>");
                                    });
                                }
                            });
                            $('#dashboard #cards tbody#list_membership_cards').html(html);
                        } else {
                            $('#dashboard #cards tbody#list_membership_cards').html('<tr><td colspan="9">Không có dữ liệu</td></tr>');
                        }
                    }
                } else if (cards.login && cards.login == 2) {
                    window.location = cards.href;
                }
            });
        }, del_membership_card: function del_membership_card(curr) {
            var total_record = $('#v-pills-membership-card #total_record').html();
            $.confirm({
                title: 'Cảnh báo',
                content: 'Mã thẻ <strong>' + $(curr).parents('tr').find('td[_code]').text() + '</strong> sẽ bị xóa.',
                buttons: {
                    OK: {
                        text: 'OK', btnClass: 'btn-blue', action: function action() {
                            var codes = {code: []};
                            codes.code.push($(curr).parents('tr').find('td[_code]').text());
                            $.ajax({
                                type: 'POST',
                                url: '/sites/del_membership_card/' + sid,
                                data: {
                                    _token: $.cookie('_token'),
                                    code: $(curr).parents('tr').find('td[_code]').text()
                                },
                                dataType: "json",
                                beforeSend: function beforeSend() {
                                },
                                cache: true,
                                success: function success(rs) {
                                    if (rs.login && rs.login == 1) {
                                        $(curr).parents('tr').remove();
                                        if ($('#v-pills-membership-card tbody tr').length == 0) {
                                            $('#v-pills-membership-card tbody').html('<tr><td colspan="9">Không có dữ liệu</td></tr>');
                                        }
                                        if (!$('#v-pills-membership-card tbody tr').length) $('#v-pills-membership-card-tab').trigger('click');
                                    } else if (rs.login && rs.login == 2) {
                                        window.location = rs.href;
                                    }
                                }
                            });
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, del_discount: function del_discount(id, curr) {
            $.confirm({
                title: 'Cảnh báo',
                content: 'Mã coupon <strong>' + $(curr).parents('tr').find('td[_code]').text() + '</strong> sẽ bị xóa.',
                buttons: {
                    OK: {
                        text: 'OK', btnClass: 'btn-blue', action: function action() {
                            var codes = {code: []};
                            codes.code.push($(curr).parents('tr').find('td[_code]').text());
                            $.ajax({
                                type: 'GET',
                                url: '/courses/del_discount/' + sid + '?' + $.param(codes),
                                data: {},
                                dataType: "json",
                                beforeSend: function beforeSend() {
                                },
                                cache: true,
                                success: function success(rs) {
                                    if (rs.login && rs.login == 1) {
                                        if (!rs.error) {
                                            $(curr).parents('tr').remove();
                                            if ($('#coupons tbody tr').length > 0) {
                                                $('#v-coupons-course-tab').trigger('click');
                                            } else {
                                                $('#coupons tbody').html('<tr class="nodata"><td colspan="9">Không có dữ liệu</td></tr>');
                                            }
                                        } else {
                                            LHM.common.notify(null, 'danger', 'Không được xóa mã đã sử dụng');
                                        }
                                    } else if (rs.login && rs.login == 2) {
                                        window.location = rs.href;
                                    }
                                }
                            });
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, del_active_code: function del_active_code(curr) {
            $.confirm({
                title: 'Cảnh báo',
                content: 'Mã kích hoạt <strong>' + $(curr).parents('tr').find('td[_code]').text() + '</strong> sẽ bị xóa.',
                buttons: {
                    OK: {
                        text: 'OK', btnClass: 'btn-blue', action: function action() {
                            var codes = {code: []};
                            codes.code.push($(curr).parents('tr').find('td[_code]').text());
                            $.ajax({
                                type: 'GET',
                                url: '/lives/del_active_code/' + sid + '?' + $.param(codes),
                                data: {},
                                dataType: "json",
                                beforeSend: function beforeSend() {
                                },
                                cache: true,
                                success: function success(rs) {
                                    if (rs.login && rs.login == 1) {
                                        $(curr).parents('tr').remove();
                                    } else if (rs.login && rs.login == 2) {
                                        window.location = rs.href;
                                    }
                                }
                            });
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, getActiveCode: function getActiveCode(page) {
            page = page ? page : 0;
            var student_group = $('#list_student_group').val();
            var code_tag_filter = $('#code_tag_filter').val();
            var filter_code = $('#filter-code-active').val();
            var status_filter = $('#status_filter_retail').val();
            var url = '/lives/get_active_code/' + clid;
            $('#active_class tbody').html('<tr><td colspan="11" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            var option_get = {
                limit_record: page,
                id_group: student_group,
                code_tag_filter: code_tag_filter,
                filter_code: filter_code,
                status_filter: status_filter
            };
            if ($('#list_student_group').children().length === 0) {
                option_get.get_filter_item = 1;
            }//$('#list_student_group').children().length
            $.get(url, option_get, function (coupons) {
                if (coupons.login && coupons.login == 1) {
                    LHM.common.pagination_site(coupons.count_record, coupons.limit, page, 'list-code-active-class');
                    $('.js-total-retail-card-record').html(coupons.total_record);
                    if (option_get.get_filter_item) {
                        var list_group = '<option value="">-- Tất cả nhóm học viên --</option>',
                            list_tag = '<option value="">-- Tất cả tag --</option>';
                        if (coupons.list_group) {
                            $.each(coupons.list_group, function (key, value) {
                                list_group += '<option value="' + value._id + '" >' + value.name + '</option>';
                            });
                        }
                        if (coupons.list_tag) {
                            $.each(coupons.list_tag, function (key, value) {
                                list_tag += '<option value="' + value + '" >' + value + '</option>';
                            });
                        }
                        $('#code_tag_filter').html(list_tag);
                        $('#list_student_group').html(list_group);
                    }
                    if (coupons && coupons.data) {
                        var btn_delete = !!coupons.delete_active_code;
                        var btn_edit = !!coupons.edit_active_code;
                        var coupons = coupons.data;
                        if (coupons.length > 0) {
                            var html = '';
                            for (var i = 0; i < coupons.length; i++) {
                                html += '<tr _id="' + coupons[i]._id + '">';
                                html += '<td _code>' + coupons[i]['code'] + '</td>';
                                html += '<td class="js-order"></td>';
                                html += '<td>' + (coupons[i]['user_id'].length > 0 ? "Đã sử dụng" : "Chưa sử dụng") + '</td>';
                                html += '<td>' + coupons[i]['product_name'] + '</td>';
                                html += '<td>' + moment.unix(coupons[i].createdAt.sec).format('DD/MM/YYYY H:mm:ss') + '</td>';
                                html += '<td>' + coupons[i]['expire_date'] + '</td>';
                                html += '<td>' + coupons[i].time_used + '</br>' + coupons[i]['user_name'] + '</br>' + coupons[i]['user_email'] + '</br>' + coupons[i]['user_phone'] + '</td>';
                                html += ' <td align="center">';
                                if (coupons[i]['user_name'] == '') {
                                    html += '           <ul class="list-unstyled acts-li">';
                                    if (btn_delete) {
                                        html += '<li><a data-id_code="' + coupons[i]._id + '" href="javascript:void(0);" class="btn-remove-code-active-course"><i class="fa fa-trash deletes"></i> Xóa</a></li>';
                                    }
                                    if (btn_edit) {
                                        html += '<li><a style="margin-right:5px" href="javascript:void(0);" data-id="' + coupons[i]._id + '" data-name_user="' + coupons[i].user_name + '" data-email_user="' + coupons[i].user_email + '" data-phone_user="' + coupons[i].user_phone + '" data-type-active="' + coupons[i].type_active + '" class="btn-update-active-code"><i class="fas fa-edit"></i> Sửa</li>';
                                    }
                                    html += '           </ul>';
                                }
                                html += ' </td>';
                                html += '</tr>';
                            }
                            var discountIds = coupons.map(function (c) {
                                return c._id;
                            });
                            $.post('/lives/get_orders_by_discounts', {
                                ids: discountIds,
                                _token: $.cookie('_token')
                            }).done(function (orders) {
                                if (orders && orders.length > 0) {
                                    orders.forEach(function (order) {
                                        var tr = $("tr[_id=" + order.discount_id + "]");
                                        tr.find('td.js-order').html("<a style='color:#007bff' target='_blank' href='/order-detail/" + order._id + "'>" + order._id + "</a>");
                                    });
                                }
                            });
                            $('#active_class tbody').html(html);
                        } else {
                            $('#active_class tbody').html('<tr><td colspan="11">Không có dữ liệu</td></tr>');
                        }
                    }
                } else if (coupons.login && coupons.login == 2) {
                    window.location = coupons.href;
                }
            });
        }, getQuizTest: function getQuizTest(page) {
            var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'normal';
            var tbody = $('#quiz_test');
            var urlApi = '/quiz/get_quiz_test';
            if (type === 'comprehensive_exam') {
                urlApi += '?type=1';
            }
            LHM.common.getListTable('quiz_test', urlApi, function (res) {
                var html;
                if (res.items && res.items.length) {
                    $.each(res.items, function (k, v) {
                        var action = '';
                        if (!v.isPDF) {
                            action += "<a href=\"javascript:;\" data-url=\"".concat(base_url, "/test/detail/").concat(v._id['$id'], "\" class=\"js_print_pdf mr-1\"><i class=\"fa fa-print\" aria-hidden=\"true\"></i></span> </a>");
                        }
                        var btn_url_quiz_test = "<a class=\"mr-1\" href=\"".concat(v.url_quiz_test, "\" target=\"_blank\"><i class=\"fa fa-eye\"></i></a>");
                        if (v.quiz_type) {
                            btn_url_quiz_test = "<a class=\"mr-1\" href=\"".concat(v.url_quiz_test, "?start_comprehensive_exam=1\" target=\"_blank\"><i class=\"fa fa-eye\"></i></a>");
                        }
                        action += "\n                            ".concat(btn_url_quiz_test, "\n                            <a style=\"margin-right:10px\" href=\"javascript:;\" onclick=\"LHM.common.xService('quiz.copyQuizTest','").concat(v._id['$id'], "', 'quiz_test_filter_submit', '#')\">\n                                <span class=\"fa fa-copy\"></span> \n                            </a>\n                            <a href=\"").concat(v.edit_link, "\" class=\"edit-quiz-test mr-1\"><span class=\"fa fa-edit\"></span> </a>\n                            <a href=\"javascript:void(0);\" class=\"delete-quiz-test\" onclick=\"LHM.quiz.deleteQuizTest('").concat(v._id['$id'], "', this)\"><span class=\"fa fa-trash\"></span> </a>\n                            ");
                        var hidePoint = '';
                        var hideTime = '';
                        var hidePointComplete = 'style=display:none;';
                        if ($('.quiz_comprehensive').hasClass('active')) {
                            hidePoint = 'style=display:none;';
                            hideTime = 'style=display:none;';
                            hidePointComplete = '';
                            v.quiz_quantity = v.quiz_child_count;
                        }
                        var btn_get_link = "<a class=\"edit-quiz-test btn btn-light\" id=\"url_quiz_test\" href=\"javascript:;\" onclick=\"LHM.common.copy_link('".concat(v.url_quiz_test, "','\u0110\xE3 sao ch\xE9p link!')\"> L\u1EA5y link</a>");
                        if (v.quiz_type === 1) {
                            btn_get_link = "<a class=\"edit-quiz-test btn btn-light\" id=\"url_quiz_test\" href=\"javascript:;\" onclick=\"LHM.common.copy_link('".concat(v.url_quiz_test, "?start_comprehensive_exam=1','\u0110\xE3 sao ch\xE9p link!')\"> L\u1EA5y link</a>");
                        }
                        html += "\n                            <tr data-id=\"".concat(v._id['$id'], "\">\n                                <td class=\"row\">\n                                    <div class=\"col-md-3\"><img src=\"").concat(v.thumbnail_url, "\" class=\"quiz-cover\"/></div>\n                                    <div class=\"col-md-9\">").concat(v.quiz_title, "</div>\n                                </td>\n                                <td ").concat(hideTime, ">").concat(v.quiz_time, "</td>\n                                <td ").concat(hidePointComplete, " class=\"text-center\">").concat(v.quiz_point_complete, "</td>\n                                <td>").concat(v.tags, "</td>\n                                <td ").concat(hidePoint, ">").concat(v.quiz_point_title, "</td>\n                                <td class=\"text-center\"><a href=\"").concat(v.add_quiz_to_test_link, "\" class=\"clicked-link-border\">").concat(v.quiz_quantity, "</a></td>\n                                <td>").concat(v.quiz_status, "</td>\n                                <td>").concat(v.createdAt, "</td>\n                                <td>").concat(btn_get_link, "</td>\n                                <td class=\"text-center\">").concat(action, "</td>\n                            </tr>\n                            ");
                    });
                } else {
                    html = '<tr><td colspan="9" style="text-align:center;">Không tồn tại dữ liệu</td></tr>';
                }
                tbody.html(html);
            });
        }, getCourseTest: function getCourseTest(page, filter) {
            page = page ? page : 0;
            var url = '/quiz/get_course_test';
            $('#list-course-student').show();
            $('#list-test-student').hide();
            $('#list-test-result').hide();
            $('#list_data_user_test_quiz').hide();
            $('#list_data_quiz_test_send_link').hide();
            $('#aff-order-filter li a').removeClass('active');
            $('#list_user_quiz_test').addClass('active');
            var email = $('#email_student_registed_filter').val();
            var group = $('#filter-user-group-quiz').val();
            var course_id = $('#list-select-course').val();
            $('#v-pills-test-student tbody').html('<tr><td colspan="5" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {
                limit_record: page,
                filter: filter,
                email: email,
                group: group,
                course_id: course_id
            }, function (res) {
                if (res.login && res.login == 1) {
                    LHM.common.pagination_site(res.count_record, res.limit, page, 'list_course_test');
                    $('#v-pills-test-student tbody').html('');
                    $('#export-quiz-lesson').attr('href', base_url + '/quiz/get_course_test?filter=1' + '&email=' + $('#email_student_registed_filter').val() + '&group=' + $('#filter-user-group-quiz').val() + '&course_id=' + $('#list-select-course').val() + '&export=1');
                    if (res.data.length) {
                        var html = '';
                        var quizs = res.data;
                        var filter = res.filter;
                        var email = res.email;
                        for (var i = 0; i < quizs.length; i++) {
                            html += '<tr id="' + quizs[i]._id[0]['$id'] + '" data-name="' + quizs[i]['name'] + '">';
                            html += '<td>' + quizs[i]['no'] + '</td>';
                            html += '<td>' + quizs[i]['name'] + '</td>';
                            html += '<td>' + quizs[i]['count_user'] + '</td>';
                            html += '<td>' + quizs[i]['quiz_test_total'] + '</td>';
                            html += '<td align="center" class="text-right"><a href="javascript:void(0);" id="get-course-test" class="detail-course-test" onclick="LHM.mnDashboard.getStudentTest(0,\'' + quizs[i]._id[0]['$id'] + '\',\'' + filter + '\',\'' + email + '\')"><span class="fa fa-info"></span> Chi tiết</a> </td>';
                            html += '</tr>';
                        }
                        $('#v-pills-test-student tbody').html(html);
                    } else {
                        $('#v-pills-test-student tbody').html('<tr><td class="nodata" colspan="5">Không có dữ liệu</td></tr>');
                    }
                } else if (res.login && res.login == 2) {
                    window.location = res.href;
                }
            });
        }, getQuizResultUser: function getQuizResultUser() {
            var url = '/quiz/getQuizResultUser';
            $('#table_list_result_user_edubit tbody').html('<tr><td colspan="5" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {}, function (res) {
                if (res.login && res.login == 1) {
                    $('#table_list_result_user_edubit tbody').html('');
                    if (res.data.length) {
                        var html = '';
                        $.each(res.data, function (k, v) {
                            var viewQuizResult = '<a title="Chi tiết" style="margin-right:5px;" href="' + v.link_quiz + '" target="_blank"> <i class="fas fa-eye"></i> </a>';
                            var pointViewQuizResult = '<a style="color:#fff;" title="Chi tiết" style="margin-right:5px;" href="javascript:;"> ' + v.point + ' </a>';
                            if (v.status_origin == 1) var status_result = 'bg-success'; else var status_result = 'bg-danger';
                            html += '<tr id="' + v._id['$id'] + '" data-name="' + v.quiz_name + '">';
                            html += ' <td>';
                            html += '   <div class="row">';
                            html += '       <div class="col-md-3"><img src="' + v.thumbnailurl + '" class="quiz-cover"/></div>';
                            html += '       <div class="col-md-9">';
                            html += '           <div>' + v.quiz_name + '</div>';
                            html += '       </div>';
                            html += '   </div>';
                            html += ' </td>';
                            html += '<td><span title="' + v.status + '" class="' + status_result + ' bg-result-test">' + pointViewQuizResult + '</span></td>';
                            html += '<td>' + v.time_join + '</td>';
                            html += '<td>' + v.time + '</td>';
                            html += '<td class="viewQuizResult text-center">' + viewQuizResult + '</td>';
                            html += '</tr>';
                        });
                        $('#table_list_result_user_edubit tbody').html(html);
                    } else {
                        $('#table_list_result_user_edubit tbody').html('<tr><td class="nodata" colspan="5">Không có dữ liệu</td></tr>');
                    }
                } else if (res.login && res.login == 2) {
                    window.location = res.href;
                }
            });
        }, getAllResultNew: function getAllResultNew() {
            $('#export-result-test').remove();
            var tbody = $('#list_all_result');
            LHM.common.getListTable('list_all_result', '/quiz/getAllResultNew', function (res) {
                tbody.html(res.html);
            });
        }, getAllResult: function getAllResult(page) {
            var qid = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
            var previewExport = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
            var viewNew = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
            if (viewNew === '1') {
                return LHM.mnDashboard.getAllResultNew(page);
            }
            var formFilter = $('#list_all_result_filter');
            page = page ? page : 0;
            if (previewExport == false) {
                previewExport = 0;
                $('#v-pills-test-result-student tbody').html('<tr><td colspan="9" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            } else {
                previewExport = 1;
            }
            var url = "/quiz/getAllResult?".concat(formFilter.serialize(), "&limit_record=").concat(page, "&previewExport=").concat(previewExport);
            $.get(url, function (res) {
                if (res.login && res.login == 1) {
                    if (res.show_multi_result === 1 && previewExport) {
                        LHM.mnDashboard.preViewQuizResult(res);
                    } else {
                        LHM.common.pagination_site(res.count_record, res.limit, page, 'list_all_result', null, true, null, res.total_record);
                        $('#v-pills-test-result-student tbody#list_all_result').html('');
                        if (res.data && _typeof(res.data) == 'object') {
                            res.data = $.map(res.data, function (value, index) {
                                return [value];
                            });
                        }
                        if (res.data.length) {
                            var html = '';
                            $('#export-result-test').attr('href', base_url + url + '&export=1');
                            $.each(res.data, function (k, v) {
                                var show_hide_result = '', viewQuizResult = '', pointViewQuizResult = '', action = '';
                                if (v.view_action) {
                                    if (v.type_test === 'special' || v.subtype) {
                                        if (v.subtype) {
                                            if (v.subtype === 'toeicKid') {
                                                viewQuizResult = '<a title="Chi tiết" href="/manage_result/' + v._id['$id'] + '" target="_blank"> <i class="fas fa-eye"></i> </a>';
                                            } else {
                                                viewQuizResult = '<a title="Chi tiết" href="/quiz/viewTeacherQuizTest/' + v._id['$id'] + '" target="_blank"> <i class="fas fa-eye"></i> </a>';
                                            }
                                        } else {
                                            viewQuizResult = '<a title="Chi tiết" href="/quiz_test/viewResult/' + v._id['$id'] + '" > <i class="fas fa-eye"></i> </a>';
                                        }
                                        pointViewQuizResult = '<a style="color:#fff;" href="javascript:;""> ' + v.point + ' </a>';
                                    } else {
                                        viewQuizResult = '<a title="Chi tiết" href="javascript:;" onclick="LHM.quiz.viewQuizResult(\'' + v._id['$id'] + '\')"> <i class="fas fa-eye"></i> </a>';
                                        if (v.data_child) {
                                            pointViewQuizResult = '<a style="color:#fff;" target="_blank" title="Chi tiết" href="/quiz/result/comprehensive/' + v._id['$id'] + '?type=view&manage=1"> ' + v.point + ' </a>';
                                        } else {
                                            pointViewQuizResult = '<a style="color:#fff;" title="Chi tiết" href="javascript:;" onclick="LHM.quiz.viewQuizResult(\'' + v._id['$id'] + '\')"> ' + v.point + ' </a>';
                                        }
                                    }
                                    if (v.show_hide_result) {
                                        show_hide_result = '<a title="Xem kết quả" href="javascript:;" onclick="LHM.quiz.viewListResult(\'' + v.qid['$id'] + '\',\'' + v.uid['$id'] + '\',\'' + v.lid + '\')"><i class="fa fa-clone text-danger"></i></a>';
                                    }
                                    action = '<a title="Xóa" href="javascript:;" onclick="LHM.quiz.removeTestResult(this,\'' + v._id['$id'] + '\')"><i class="fa fa-trash deletes"></i></a>';
                                } else {
                                    pointViewQuizResult = 'Đang làm bài';
                                }
                                var actionPrint = '';
                                if (v.status_score != '') {
                                    action = '<span class="badge badge-danger">Đã xóa</span>';
                                    viewQuizResult = '';
                                    pointViewQuizResult = v.point;
                                } else {
                                    actionPrint = '<a href="javascript:;" data-url="' + base_url + '/quiz/printPDFResult/' + v._id['$id'] + '" class="js_print_pdf"><i class="fa fa-print" aria-hidden="true"></i></a>';
                                }
                                if (v.total_text > 0 && v.status_score == '') {
                                    var total_text = '<td class="text-center"><a href="javascript:;" class="text-primary" onclick="LHM.quiz.updateTestStudentLink(\'' + v._id['$id'] + '\')"><i class="fal fa-envelope-open-text"></i></a></td>';
                                    if (v.check_update_test_text) {
                                        var check_update_test_text = '<td><i class="fa fa-check" style="color:green"></i> Đã chấm điểm</td>';
                                    } else {
                                        var check_update_test_text = '<td></td>';
                                    }
                                } else {
                                    var total_text = '<td></td>';
                                    var check_update_test_text = '<td></td>';
                                }
                                if (v.status_origin == 1) var status_result = 'bg-success'; else var status_result = 'bg-danger';
                                var pass_per_total = "", result_last_test = "";
                                if (res.show_multi_result === 1) {
                                    pass_per_total = "<td><button onclick=\"LHM.quiz.viewListResultByUserIdQuizId('".concat(v.qid['$id'], "','").concat(v.uid['$id'], "','')\" class=\"btn btn-info\">").concat(v.unit_pass, "/").concat(v.unit_total, "</button></td>");
                                } else {
                                    result_last_test = "<td><span title=\"".concat(v.status, "\" class=\"").concat(status_result, " bg-result-test\">").concat(pointViewQuizResult, "</span></td>");
                                }
                                html += '<tr id="' + v._id['$id'] + '" data-name="' + v.quiz_name + '">';
                                html += '<td>' + v.name + '</br>' + v.email + '<br>' + v.phone + '</td>';
                                if (res.show_unit) {
                                    html += '<td>' + v.unit + '</td>';
                                }
                                html += '<td>' + v.quiz_name + '</td>';
                                html += pass_per_total + result_last_test;
                                html += '<td>' + v.time_join + '</td>';
                                html += '<td>' + v.time + '</td>';
                                html += total_text;
                                html += check_update_test_text;
                                if (v.data_child) {
                                    viewQuizResult = '<a target="_blank" title="Chi tiết" href="/quiz/result/comprehensive/' + v._id['$id'] + '?type=view&manage=1" > <i class="fas fa-eye"></i> </a>';
                                }
                                html += '<td class="viewQuizResult text-center d-flex justify-content-center" style="column-gap: 10px">' + actionPrint + show_hide_result + viewQuizResult + action + '</td>';
                                html += '</tr>';
                            });
                            $('#v-pills-test-result-student tbody').html(html);
                        } else {
                            $('#v-pills-test-result-student tbody').html('<tr><td class="nodata" colspan="9">Không có dữ liệu</td></tr>');
                        }
                    }
                } else if (res.login && res.login == 2) {
                    window.location = res.href;
                }
            });
        }, preViewQuizResult: function preViewQuizResult(response) {//console.log($.cookie('_token'))
            var content = "<h2>Danh Sach</h2>";
            content = "\n<form action=\"/quiz/exportDataQuizCustomizeResult\" method=\"post\" id=\"form_data_custom_quiz\">\n<input name=\"_token\" type=\"hidden\" value=\"".concat($.cookie('_token'), "\" />\n<table class=\"table bg-white\"><thead>\n                                <tr class=\"filters \">\n                                    <th><input type=\"checkbox\" id=\"select_all\" checked>\n                                    </th>\n                                    <th>H\u1ECD t\xEAn</th>\n                                    <th>\u0110\u1EC1 thi</th>\n                                    <th>S\u1ED1 l\u1EA7n \u0111\u1EA1t / T\u1ED5ng s\u1ED1 l\u1EA7n l\xE0m</th>\n                                    <th>Thi l\xFAc</th>\n                                    <th>Th\u1EDDi gian l\xE0m b\xE0i</th>\n                                </tr>\n                                </thead>");
            response.data.forEach(function (v, index) {
                content += "<tr data-id=\"".concat(v._id['$id'], "\">\n<td><input type=\"checkbox\" id=\"quiz_result_id_").concat(v._id['$id'], "\" checked name=\"quiz_result_id[]\" value=\"").concat(v._id['$id'], "\"></td>\n<td><label for=\"quiz_result_id_").concat(v._id['$id'], "\">").concat(v.name, " </br>").concat(v.email, "<br>").concat(v.phone, " </label></td>\n<td> ").concat(v.quiz_name, "</td>\n<td><button type=\"button\" onclick=\"LHM.quiz.viewListResultByUserIdQuizId('").concat(v.qid['$id'], "','").concat(v.uid['$id'], "','')\" class=\"btn btn-info\">").concat(v.unit_pass, "/").concat(v.unit_total, "</button></td>\n<td> ").concat(v.time_join, "</td>\n<td> ").concat(v.time, "</td>\n</tr>");
            });
            content += "</table></form>";//content += `<button class="btn btn-danger" onclick="LHM.mnDashboard.btnSubmitExport()">Export Now</button>`
            content += "<button class=\"btn btn-primary\" onclick=\"LHM.mnDashboard.updateHideUnchecked()\"><i class=\"fa fa-spinner\" aria-hidden=\"true\"></i> C\u1EADp nh\u1EADt</button>";//$('#v-pills-test-result-student .table-responsive').html(content);
            $.alert({
                title: 'Export Preview',
                columnClass: "col-sm-12",
                content: content,
                type: 'red',
                buttons: {
                    formSubmit: {
                        text: 'Export', btnClass: 'btn-success', action: function action() {
                            if ($("input[name=\"quiz_result_id[]\"]").is(':checked')) {
                                $("#form_data_custom_quiz").submit();
                            } else {
                                LHM.common.notify(null, 'danger', 'Bạn chưa chọn dữ liệu để export');
                                return false;
                            }
                        }
                    }, close: {text: 'Hủy'}
                },
                onContentReady: function onContentReady() {
                    $('#form_data_custom_quiz').on('click', '#select_all', function (event) {
                        if (this.checked) {
                            $('#form_data_custom_quiz :checkbox').each(function () {
                                this.checked = true;
                            });
                        } else {
                            $('#form_data_custom_quiz :checkbox').each(function () {
                                this.checked = false;
                            });
                        }
                    });
                }
            });
        }, updateHideUnchecked: function updateHideUnchecked() {
            $('#form_data_custom_quiz :checkbox').each(function () {
                if (this.checked == false) {
                    $("#form_data_custom_quiz tr[data-id=\"".concat(this.value, "\"]")).hide('slow');
                }
            });
        }, btnSubmitExport: function btnSubmitExport(page) {
            var qid = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
            if ($("input[name=\"quiz_result_id[]\"]").is(':checked')) {
                $("#form_data_custom_quiz").submit();
            } else {
                LHM.common.notify(null, 'danger', 'Bạn chưa chọn dữ liệu để export');
                return false;
            }
        }, getAllResultSurvey: function getAllResultSurvey(page) {
            var qid = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
            page = page ? page : 0;
            var formFilter = $('#filter-result-survey').serialize() + "&_token=".concat($.cookie('_token'), "&limit_record=").concat(page);
            var url = '/quiz/getAllResultSurvey';
            $('#list_all_result_survey').html('<tr><td colspan="9" class="text-center"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url + "?".concat(formFilter)).always(function (res) {
                var record = 0, limit = 20, html = '';
                if (res.items && res.items.length > 0) {
                    record = res.count_record;
                    limit = res.limit;
                    $.each(res.items, function (k, v) {
                        html += "\n                            <tr>\n                                <td>".concat(v.full_name, "<br/>").concat(v.email, "</td>\n                                <td>").concat(v.test_title, "</td>\n                                <td>\n                                    <span class=\"bg-info bg-result-test\">").concat(v.correct, "/").concat(v.total_quiz, "</span>\n                                </td>\n                                <td>").concat(v.start_time, "</td>\n                                <td>").concat(v.time_learn, "</td>\n                                <td class=\"text-center\">").concat(v.count_word, "</td>\n                                <td>").concat(v.time_reading, "</td>\n                                <td class=\"text-center\">").concat(v.rei, "</td>\n                                <td class=\"text-center\">\n                                    <a href=\"javascript:;\" title=\"Xem chi ti\u1EBFt\" class=\"mr-2\" onclick=\"LHM.quiz.viewQuizResult('").concat(v._id.$id, "', '1')\"><i class=\"fas fa-eye\"></i></a>\n                                    <a href=\"javascript:;\" title=\"X\xF3a\" onclick=\"LHM.common.xService('quiz/removeResultSurvey', '").concat(v._id.$id, "', 'v-pills-result-survey-tab', '#', 'X\xF3a b\xE0i thi', 'B\u1EA1n c\xF3 ch\u1EAFc ch\u1EAFn mu\u1ED1n x\xF3a b\xE0i thi n\xE0y?')\">\n                                    <i class=\"fa fa-trash\"></i>\n                                    </a>\n                                </td>\n                            </tr>\n                        ");
                    });
                } else {
                    html = '<tr><td colspan="9" class="text-center">Không có dữ liệu</td></tr>';
                }
                LHM.common.pagination_site(record, limit, page, 'list_all_result_survey');
                $('#list_all_result_survey').html(html);
            });
        }, getStudentTest: function getStudentTest(page, cid, filter, email) {
            page = page ? page : 0;
            var url = '/quiz/get_student_test';
            $('#list-course-student').hide();
            $('#list-test-student').show();
            $('#list_data_user_test_quiz').hide();
            $('#list_data_user_quiz_test').show();
            $('#list_data_quiz_test_send_link').hide();
            $('#list-test-result').hide();
            $('#overview-course-test').html('Khóa học: ' + $('#' + cid).attr('data-name') + '</br>');
            $('#list_student_test').html('<tr><td colspan="6" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {limit_record: page, cid: cid, filter: filter, email: email}, function (res) {
                if (res.login && res.login == 1) {
                    var data_filter = {cid: cid, filter: filter, email: email};
                    LHM.common.pagination_site(res.count_record, res.limit, page, 'list_student_test', data_filter);
                    $('.btn-back-to-test-student').attr('data-page', page);
                    $('#list_student_test').html('');
                    $('#hidden_cid').val(cid);
                    $('#hidden_filter').val(filter);
                    $('#hidden_filter_test_student').val(filter);
                    $('#hidden_email').val(email);
                    if (res.data.length) {
                        var html = '';
                        var quizs = res.data;
                        for (var i = 0; i < quizs.length; i++) {
                            if (quizs[i]['check_update_test_text']) {
                                var check_update_test_text = '<td><i class="fa fa-check" style="color:green"></i> Đã chấm điểm</td>';
                            } else {
                                var check_update_test_text = '<td></td>';
                            }
                            html += '<tr id="' + quizs[i]._id['$id'] + '" data-name="' + quizs[i]['name'] + '">';
                            html += '<td>' + quizs[i]['no'] + '</td>';
                            html += '<td>' + quizs[i]['name'] + '</td>';
                            html += '<td>' + quizs[i]['email'] + '</td>';
                            html += '<td>' + quizs[i]['total_test'] + '</td>';
                            html += '<td>' + quizs[i]['total_score'] + '</td>';
                            html += check_update_test_text;
                            html += '<td align="center"><a href="javascript:void(0);" class="detail-course-test" onclick="LHM.mnDashboard.getTestResult(0,\'' + quizs[i]._id['$id'] + '\',\'' + cid + '\')"><span class="fa fa-info"></span> Chi tiết</a> </td>';
                            html += '</tr>';
                        }
                        $('#list_student_test').html(html);
                    } else {
                        $('#list_student_test').html('<tr><td class="nodata" colspan="6">Không có dữ liệu</td></tr>');
                    }
                } else if (res.login && res.login == 2) {
                    window.location = res.href;
                }
            });
        }, getQuizTestLink: function getQuizTestLink(page, filter) {
            page = page ? page : 0;
            var url = '/quiz/get_quiz_test_link';
            $('#list-course-student').hide();
            $('#list-test-student').hide();
            $('#list_data_user_test_quiz').hide();
            $('#list_data_quiz_test_send_link').show();
            $('#list_data_user_quiz_test').hide();
            $('#list-test-result').hide();
            var email = $('#filter_email_student_registed').val();
            var group = $('#filter-user-group-quiz-test').val();
            $('#list_quiz_test_link').html('<tr><td colspan="4" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {
                limit_record: page, filter: filter, email: email, group: group// cid: cid
            }, function (res) {
                if (res.login && res.login == 1) {
                    LHM.common.pagination_site(res.count_record, res.limit, page, 'list_quiz_test_link', {filter: filter});
                    $('#list_quiz_test_link').html('');
                    $('#export-quiz-lesson-test').attr('href', base_url + '/quiz/get_quiz_test_link?filter=1' + '&email=' + $('#filter_email_student_registed').val() + '&group=' + $('#filter-user-group-quiz-test').val() + '&export=1');
                    $('#hidden_filter_quiz_test_link').val(filter);// $('#hidden_email_quiz_test_link').val(email);
                    if (res.data.length) {
                        var html = '';
                        var quizs = res.data;
                        for (var i = 0; i < quizs.length; i++) {
                            html += '<tr id="' + quizs[i]._id['$id'] + '" data-name="' + quizs[i]['quiz_title'] + '">';
                            html += '<td>' + quizs[i]['no'] + '</td>';
                            html += '<td>' + quizs[i]['quiz_title'] + '</td>';
                            html += '<td>' + quizs[i]['count_quiz'] + '</td>';
                            html += '<td align="center"><a href="javascript:void(0);" class="detail-course-test" onclick="LHM.mnDashboard.getStudentTestQuiz(0,\'' + quizs[i]._id['$id'] + '\')"><span class="fa fa-info"></span> Chi tiết</a> </td>';
                            html += '</tr>';
                        }
                        $('#list_quiz_test_link').html(html);
                    } else {
                        $('#list_quiz_test_link').html('<tr><td class="nodata" colspan="4">Không có dữ liệu</td></tr>');
                    }
                } else if (res.login && res.login == 2) {
                    window.location = res.href;
                }
            });
        }, getStudentTestQuiz: function getStudentTestQuiz(page, qid) {
            page = page ? page : 0;
            var url = '/quiz/get_data_user_quiz_test';
            $('#list-course-student').hide();
            $('#list-test-student').hide();
            $('#list_data_user_quiz_test').hide();
            $('#list_data_user_test_quiz').show();
            $('#list_data_quiz_test_send_link').hide();
            $('.btn-back-to-quiz-test').attr('data-qid', qid);
            $('#list-test-result').hide();
            $('#overview-user-quiz-test').html('Đề thi: ' + $('#' + qid).attr('data-name'));
            $('#list_user_test_quiz').html('<tr><td colspan="9" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {limit_record: page, qid: qid}, function (res) {
                if (res.login && res.login == 1) {
                    LHM.common.pagination_site(res.count_record, res.limit, page, 'list_user_test_quiz', {qid: qid});
                    $('#list_user_test_quiz').html('');
                    if (res.data.length) {
                        var html = '';
                        var quizs = res.data;
                        for (var i = 0; i < quizs.length; i++) {
                            var viewQuizResult = '<a href="javascript:;" onclick="LHM.quiz.viewQuizResult(\'' + quizs[i]._id + '\')"> <i class="fas fa-eye"></i> Chi tiết</a>';
                            var action = '<a href="javascript:;" onclick="LHM.quiz.removeTestResult(this,\'' + quizs[i]._id + '\')"><i class="fa fa-trash deletes"></i> Xóa</a>';
                            if (quizs[i]['status_score'] != '') {
                                action = '<span class="badge badge-danger">Đã xóa</span>';
                                viewQuizResult = '';
                            }
                            if (quizs[i]['total_text'] > 0 && quizs[i]['status_score'] == '') {
                                var total_text = '<td><a href="javascript:;" style="color:blue;" onclick="LHM.quiz.updateTestStudentLink(\'' + quizs[i].uid['$id'] + '\',\'' + qid + '\',\'' + quizs[i]._id['$id'] + '\' )">' + quizs[i]['total_text'] + ' câu</a></td>';
                                if (quizs[i]['check_update_test_text']) {
                                    var check_update_test_text = '<td><i class="fa fa-check" style="color:green"></i> Đã chấm điểm</td>';
                                } else {
                                    var check_update_test_text = '<td></td>';
                                }
                            } else {
                                var total_text = '<td></td>';
                                var check_update_test_text = '<td></td>';
                            }
                            html += '<tr id="' + quizs[i]._id['$id'] + '" data-point="" data-correct="" data-fail="" >';
                            html += '<td>' + quizs[i]['no'] + '</td>';
                            html += '<td>' + quizs[i]['name'] + '</td>';
                            html += '<td>' + quizs[i]['email'] + '</td>';
                            html += '<td>' + quizs[i]['point'] + ' (' + quizs[i]['status'] + ')</td>';
                            html += '<td>' + quizs[i]['time'] + '</td>';
                            html += total_text;
                            html += check_update_test_text;
                            html += '<td class="viewQuizResult">' + viewQuizResult + '</td>';
                            html += '<td>' + action + '</td>';
                            html += '</tr>';
                        }
                        $('#list_user_test_quiz').html(html);
                    } else {
                        $('#list_user_test_quiz').html('<tr><td class="nodata" colspan="9">Không có dữ liệu</td></tr>');
                    }
                } else if (res.login && res.login == 2) {
                    window.location = res.href;
                }
            });
        }, getTestResult: function getTestResult(page, uid, cid) {
            page = page ? page : 0;
            var url = '/quiz/get_test_result';
            $('#list-course-student').hide();
            $('#list-test-student').hide();
            $('#list-test-result').show();
            $('#list_data_user_test_quiz').hide();
            $('.btn-back-to-test-student').attr('data-cid', cid);
            $('#overview-student-test').html('Khóa học: ' + $('#' + cid).attr('data-name') + '</br> Học viên: ' + $('#' + uid).attr('data-name'));
            $('#list_test_result').html('<tr><td colspan="9" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {limit_record: page, uid: uid, cid: cid}, function (res) {
                if (res.login && res.login == 1) {
                    LHM.common.pagination_site(res.count_record, res.limit, page, 'list_test_result', {
                        uid: uid,
                        cid: cid
                    });
                    $('#list_test_result').html('');
                    if (res.data.length) {
                        var html = '';
                        var quizs = res.data;
                        for (var i = 0; i < quizs.length; i++) {
                            var viewQuizResult = '<a href="javascript:;" onclick="LHM.quiz.viewQuizResult(\'' + quizs[i].qid['$id'] + '\',\'' + quizs[i].lid['$id'] + '\',\'test\',\'' + uid + '\',\'' + quizs[i].skip + '\',\'' + quizs[i].fail + '\',\'' + quizs[i].correct + '\')"> <i class="fas fa-eye"></i> Chi tiết</a>';
                            var action = '<a href="javascript:;" onclick="LHM.quiz.removeTestResult(this,\'' + quizs[i]._id['$id'] + '\')"><i class="fa fa-trash deletes"></i> Xóa</a>';
                            if (quizs[i]['status_score'] != '') {
                                action = '<span class="badge badge-danger">Đã xóa</span>';
                                viewQuizResult = '';
                            }
                            if (quizs[i]['total_text'] > 0 && quizs[i]['status_score'] == '') {
                                var total_text = '<td><a href="javascript:;" style="color:blue;" onclick="LHM.quiz.updateTestStudent(\'' + quizs[i].quiz_answer_id['$id'] + '\',\'' + quizs[i]._id['$id'] + '\',\'' + uid + '\',\'' + cid + '\')">' + quizs[i]['total_text'] + ' câu</a></td>';
                                if (quizs[i]['check_update_test_text']) {
                                    var check_update_test_text = '<td><i class="fa fa-check" style="color:green"></i> Đã chấm điểm</td>';
                                } else {
                                    var check_update_test_text = '<td></td>';
                                }
                            } else {
                                var total_text = '<td></td>';
                                var check_update_test_text = '<td></td>';
                            }
                            html += '<tr id="' + quizs[i]._id['$id'] + '" data-name="' + quizs[i]['name'] + '" data-point="" data-correct="" data-fail="">';
                            html += '<td>' + quizs[i]['no'] + '</td>';
                            html += '<td>' + quizs[i]['name'] + '</td>';
                            html += '<td>' + quizs[i]['type'] + '</td>';
                            html += '<td>' + quizs[i]['point'] + ' (' + quizs[i]['status'] + ')</td>';
                            html += '<td>' + quizs[i]['time'] + '</td>';
                            html += total_text;
                            html += check_update_test_text;
                            html += '<td class="viewQuizResult">' + viewQuizResult + '</td>';
                            html += '<td>' + action + '</td>';
                            html += '</tr>';
                        }
                        $('#list_test_result').html(html);
                    } else {
                        $('#list_test_result').html('<tr><td class="nodata" colspan="9">Không có dữ liệu</td></tr>');
                    }
                } else if (res.login && res.login == 2) {
                    window.location = res.href;
                }
            });
        }, checker_discount: function checker_discount(discount, check) {
            var status = '';
            if (check == 'status') {
                if (discount.user_id && discount.user_id.length) {//so nguoi su dung
                    var users_use = discount.user_id.length;
                    status = '- Có <strong>' + users_use + '</strong> học viên sử dụng.<br>';
                } else status = '- Chưa sử dụng.<br>';//xác định mã thẻ còn hay đã hết ngày sử dụng
                if (discount.expired) {
                    if (discount.expired.type_exp == 'all') {
                        status += '- Sử dụng đến khi khóa học khai giảng.<br>';
                    } else {
                        status += '- Sử dụng trong khoảng thời gian.<br>';/*vả start = moment(discount.expired.start)
                        var end = moment(discount.expired.end)

                        vả duration_start = moment.duration(start.diff(moment()))
                        var duration_end = moment.duration(end.diff(moment()))
                        var start_days_left = Math.round(duration_start.asDays())
                        var end_days_left = Math.round(duration_end.asDays())
                        console.log(duration_start.asDays(), duration_end.asDays())

                        if (start_days_left > 0)
                            status += '- Còn <strong>' + (start_days_left + 1) + '</strong> ngày mới đến ngày sử dụng.<br>'
                        else if (end_days_left < 0)
                            status += '- Đã hết hạn sử dụng.<br>'
                        else
                            status += '- Còn <strong>' + (end_days_left + 1) + '</strong> ngày để sử dụng.<br>'*/
                    }
                }//xác định số người sử dụng mã đã đến giới hạn
                if (discount.user_id) {
                    if (discount.limited.type_limit == 'once') {
                        if (discount.user_id.length) {
                            status += '- Mã đã đủ giới hạn <strong>1</strong> học viên sử dụng.<br>';
                        }
                    } else {
                        if (discount.user_id.length >= discount.limited.max) {
                            status += '- Mã đã đủ giới hạn <strong>' + discount.limited.max + '</strong> học viên sử dụng.<br>';
                        }
                    }
                }
            } else if (check == 'property') {//status += '- Group ID: <strong>#' + discount.group_id + '</strong>.<br>'
//status += '- Áp dụng cho ID khóa học: <strong>#' + discount.course_code + '</strong>.<br>'
                if (discount.expired) {
                    if (discount.expired.type_exp == 'all') {
                        status += '- Sử dụng đến ngày khai giảng.<br>';
                    } else {
                        status += '- Sử dụng trong khoảng thời gian <strong>(' + moment(discount.expired.start).format('DD/MM/YYYY') + ' - ' + moment(discount.expired.end).format('DD/MM/YYYY') + ')</strong>.<br>';
                    }
                }
                if (discount.limited.type_limit == 'once') {
                    status += '- Mã chỉ dùng cho <strong>1</strong> học viên.<br>';
                } else {
                    status += '- Mã dùng cho <strong>' + discount.limited.max + '</strong> học viên.<br>';
                }
            }
            return status;
        }, getUsers: function getUsers(page, total_return) {
            page = page ? page : 0;
            var url = base_url + '/id/updateUser/list';
            $('#dashboard #v-pills-users tbody').html('<tr><td colspan="9" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {
                sid: sid,
                limit_record: page,
                email_name_phone: $('#name_student_user_site').val()
            }, function (users) {
                if (users.login && users.login == 1) {
                    LHM.common.pagination_site(users.count_record, users.limit, page, 'list_schedule_users');
                    $('#dashboard #users tbody').html('');
                    if (users && users.data) {
                        var login_owner = users.login_owner;
                        var limit = users.limit;
                        var users = users.data;
                        if (users.length > 0) {
                            var html = '';
                            for (var i = 0; i < users.length; i++) {
                                window[users[i]['_id']['$id']] = users[i]['info'];
                                var str_position = '';
                                if (users[i]['position']) str_position = Object.keys(users[i]['position']).join('-');
                                html += '<tr class="item-user" id="' + users[i]['_id']['$id'] + '"data-photo="' + users[i]['photo'] + '" data-path="' + users[i]['avatar'] + '">';
                                html += '<td>' + (page * limit + i + 1) + '</td>';
                                html += '<td alt="facebook" style="display:none;">' + (users[i]['facebook'] || '') + '</td>';
                                html += '<td alt="youtube" style="display:none;">' + (users[i]['youtube'] || '') + '</td>';
                                html += '<td alt="f">' + (users[i]['fullname'] || '') + '</td>';
                                html += '<td alt="pl">' + (users[i]['data_position_text'] || '') + '</td>';
                                html += '<td alt="g" style="display:none;">' + (users[i]['general_names'] || ' ') + '</td>';
                                html += '<td alt="e">' + (users[i]['email'] || '-') + '</td>';
                                html += '<td alt="p">' + (users[i]['phone'] || '-') + '</td>';
                                if (!users[i]['is_owner']) {
                                    if (users[i]['roles_and_edit']) {
                                        html += '           <td><a href="javascript:;" class="btn-apply-permission" ><i class="far fa-check-square"></i> Phân quyền</a></td>';
                                    } else {
                                        html += '           <td></td>';
                                    }
                                    html += ' <td align="center">';
                                    html += '           <ul class="list-unstyled acts-li">';
                                    if (users[i]['roles_and_edit']) {
                                        html += '<li><a href="javascript:;" onclick=LHM.mnDashboard.removeUser(this,"' + users[i]['_id']['$id'] + '")><i class="fa fa-trash deletes"></i> Xóa</a></li>';
                                        html += '           <li><a href="javascript:;" class="btn-edit-user" data-position="' + str_position + '"><i class="fas fa-edit"></i> Sửa</a></li>';
                                    } else {
                                        html += '<li></li>';
                                        html += '<li></li>';
                                    }
                                    if (users[i]['is_teacher'] && users[i]['roles_and_edit']) {
                                        html += '<li><a href="javascript:;" onclick=LHM.mnDashboard.infoTeacher(this,"' + users[i]['_id']['$id'] + '")><i class="fas fa-info-circle"></i> Hồ sơ</a></li>';
                                    }
                                    html += '           </ul>';
                                    html += ' </td>';
                                    if (users[i]['switch']) html += '<td><a href="' + users[i]['switch'] + '" target="_blank" title="Switch nhân viên"><i class="fas fa-sign-in-alt"></i></a></td>';
                                } else {
                                    html += '<td></td>';
                                    if (login_owner) {
                                        html += '<td align="center">';
                                        html += ' <ul class="list-unstyled acts-li">';
                                        html += '    <li><a href="javascript:;" class="btn-edit-user" data-position="' + str_position + '" data-owner="1"><i class="fas fa-edit"></i> Sửa</a></li>';
                                        html += '    <li><a href="javascript:;" onclick=LHM.mnDashboard.infoTeacher(this,"' + users[i]['_id']['$id'] + '")><i class="fa fa-info-circle"></i> Hồ sơ</a></li>';
                                        html += ' </ul>';
                                        html += '</td>';
                                    } else {
                                        html += '<td></td>';
                                        html += '<td></td>';
                                    }
                                }
                                html += '</tr>';
                            }
                            $('#dashboard #v-pills-users tbody').html(html);
                        } else {
                            $('#dashboard #v-pills-users tbody').html('<tr><td colspan="9">Không có dữ liệu</td></tr>');
                        }
                    }
                } else if (users.login && users.login == 2) {
                    window.location = users.href;
                }
            });
        }, removeUser: function removeUser(current, _id) {
            var val_post = {_token: $.cookie('_token'), user_id: _id, site_id: sid};
            $.confirm({
                title: 'Xóa User', content: 'Bạn có muốn xóa user này?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/id/updateUser/remove',
                            data: val_post,
                            dataType: 'json',
                            success: function success(_success7) {
                                if (_success7.login && _success7.login == 1) {
                                    if (!_success7.error) {
                                        $(current).closest("tr").remove();
                                        if ($('#list_schedule_users tr').length == 0) {
                                            $('#list_schedule_users').html('<tr><td colspan="5">Không có dữ liệu</td></tr>');
                                        }
                                        LHM.common.notify(null, 'success', 'Xóa thành công');
                                    }
                                } else if (_success7.login && _success7.login == 2) {
                                    window.location = _success7.href;
                                }
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }, infoTeacher: function infoTeacher(current, _id) {
            var id = $(current).parents('.item-user').attr('id');
            var gen_name = $(current).parents('.item-user').find('[alt=g]').text();
            var facebook = $(current).parents('.item-user').find('[alt=facebook]').text();
            var youtube = $(current).parents('.item-user').find('[alt=youtube]').text();
            var contents = '' + '<form id="edit-user" method="POST" enctype="multipart/form-data">' + '<div class="form-group">' + '<label>Danh xưng : </label>' + '<input type="text" placeholder="Danh xưng" name="general_names" value="' + gen_name + '" class="form-control" required />' + '</div>' + '<div class="form-group">' + '<label>Link Facebook : </label>' + '<input type="text" placeholder="Link Facebook" name="facebook" value="' + facebook + '" class="form-control" required />' + '<div class="block-error-facebook area-error"></div>' + '</div>' + '<div class="form-group">' + '<label>Link Youtube : </label>' + '<input type="text" placeholder="Link Youtube" name="youtube" value="' + youtube + '" class="form-control" required />' + '<div class="block-error-youtube area-error"></div>' + '</div>' + '<div class="form-group">' + '<label>Thông tin giảng viên : </label>' + '<textarea id="info_teacher" cols="100" name="info_teacher" rows="10">Nhập thông tin giảng viên</textarea>' + '</div>' + '<p class="error" style="color: red;"></p>' + '</div>' + '</form>' + '<div class="invalid-feedback"></div>';
            $.confirm({
                title: 'Hồ sơ giảng viên',
                columnClass: 'col-md-6',
                content: contents,
                type: 'blue',
                scrollToPreviousElement: false,
                scrollToPreviousElementAnimate: false,
                onContentReady: function onContentReady() {
                    LHM.common.ckeditor('info_teacher');
                    CKEDITOR.instances.info_teacher.setData(window[id]);
                },
                buttons: {
                    formSubmit: {
                        text: 'OK',
                        btnClass: 'btn-blue btn-update-teacher-popup',
                        action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').hide();
                            CKEDITOR.instances.info_teacher.updateElement();
                            var form = _this.$content.find('form').serialize();
                            form += '&_token=' + $.cookie('_token') + '&id=' + id;
                            $('.btn-update-teacher-popup').html('<i class="fas fa-spinner fa-spin"></i> OK');
                            $('.btn-update-teacher-popup').attr('disabled', true);
                            $.post('/id/updateUser/update_teacher', form, function (rs) {
                                if (rs.login && rs.login == 1) {
                                    $('.btn-update-teacher-popup').html('OK');
                                    $('.btn-update-teacher-popup').removeAttr('disabled');
                                    if (rs.error) {
                                        _this.$content.find('.area-error').html('');
                                        $.each(rs.msg, function (index, el) {
                                            _this.$content.find('.block-error-' + index).html('<p class="text-danger">' + el + '</p>');
                                        });
                                    } else {
                                        LHM.mnDashboard.init('users');
                                        LHM.common.notify(null, 'success', 'Cập nhật thành công');
                                        _this.close();
                                    }
                                } else if (rs.login && rs.login == 2) {
                                    window.location = rs.href;
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, getSettingPlugins: function getSettingPlugins() {
            var url = base_url + '/sites/getSettingPlugins?s=' + sid;
            $.post(url, {_token: $.cookie('_token')}, function (data) {
                if (data.login && data.login == 1) {
                    $('#zoom_account_id').val(data.zoom_account_id);
                    $('#zoom_client_id').val(data.zoom_client_id);
                    $('#zoom_client_secret').val(data.zoom_client_secret);
                    $('#zoom_sdk_id').val(data.zoom_sdk_id);
                    $('#zoom_sdk_secret').val(data.zoom_sdk_secret);
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, getInfoApi: function getInfoApi() {
            var url = base_url + '/sites/getInfoApi?s=' + sid;
            $.post(url, {_token: $.cookie('_token')}, function (data) {
                if (data.login && data.login == 1) {
                    $('#api-form #token_key').val(data.token);
                    $('#api-form .btn-get-token-key').data('time', data.time);
                    $('#api-form .btn-get-token-key').data('token', data.token);
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, getInfoAutomation: function getInfoAutomation() {
            var url = base_url + '/sites/getInfoAutomation?s=' + sid;
            $.post(url, {_token: $.cookie('_token')}, function (data) {
                if (data.login && data.login == 1) {
                    $('#form-update-token #token_str').val(data.token);
                    $('#form-update-weHookUrl #web_hook_url').val(data.web_hook_url);
                    $('#form-update-weHookUrlV2 #web_hook_url_v2').val(data.web_hook_url_v2);
                    if (data.active_sync_web_hook) {
                        $('#v-pills-auto input[name="active_sync_web_hook"]').prop("checked", true);
                        $('#form-update-weHookUrl').show();
                    }
                    if (data.active_sync_ultramailer) {
                        $('#v-pills-auto input[name="active_sync_ultramailer"]').prop("checked", true);
                        $('#form-update-token').show();
                    }
                    if (data.time_sync_ultramailer) {
                        $('#form-update-token .time-end').html(data.time_sync_ultramailer).parent().show();
                    }
                    if (data.time_sync_web_hook) {
                        $('#form-update-weHookUrl .time-end').html(data.time_sync_web_hook).parent().show();
                    }
                    if (data.web_hook_url_v2) {
                        $('#v-pills-auto input[name="active_sync_web_hook_v2"]').prop("checked", true);
                        $('#form-update-weHookUrlV2').show();
                    }
                    if (data.active_sync_ybai) {
                        $('#v-pills-auto input[name="active_sync_ybai"]').prop("checked", true);
                        $('#form-update-ybai-info #ybai_access_key').val(data.ybai_access_key);
                        $('#form-update-ybai-info #ybai_secret_key').val(data.ybai_secret_key);
                        $('#form-update-ybai-info').show();
                    }
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, getInfoDomain: function getInfoDomain() {
            var url = base_url + '/sites/getInfoDomain?s=' + sid;
            $.post(url, {_token: $.cookie('_token')}, function (data) {
                if (data.login && data.login == 1) {
                    $('#form-ssl input[name=domain]').val(data.domain);
                    $('#form-ssl input[name=domain_file]').val(data.domain_file);
                    $('#form-ssl input[name=subdomain]').val(data.subdomain);
                    $('#setting .customize').data('domain', data.subdomain);
                    if (data.domain) {
                        $('#file-domain-addon').text('.' + LHM.mnDashboard.findRootDomain(data.domain));
                    } else {
                        $('#fGFileDomain').hide();
                    }
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, findRootDomain: function findRootDomain(url) {// Loại bỏ các ký tự không mong muốn và chia chuỗi thành mảng
            var parts = url.split('.');// Nếu có ít nhất 2 phần tử trong mảng, thì là domain gốc
            if (parts.length >= 2) {
                var rootDomain = parts[parts.length - 2] + '.' + parts[parts.length - 1];
                return rootDomain;
            } else {// Trường hợp không tìm thấy domain gốc
                return url;
            }
        }, getInfoSite: function getInfoSite() {
            var url = base_url + '/sites/getInfoSite?s=' + sid;
            $.post(url, {_token: $.cookie('_token')}, function (data) {
                if (data.login && data.login == 1) {
                    $('#form-update-site input[name=website]').val(data.website);
                    $('#form-update-site input[name=phone_support]').val(data.phone_support);
                    $('#form-update-site input[name=address]').val(data.address);
                    $('#form-update-site #select_lang').val(data.lang).change();
                    $('#form-update-site #select_unit').val(data.unit).change();
                    if (data.setting_urls) {
                        for (var _i18 = 0, _Object$entries = Object.entries(data.setting_urls); _i18 < _Object$entries.length; _i18++) {
                            var _Object$entries$_i = _slicedToArray2(_Object$entries[_i18], 2),
                                key = _Object$entries$_i[0], value = _Object$entries$_i[1];
                            $("#form-update-site input[name=\"setting_urls[".concat(key, "]\"]")).val(value);
                        }
                    }
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, getInfoWebSite: function getInfoWebSite() {
            var url = base_url + '/sites/getInfoSite?s=' + sid;
            $.post(url, {_token: $.cookie('_token')}, function (data) {
                if (data.login && data.login == 1) {
                    $('#form-update-options input[name=name]').val(data.name);
                    $('#form-update-options input[name=logo_text]').val(data.logo_text);
                    $('#form-update-options .preview-thumbnail-logo').attr('src', data.logo);
                    $('#form-update-options .preview-favicon').attr('src', data.favicon);
                    $('#form-update-options input[name=email_send]').val(data.email_send);
                    $('#form-update-options textarea[name=description]').val(data.description);
                    $('#form-update-options input[name=terms_of_service]').val(data.terms_of_service);
                    $('#form-update-options input[name=number_seeked_video]').val(data.number_seeked_video);
                    if (data.on_input) {
                        for (var key in data.on_input) {
                            if (data.on_input[key]) {
                                $('#on_input_' + key).prop('checked', true);
                            }
                        }
                    }
                    if (data.take_cc_email_site) {
                        $('#take_cc_email_site').prop('checked', true);
                    }
                    if (data.auto_assign_to_sale) {
                        $('#auto_assign_to_sale').prop('checked', true);
                    }
                    if (data.translate_website) {
                        $('#translate_website').prop('checked', true);
                    }
                    if (data.header_fixed) {
                        $('#header_fixed').prop('checked', true);
                    }
                    if (data.learn_on_coccoc) {
                        $('#learn_on_coccoc').prop('checked', true);
                    }
                    if (data.login_same_letter) {
                        $('#login_same_letter').prop('checked', true);
                    }
                    if (data.note_email_send) {
                        var iconHelp = $('#email_site_verify').prev().find('i');
                        iconHelp.attr('data-original-title', iconHelp.attr('title') + data.note_email_send);
                    }
                    if (!data.email_send || !data.show_link_verify) {
                        $('#verify_email_sender').hide();
                    }
                    if (data.email_send && !data.show_link_verify) {
                        $('#email_site_verify').attr('readonly', true);
                    }
                    if (data.watermark) {
                        $('#watermark_video').prop('checked', true);
                        $('input[type=radio][name=watermark_option][value=' + data.watermark_option + ']').prop('checked', true);
                        $('.input-option-watermark').show();
                    }
                    $('.msg-verify-email').html('');
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, getMembership: function getMembership() {
            var url = base_url + '/sites/getMembership?s=' + sid;
            $.get(url, {}, function (data) {
                if (data.login && data.login == 1) {
                    if (data.unit) {
                        $('.unit').text(data.unit);
                    }
                    var selected = data.membership_info.selected_package_trial ? data.membership_info.selected_package_trial : "";
                    setTimeout(function () {
                        LHM.mnDashboard.getListPackageTrial(selected);
                    }, 2100);//id course to name course
                    var html = '';
                    html += '<select name="membership_courses[]" id="membership_courses" multiple class="form-control">';
                    html += '<option value="">Tất cả khóa học</option>';
                    $.each(data.course, function (k, v) {
                        html += '<option value="' + v._id['$id'] + '" ' + v.selected + '>' + v.name + '</option>';
                    });
                    html += '</select>';
                    $('#membership #list_membership_courses').html(html);
                    if (data.type_sell.indexOf('membership') != -1 || $('#active_membership').is(':checked')) {
                        var getNameCourse = function getNameCourse(idCourse) {
                            for (var i in data.courses) {
                                if (data.courses[i] == idCourse) {
                                    return i;
                                    break;
                                }
                            }
                        };//id course to name course
//tick Kich hoat
                        $('#membership input[type=checkbox][value="membership"]').prop('checked', true);
                        $('#membership input[type=checkbox][value="membership"]').trigger('change');
                        if (data.membership_info.exclude_courses != null) {
                            for (var i in data.membership_info.exclude_courses) {
                                data.membership_info.exclude_courses[i] = getNameCourse(data.membership_info.exclude_courses[i]);
                            }
                            $('#membership #exclude_courses').importTags(data.membership_info.exclude_courses.join());
                        }//parse data to form
                        for (var _i9 in data.membership_info.period_price) {
                            var period = $('#info-membership input.period[value=' + _i9 + ']');
                            period.parents('.package_membership').find('.membership_price').val(data.membership_info.period_price[_i9]);
                            period.prop('checked', true);
                            period.trigger('change');
                        }
                        if (data.membership_info.exclude_classes_live) $('#membership #exclude_live').prop('checked', true);
                        if (data.membership_info.exclude_classes_offline) $('#membership #exclude_offline').prop('checked', true);
                        CKEDITOR.instances['membership_info'].setData(data.membership_info.info);
                    }
                    if (data.type_sell.indexOf('retail') != -1) {
                        $('#membership input[type=checkbox][value="retail"]').prop('checked', true);
                    }
                    window.courses = data.courses;
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, getIntergrade: function getIntergrade() {
            var url = base_url + '/sites/getIntergrade?s=' + sid;
            $.get(url, {}, function (data) {
                if (data.login && data.login == 1) {//reset all check box
                    $('#intergrate input:checkbox').prop('checked', false);
                    $('#intergrate input:text').val('');
                    $('#fb_app_id_login').val(data.fb_app_id);
                    $('#fb_secret_key_login').val(data.fb_secret_key);
                    $('#webpush_id').val(data.webpush_id);
                    $('#robots_txt_value').val(data.robots_txt);
                    $('#share_thumb').attr('src', data.share_thumb);
                    $('#intergrate input[type=checkbox][name=show_like_share_fb]').prop('checked', data.show_like_share_fb);
                    var v = '';
                    if (data.active_webpush && data.active_webpush == 'on') {//tick Kich hoat
                        $('#intergrate #active_webpush').trigger('click');
                    }
                    if (data.active_fb_app && data.active_fb_app == 'on') {//tick Kich hoat
                        $('#intergrate #active_fb_app').trigger('click');
                    }
                    var data = data.intergrade;
                    for (var i in data) {
                        switch (data[i].type) {
                            case'fb_comment':
                                if (data[i].status) {//tick Kich hoat
                                    $('#intergrate #active_fb_comment').trigger('click');//parse data into input
                                    v = data[i].app_id;
                                    $('#intergrate #fb_app_id').val(v);
                                }
                                break;
                            case'gg_analytic':
                                if (data[i].status) {//tick Kich hoat
                                    $('#intergrate #active_gg_analytic').trigger('click');//parse data into input
                                    v = data[i].app_id;
                                    $('#intergrate #gg_analytic_id').val(v);
                                }
                                break;
                            case'gg_tag_manager':
                                if (data[i].status) {//tick Kich hoat
                                    $('#intergrate #active_gg_tag_manager').trigger('click');//parse data into input
                                    v = data[i].app_id;
                                    $('#intergrate #gg_tag_manager_id').val(v);
                                }
                                break;
                            case'fb_pixel':
                                if (data[i].status) {//tick Kich hoat
                                    $('#intergrate #active_pixel_id').trigger('click');//parse data into input
                                    v = data[i].app_id;
                                    $('#intergrate #fb_pixel_id').val(v);
                                }
                                break;
                            case'ghtk':
                                if (data[i].status) {//tick Kich hoat
                                    $('#ship #active_api_ghtk').trigger('click');//parse data into input
                                    v = data[i].app_id;
                                    $('#ship #token_ghtk').val(v);
                                }
                                break;
                            case'busship':
                                if (data[i].status) {//tick Kich hoat
                                    $('#ship #active_api_busship').trigger('click');//parse data into input
                                    v = data[i].app_id;
                                    $('#ship #token_busship').val(v);
                                }
                                break;
                            case'unica':
                                if (data[i].status) {//tick Kich hoat
                                    $('#intergrate #active_api_unica').trigger('click');//parse data into input
                                    v = data[i].app_id;
                                    $('#intergrate #token_unica').val(v);
                                    $('#btn-sync').show();
                                    if (data[i].sync_time) $('.sync_time').text('Đồng bộ lần cuối : ' + moment.unix(data[i].sync_time.sec).format('DD/MM/YYYY H:mm:ss'));
                                } else {
                                    $('#btn-sync').hide();
                                }
                                break;
                            case'code_live_chat':
                                if (data[i].status) {//tick Kich hoat
                                    $('#intergrate #active_code_live_chat').trigger('click');//parse data into input
                                    var head = data[i].embed_head ? data[i].embed_head : '';
                                    var foot = data[i].embed_foot ? data[i].embed_foot : data[i].app_id;
                                    $('#intergrate #text_code_live_chat_head').val(head);
                                    $('#intergrate #text_code_live_chat_foot').val(foot);
                                }
                                break;
                        }
                    }
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, paymentThankYou: function paymentThankYou() {
            var post = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
            var url = base_url + '/sites/paymentSuccess';
            if (post) {
                CKEDITOR.instances['payment_thank_you'].updateElement();
                LHM.common.confirmAjax(url, 'POST', {
                    _token: $.cookie('_token'),
                    payment_thank_you: $("#payment_thank_you").val()
                }, null, null, 'Xác nhận', 'Bạn chắc chắn muốn lưu cấu hình này?');
            } else {
                $.get(url, function (res) {
                    CKEDITOR.instances['payment_thank_you'].setData(res.payment_thank_you ? res.payment_thank_you : '');
                });
            }
        }, getPaymentMethod: function getPaymentMethod() {
            var url = base_url + '/sites/getPaymentMethod?s=' + sid;
            $('#update_payment_method [type="checkbox"]').prop('checked', false).change();
            $('#update_payment_method')[0].reset();
            $.get(url, {}, function (data) {
                if (data.login && data.login == 1) {
                    $('#payment_method input:checkbox').prop('checked', false);
                    $('#payment_method input:text').val('');
                    if (data.active_login_payment == "on") {
                        $('#payment_method #active_login_payment').trigger('click');
                    }
                    if(data.tax_code && data.client_id_invoice &&  data.client_secret_invoice) {
                        $('#tax_code').val(data.tax_code)
                        $('#client_id_invoice').val(data.client_id_invoice)
                        $('#client_secret_invoice').val(data.client_secret_invoice)
                    }
                    if (data.show_city_payment) {
                        $('#show_city_payment').prop('checked', true);
                    }
                    for (var i in data.type) {
                        switch (data.type[i]) {
                            case'active_atm_internet_banking':
                                $('#payment_method #active_atm_internet_banking').trigger('click');// $('#payment_method #active_api_online_pay').trigger('click');
                                break;
                            case'active_inter_card':
                                $('#payment_method #active_inter_card').trigger('click');
                                break;
                            case'active_bank':
                                $('#payment_method #active_bank').trigger('click');
                                $('#payment_method #number_card').val(data.number_card);
                                CKEDITOR.instances['number_card'].setData(data.number_card);
                                break;
                            case'active_vietqr':
                                $('#payment_method #active_vietqr').trigger('click');
                                break;
                            case'active_cod':
                                $('#payment_method #active_cod').trigger('click');
                                break;
                            case'active_sms':
                                $('#payment_method #active_sms').trigger('click');
                                break;
                            case'active_checkout_vn':
                                $('#payment_method #active_checkout_vn').trigger('click');
                                $('#keyword_checkout').val(data.keyword_checkout_vn).change();
                                break;
                        }
                    }// $('#payment_method input[type=checkbox][name=active_api_online_pay]').prop('checked', false);
                    var v = '';
                    for (var i in data.intergrade) {
                        switch (data.intergrade[i].type) {
                            case'online_pay':
                                var show_box = false;
                                if (data.intergrade[i].status) {
                                    $.each(data.intergrade[i].pay_type, function (k, v) {
                                        $('#' + v).trigger('click');
                                        if (v == 'onepay') {
                                            show_box = true;
                                            $('#payment_method #token_' + v).val(data.intergrade[i].key_onepay);
                                            $('#payment_method #token_' + v + '_inter').val(data.intergrade[i].key_inter_onepay);
                                            $('#payment_method #app_id_' + v).val(data.intergrade[i].app_id_onepay);
                                            $('#payment_method #app_id_' + v + '_inter').val(data.intergrade[i].app_id_inter_onepay);
                                            $('#payment_method #access_code_' + v).val(data.intergrade[i].access_onepay);
                                            $('#payment_method #access_code_' + v + '_inter').val(data.intergrade[i].access_inter_onepay);
                                        } else if (v == 'nganluong') {
                                            show_box = true;
                                            $('#payment_method #receiver_' + v).val(data.intergrade[i].receiver_nganluong);
                                            $('#payment_method #app_id_' + v).val(data.intergrade[i].app_id_nganluong);
                                            $('#payment_method #merchant_pass_' + v).val(data.intergrade[i].merchant_pass_nganluong);
                                        } else if (v == 'vnpay') {
                                            show_box = true;
                                            $('#payment_method #app_id_' + v).val(data.intergrade[i].app_id_vnpay);
                                            $('#payment_method #token_' + v).val(data.intergrade[i].key_vnpay);
                                        } else if (v == 'momo') {
                                            $('#payment_method #app_id_' + v).val(data.intergrade[i].app_id_momo);
                                            $('#payment_method #access_' + v).val(data.intergrade[i].access_momo);
                                            $('#payment_method #token_' + v).val(data.intergrade[i].key_momo);
                                        } else if (v == 'paypal') {
                                            $('#payment_method #clientid_' + v).val(data.intergrade[i].app_id_paypal);
                                            $('#payment_method #clientsecret_' + v).val(data.intergrade[i].key_paypal);
                                        } else if (v == 'ale_pay') {
                                            $('#payment_method #token_' + v).val(data.intergrade[i].token_ale_pay);
                                            $('#payment_method #checksum_' + v).val(data.intergrade[i].checksum_ale_pay);
                                            if (data.intergrade[i].type_ale_pay) {
                                                $('#type_ale_pay').val(data.intergrade[i].type_ale_pay).change();
                                            }
                                        } else if (v == 'stripe') {
                                            $('#payment_method #token_' + v).val(data.intergrade[i].key_stripe);
                                            $('#payment_method #endpoint_secret_stripe').val(data.intergrade[i].endpoint_secret_stripe);
                                            $('#api_webhook').val(data.api_webhook);
                                        }
                                    });//tick Kich hoat
                                    if (show_box) {
                                        $('#payment_method #active_api_online_pay').trigger('click');
                                    }
                                    if (data.intergrade[i].type_payments_online) {
                                        $('#type_payments_online').val(data.intergrade[i].type_payments_online).trigger('change');
                                    }//tich test mode
                                    $.each(data.intergrade[i].test_mode, function (key, val) {
                                        $('#' + val).trigger('click');
                                    });
                                }
                                break;
                            case'payment_method':
                                if (data.intergrade[i].payment_method && data.intergrade[i].payment_method.includes('active_vietqr')) {
                                    $('#vietqr_bank_id').attr('data-bank-id', data.intergrade[i].vietqr_bank_id);
                                    $('#vietqr_account_no').val(data.intergrade[i].vietqr_account_no);
                                    $('#vietqr_account_name').val(data.intergrade[i].vietqr_account_name);
                                    $('#vietqr_template').val(data.intergrade[i].vietqr_template);
                                    $('#vietqr_description').val(data.intergrade[i].vietqr_description);
                                }
                                break;
                        }
                    }
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, getSettingAffiliate: function getSettingAffiliate() {
            var url = base_url + '/sites/getSettingAffiliate?s=' + sid;
            $.get(url, {sid: sid}, function (data) {
                if (data.login && data.login == 1) {
                    if (data.affiliate_mode) {
                        $('#checkbox_affiliate_mode').prop("checked", true);
                    }
                    if (data.affiliate_confirm == 0) {
                        $('#auto_confirm_affiliate').prop("checked", true);
                    } else {
                        $('#confirm_affiliate_after_contact').prop("checked", true);
                    }
                    if (data.aff_course_type) {
                        $('#course_combo_buy').prop("checked", true);
                    } else {
                        $('#all_course_combo').prop("checked", true);
                    }
                    if (data.type_affiliate_order) {
                        $('#record_create_user').prop("checked", true);
                    } else {
                        $('#record_create_order').prop("checked", true);
                    }
                    if (data.time_update_affiliate_order) {
                        var divUpdate = $('.block-add-order-aff .lbl-time_update_affiliate_order'),
                            timeStr = LHM.common.convertTime(data.time_update_affiliate_order, 'H:i:s d/m/Y');
                        if (divUpdate.length === 0) {
                            $('.block-add-order-aff').append("<p class=\"lbl-time_update_affiliate_order mt-10\">Th\u1EDDi gian c\u1EADp nh\u1EADt: ".concat(timeStr, "</p>"));
                        } else {
                            divUpdate.text('Thời gian cập nhật: ' + timeStr);
                        }
                    }
                    if (data.type_affiliate == 0) {
                        $('#type_affiliate_default').prop("checked", true);
                        $('.type_affiliate_form').hide();
                    } else if (data.type_affiliate == 1 && data.affiliate_flexible) {
                        $('#type_affiliate_flexible').prop("checked", true);
                        $('.type_affiliate_form').show();
                        $('.type_affiliate_multilevel_form').show();
                    } else if (data.type_affiliate == 2 && data.affiliate_multi_level) {
                        $('#type_affiliate_multilevel').prop("checked", true);
                        $('.type_affiliate_form').show();
                        $('.type_affiliate_multilevel_form').hide();
                    } else if (data.type_affiliate == 3 && data.affiliate_course) {
                        $('#type_affiliate_course').prop("checked", true);
                        $('.type_affiliate_form').show();
                        $('.type_affiliate_multilevel_form').show();
                        $('#set_text_type_aff').html("Bạn có thể cài đặt tỉ lệ hoa hồng aff cho từng khóa học:");
                        $('#set_text_type_aff_step_2').html("Bước 2: Cài đặt cấp hoa hồng cho khóa học");
                        $('#set_text_type_aff_desc').html("Khóa học không cài đặt cấp hoa hồng sẽ áp dụng tỉ lệ chung của website");
                    }
                    if (data.data_aff_level) {
                        $.each(data.data_aff_level, function (k, v) {
                            $('#aff_student_level_' + v.level).val(v.rate);
                        });
                    }
                    if (!data.affiliate_multi_level) {
                        $('#type_affiliate_multilevel').attr('data-disable', 1);
                    }
                    if (!data.affiliate_flexible) {
                        $('#type_affiliate_flexible').attr('data-disable', 1);
                    }
                    if (!data.affiliate_course) {
                        $('#type_affiliate_course').attr('data-disable', 1);
                    }
                    $('#aff_student').val(data.aff_student);
                    $('#aff_teacher').val(data.aff_teacher);
                    $('#expired_cookie_aff').val(data.expired_cookie_aff);
                    $('#' + data.aff_cookie).prop('checked', true);
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, get_affiliate_level_follow_option: function get_affiliate_level_follow_option(value_option) {
            $.ajax({
                type: 'GET',
                url: base_url + '/sites/getListAffLevel',
                data: {value_option: value_option},
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        if (rs.data_aff_level) {
                            $.each(rs.data_aff_level, function (k, v) {
                                $('#aff_student_level_' + v.level).val(v.rate);
                            });
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, setting_email_template: function setting_email_template() {
            var url = base_url + '/sites/getSettingEmail?s=' + sid;
            $.get(url, {sid: sid}, function (data) {
                if (data.login && data.login == 1) {
                    CKEDITOR.instances['email_template_registed'].setData(data.response.email_template_registed);
                    CKEDITOR.instances['email_template_send_active_code'].setData(data.response.email_template_send_active_code);
                    CKEDITOR.instances['email_template_pay_online'].setData(data.response.email_template_pay_online);
                    CKEDITOR.instances['email_template_info_account_user'].setData(data.response.email_template_info_account_user);
                    CKEDITOR.instances['email_template_registed_account'].setData(data.response.email_template_registed_account);
                    CKEDITOR.instances['email_template_registed_account_active'].setData(data.response.email_template_registed_account_active);
                    CKEDITOR.instances['email_change_affiliate_status'].setData(data.response.email_change_affiliate_status);
                    CKEDITOR.instances['email_template_reminder_to_study'].setData(data.response.email_template_reminder_to_study);
                    CKEDITOR.instances['email_template_reminder_course_about_to_expires'].setData(data.response.email_template_reminder_course_about_to_expires);
                    CKEDITOR.instances['email_template_reminder_membership_about_to_expires'].setData(data.response.email_template_reminder_membership_about_to_expires);
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, setting_certificate_template: function setting_certificate_template() {
            var url = base_url + '/certificates/getSettingCertificate';
            $.get(url, {}, function (html) {
                $('#setting_certificate_template').html(html);
                setTimeout(function () {
                    LHM.common.genColorPicker();
                    LHM.common.genSelect2();
                }, 100);
            });
        }, setting_site_login: function setting_site_login() {
            var url = base_url + '/sites/getSettingLogin?s=' + sid;
            $.get(url, {sid: sid}, function (data) {
                if (data.login && data.login == 1) {
                    $('input[type=radio][name=config_login][value=' + data.config_login + ']').trigger('click');
                    $('#v-pills-site-login-config input[name=misa_client_id]').val(data.misa_client_id);
                    $('#v-pills-site-login-config input[name=misa_client_secret]').val(data.misa_client_secret);
                    $('#v-pills-site-login-config input[name=salekit_website]').val(data.salekit_website);
                    $('#v-pills-site-login-config input[name=aff_unica]').val(data.aff_unica);
                    if (data.config_login == 3 && data.config_aff_unica) {
                        $('input[name=config_aff_unica]').trigger('click');
                    }
                    if (data.login_with && data.login_with.length > 0) {
                        $('input[name="login_with[]"]').prop('checked', false);
                        $.each(data.login_with, function (k, v) {
                            var input = $("input[name=\"login_with[]\"][value=".concat(v, "]"));
                            if (input.length > 0) {
                                input.prop('checked', true);
                            }
                        });
                    }
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, setting_site_popup: function setting_site_popup() {
            var url = base_url + '/sites/getSettingPopup?s=' + sid;
            $.get(url, {}, function (data) {
                if (data.login && data.login == 1) {
                    $('#popup_name').val(data.popup_name);
                    $('#popup_content').val(data.popup_content);
                    $('#box_popup_photo img').attr('src', data.url_photo);
                    $('#box_popup_photo #popup_photo').val(data.id_photo);
                    if (data.status) {
                        $('#status_popup').prop('checked', true);
                    }
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, getSecurity: function getSecurity() {
            var url = base_url + '/sites/getSecurity?s=' + sid;
            $.get(url, {sid: sid}, function (data) {
                if (data.login && data.login == 1) {
                    if (data.block_user_limit_device) {
                        $('#block_user_limit_stbtd').prop('checked', true);
                        $('#stbtd').show();
                        $('.btn-view-user-login-limited').show();
                    }
                    $('#number_limit_device_app').val(data.number_limit_device_app);
                    $('.time_start_security_login').html(data.time_start_security_login ? data.time_start_security_login : '');
                    if (data.security == "checked") {
                        $('#security-site').prop("checked", true);
                    }
                    if (data.type_block_device) {
                        $('input[name=type_block_device][value="1"]').prop("checked", true);
                    }
                    if (data.setting_verify_email == 0) {
                        $('#auto_verify_email').prop("checked", true);
                    } else if (data.setting_verify_email == 2) {
                        $('#admin-verify-email').prop("checked", true);
                    } else {
                        $('#confirm_verify_email').prop("checked", true);
                    }
                    $('#id_stbtd').val(data.stbtd);
                    if (data.approval_feedback) {
                        $('#setting_approval_review').prop("checked", true);
                    }
                    if (data.approval_comment) {
                        $('#setting_approval_comment').prop("checked", true);
                    }
                    if (data.disable_rate) {
                        $('#disable_rate').prop("checked", true);
                    }
                    if (data.disable_comment) {
                        $('#disable_comment').prop("checked", true);
                    }
                    if (data.enable_reminder_to_study) {
                        $('#enable_reminder_to_study').prop("checked", true);
                    }
                    if (data.enable_reminder_course_expired_soon) {
                        $('#enable_reminder_course_expired_soon').prop("checked", true);
                    }
                    if (data.enable_reminder_membership_expired_soon) {
                        $('#enable_reminder_membership_expired_soon').prop("checked", true);
                    }
                    if (data.watermark) {
                        $('#watermark_video').prop('checked', true);
                        $('input[type=radio][name=watermark_option][value=' + data.watermark_option + ']').prop('checked', true);
                        $('.input-option-watermark').show();
                    }
                    if (data.google_recaptcha_v3) {
                        $('#google_recaptcha_v3').prop('checked', true);
                        $('.input-option-captcha').show();
                        $('.input-option-captcha input[name=google_recaptcha_v3_site_key]').val(data.google_recaptcha_v3_site_key);
                        $('.input-option-captcha input[name=google_recaptcha_v3_secret_key]').val(data.google_recaptcha_v3_secret_key);
                    }
                    if (data.setting_appear_security) {
                        $('#setting_appear_security').prop("checked", true);
                        $('.input-option-appear').show();
                        if (data.appear_name) {
                            $('#appear_name').prop("checked", true);
                        }
                        if (data.appear_email) {
                            $('#appear_email').prop("checked", true);
                        }
                        if (data.appear_phone) {
                            $('#appear_phone').prop("checked", true);
                        }
                        $('.input-option-appear input[name=frequency]').val(data.frequency);
                        $('.input-option-appear input[name=time_appear]').val(data.time_appear);
                        $('.input-option-appear input[name=font_size]').val(data.font_size);
                        $('.input-option-appear input[name=opacity]').val(data.opacity);
                    }
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, setting_site_tag: function setting_site_tag() {
            var url = base_url + '/sites/setting_site_tag';
            $.get(url, {}, function (data) {
                if (data.login && data.login == 1) {
                    if (data.list_tag) {
                        var html_tag = "";
                        for (var i in data.list_tag) {
                            html_tag += '<span id="' + data.list_tag[i].id + '">' + data.list_tag[i].name + ' <a href="javascript:;" style="color:black;" onclick="LHM.sites.editTag(\'' + data.list_tag[i].id + '\',\'' + data.list_tag[i].name + '\');"><i class="fa fa-pencil"></i></a> <a href="javascript:;" style="color:black;" onclick="LHM.sites.removeTag(\'' + data.list_tag[i].id + '\');"><i class="fa fa-times"></i></a></span>';
                        }
                        $("#list_tag_in_site").html(html_tag);
                    }
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            });
        }, membership_site_update: function membership_site_update() {
            CKEDITOR.instances.membership_info.updateElement();
            var data = $('#update_membership').serialize() + '&_token=' + $.cookie('_token');
            var exclude_courses = $('#membership #exclude_courses').val();
            var count_config = $('.add-package-membership-config-cms').length;
            var membership_courses = $('#membership #membership_courses').val();
            if (exclude_courses.indexOf('Tất cả') != -1) courses = 'all'; else {//Xu ly exclude_courses
                exclude_courses = exclude_courses.split(',');
                var courses = '';
                for (var i in exclude_courses) {
                    if (window.courses[exclude_courses[i]]) courses += window.courses[exclude_courses[i]] + '|';
                }
            }
            data += '&c=' + courses;
            data += '&count_config=' + count_config;
            $('.btn-add-live-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-add-live-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/sites/membershipSiteUpdate?s=' + sid,
                data: data,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('.btn-add-live-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-add-live-popup').removeAttr('disabled');
                        if (!data.error) {
                            LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                            window.location = base_url + '/manage#setting-type_sell';
                            setTimeout(function () {// window.location.reload();
                            }, 500);
                        }
                        if (data.error) {
                            for (var _i10 = 0; _i10 < data.msg.length; _i10++) {
                                LHM.common.notify(null, 'warning', data.msg[_i10]);
                            }
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                }
            });
        }, intergrade_site_update: function intergrade_site_update() {
            var button = $('.btn-add-live-popup');
            var formData = new FormData($('#update_intergrade')[0]);
            formData.append('site_map_file', $('#site_map_file')[0].files[0]);
            formData.append('_token', $.cookie('_token'));
            button.attr('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            LHM.common.callAjax('/sites/intergradeSiteUpdate', 'POST', formData, function (data) {
                if (data.login && data.login === 1) {
                    var passion = 0;
                    for (var i in data.response) {
                        if (data.response[i].msg.length) {
                            for (var j in data.response[i].msg) LHM.common.notify(null, 'warning', data.response[i].msg[j]);
                        } else passion++;
                    }
                    if (passion == Object.keys(data.response).length) LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                    if (data.show_delete_site_map && !$('#button-delete-site-map').length) $('.action-delete-site-map').html('<button type="button" id="button-delete-site-map" class="btn btn-danger"><i class="fa fa-trash"></i> Xóa</button>');
                    button.removeAttr('disabled').html('<i class="fa fa-save"></i> Cập nhật');
                } else if (data.login && data.login == 2) {
                    window.location = data.href;
                }
            }, function () {
                button.removeAttr('disabled').html('<i class="fa fa-save"></i> Cập nhật');
            }, {not_notify: true, option_ajax: {cache: false, contentType: false, processData: false}});
        }, ship_site_update: function ship_site_update() {
            var data = $('#update_ship').serialize() + '&_token=' + $.cookie('_token');
            $('.btn-add-live-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-add-live-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/sites/shipSiteUpdate?s=' + sid,
                data: data,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('.btn-add-live-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-add-live-popup').removeAttr('disabled');
                        var passion = 0;
                        for (var i in data.response) {
                            if (data.response[i].msg.length) {
                                for (var j in data.response[i].msg) LHM.common.notify(null, 'warning', data.response[i].msg[j]);
                            } else passion++;
                        }
                        if (passion == Object.keys(data.response).length) LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                }
            });
        }, payment_method_site_update: function payment_method_site_update() {
            CKEDITOR.instances.number_card.updateElement();
            var data = $('#update_payment_method').serialize() + '&_token=' + $.cookie('_token');
            $.ajax({
                type: 'POST',
                url: base_url + '/sites/paymentMethodSiteUpdate?s=' + sid,
                data: data,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        if (data.success) {
                            LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                        } else {
                            $.each(data.msg, function (index, el) {
                                LHM.common.notify(null, 'warning', el);
                            });
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                }
            });
        }, certificate_site_update: function certificate_site_update(that) {
            var form = $('#update_certificate_site');
            if (form.length) {
                var data = form.serialize() + '&_token=' + $.cookie('_token');
                $.ajax({
                    type: 'POST',
                    url: base_url + '/certificates/save',
                    data: data,
                    dataType: 'json',
                    success: function success(res) {
                        if (res.success) {
                            LHM.common.notify(null, 'success', 'Cập nhật chứng chỉ thành công');
                        } else {
                            LHM.common.notifyResponse(res.message ? res.message : 'Có lỗi xả ra', 'danger');
                        }
                    },
                    error: function error() {
                        LHM.common.notify(null, 'danger', 'Có lỗi xảy ra');
                    }
                });
            } else {
                LHM.common.notify(null, 'danger', 'Không tồn tại Form chứng chỉ');
            }
        }, certificate_color_picker: function certificate_color_picker(id, color, certificate_init) {
            if (certificate_init) {
                var arrayOfObject = id.map(function (item) {
                    return {'#000000': item};
                });
                $.each(arrayOfObject, function (key, value) {
                    $.each(value, function (k, v) {
                        if (k != undefined) {
                            $("#" + v).colorpicker({color: k});
                        }
                    });
                });
            } else {
                var arrayOfObject = id.map(function (value, index) {
                    return [value, color[index]];
                });
                $.each(arrayOfObject, function (key, value) {
                    if (value[1] != undefined) {
                        $("#" + value[0]).colorpicker({color: value[1]});
                    }
                });
            }
        }, update_affiliate: function update_affiliate(uid) {
            var data = $('#update_affiliate').serialize() + '&_token=' + $.cookie('_token');
            $.ajax({
                type: 'POST',
                url: base_url + '/sites/updateAffiliate?userid=' + uid,
                data: data,
                dataType: 'json',
                success: function success(data) {
                    if (!data.error) {
                        LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                    } else {
                        $.each(data.msg, function (k, v) {
                            LHM.common.notify(null, 'warning', v);
                        });
                    }
                }
            });
        }, updateStudent: function updateStudent(uid) {
            var data = $('#form-update-profile').serialize() + '&_token=' + $.cookie('_token');
            $('.btn-update-student-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-update-student-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/sites/updateStudent?uid=' + uid,
                data: data,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('.btn-update-student-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-update-student-popup').removeAttr('disabled');
                        if (!data.error) {
                            LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                        } else {
                            $.each(data.msg, function (k, v) {
                                LHM.common.notify(null, 'warning', v);
                            });
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                }
            });
        }, update_setting_affiliate: function update_setting_affiliate() {
            var data = $('#update_setting_affiliate').serialize() + '&_token=' + $.cookie('_token');
            $('.btn-add-live-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-add-live-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/sites/updateSettingAffiliate?s=' + sid,
                data: data,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('.btn-add-live-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-add-live-popup').removeAttr('disabled');
                        if (!data.error) {
                            LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                        } else {
                            $.each(data.msg, function (k, v) {
                                LHM.common.notify(null, 'warning', v);
                            });
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                }
            });
        }, update_security: function update_security() {
            var data = $('#update_security').serialize() + '&_token=' + $.cookie('_token');
            $('.btn-add-live-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-add-live-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/sites/setSecurity?s=' + sid,
                data: data,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('.btn-add-live-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-add-live-popup').removeAttr('disabled');
                        if (!data.error) {
                            LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                            LHM.mnDashboard.init('setting_domain');
                        } else {
                            $.each(data.msg, function (k, v) {
                                LHM.common.notify(null, 'warning', v);
                            });
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                }
            });
        }, update_setting_email: function update_setting_email() {
            CKEDITOR.instances.email_template_registed.updateElement();
            CKEDITOR.instances.email_template_send_active_code.updateElement();
            CKEDITOR.instances.email_template_pay_online.updateElement();
            CKEDITOR.instances.email_template_info_account_user.updateElement();
            CKEDITOR.instances.email_template_registed_account.updateElement();
            CKEDITOR.instances.email_template_registed_account_active.updateElement();
            CKEDITOR.instances.email_change_affiliate_status.updateElement();
            CKEDITOR.instances.email_template_reminder_to_study.updateElement();
            CKEDITOR.instances.email_template_reminder_course_about_to_expires.updateElement();
            CKEDITOR.instances.email_template_reminder_membership_about_to_expires.updateElement();
            var data = $('#update_setting_email').serialize() + '&_token=' + $.cookie('_token');
            $('.btn-update-setting-email-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhât');
            $('.btn-update-setting-email-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/sites/updateSettingEmail?s=' + sid,
                data: data,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('.btn-update-setting-email-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-update-setting-email-popup').removeAttr('disabled');
                        if (!data.error) {
                            LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                        } else {
                            $.each(data.msg, function (k, v) {
                                LHM.common.notify(null, 'warning', v);
                            });
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                }
            });
        }, showPageUpgrade: function showPageUpgrade() {
            $('#tab-dashboard-menu a.nav-link[href^="#setting"]').trigger('click');
            window.nonsetfirstsubtab = true;
            $('#dashboard a[href="#v-pills-upgrade"]').click();
        }, notifyService: function notifyService() {
            var url = base_url + '/sites/notifyService';
            $.get(url, {}, function (rs) {
                if (rs.ms) {
                    $('.msg-upgrade').html(rs.ms);
                    $('.msg-upgrade').css('margin', '5px');
                } else {
                    $('.msg-upgrade').css('margin', '0px');
                }
            });
        }, getService: function getService() {
            var url = base_url + '/sites/getService';
            $('#list_orders_edubit tbody').html('<tr><td colspan="7" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {}, function (rs) {
                if (rs.login && rs.login == 1) {
                    if (!rs.error) {
                        var packagemsg = "";
                        var btnupgrade = '';
                        if (rs.data.trial) {//trial
                            btnupgrade = 'Nâng cấp';// if (rs.data.dayslefttrial) {
                            packagemsg = 'Bạn đang dùng bản miễn phí';// } else packagemsg = 'Đã hết hạn dùng bản dùng thử , bạn vui lòng chọn gói nâng cấp để tiếp tục sử dụng dịch vụ';
                        } else {//paid
                            btnupgrade = 'Gia hạn';
                            if (rs.data.daysleftpaid) {
                                packagemsg = 'Bạn đang dùng bản trả phí , còn lại ' + rs.data.daysleftpaid + ' ngày';
                            } else packagemsg = 'Đã hết hạn dùng bản trả phí , bạn vui lòng chọn gói gia hạn để tiếp tục sử dụng dịch vụ';
                        }
                        $('.packagemsg').text(packagemsg);
                        $('.info_package_cms').text('Gói Website: ' + rs.data.currentpackagename);
                        $('.info_package_live_cms').text('Gói Live: ' + rs.data.packagelivename);
                        $('.capacity_site').text(rs.data.disk_info.size_used + ' / ' + rs.data.disk_info.total_size_of_service + ' GB');
                        $('.student_site').text(rs.data.total_student_actives + ' / ' + rs.data.active_user_quota);
                        $('.total_user_login').text(rs.data.total_user_login);
                        $('.total_user_active').text(rs.data.total_user_active);
                        $('.total_students').text(rs.data.total_students);
                        $('.capacity_site_bar').css({"width": rs.data.disk_info.percent_used + "%", "color": "#333"});
                        $('.capacity_site_bar').text(rs.data.disk_info.percent_used + "%");
                        $('.student_site_bar').css({"width": rs.data.percent_student_used + "%", "color": "#333"});
                        $('.student_site_bar').text(rs.data.percent_student_used + "%");//acttive curren package
                        $('.package[data-code=' + rs.data.currentpackagecode + ']').find('.btnupgrade').text(btnupgrade);
                        $('.package[data-code=' + rs.data.currentpackagecode + ']').find('.box-pricing').addClass('current');
                        if (rs.data_pack) {
                            $.each(rs.data_pack, function (code, price) {
                                $('.price-' + code).html(price + '<sup>đ</sup><span>/ tháng</span>');
                            });
                        }
                        $('#list_orders_edubit tbody').html('');
                        var html = '';
                        if (rs.data_order.length > 0) {
                            rs.data_order.map(function (o, k) {
                                html += '<tr>' + '<td class="my-vm">' + '<div class="dateago">' + o['oid'] + '</div></td> ' + '<td> <div class="dateago">' + o['create_at'] + '</div></td> ' + '<td> <div class="dateago"><i class="fas fa-user"></i> ' + o['fullname'] + '</div>' + '</td>' + '<td class="my-vm"> <div class="dateago"> ' + o['info_package'] + ' </div></td>' + '<td class="my-vm"> <div class="dateago"> ' + o['month'] + ' tháng </div></td>';
                                if (o['month_discount']) {
                                    html += '<td class="my-vm"> <div class="dateago"> ' + o['month_discount'] + ' tháng </div></td>';
                                } else {
                                    html += '<td class="my-vm"> <div class="dateago"></div></td>';
                                }
                                html += '<td class="my-vm">' + '<div class="dateago text-' + o['status']['color'] + '"> ' + o['status']['name'] + '</div></td> ' + '</tr>';
                            });
                        } else {
                            html = '<tr><td colspan="7">Không có dữ liệu</td></tr>';
                        }
                        $('#list_orders_edubit tbody').html(html);
                    }
                } else if (rs.login && rs.login == 2) {
                    window.location = rs.href;
                    "";
                }
            });
        }, syncUnica: function syncUnica(curr) {
            $(curr).attr('disabled', 'disabled');
            $(curr).find('i').addClass('fa-spin');
            var data = {_token: $.cookie('_token'), key: $('#token_unica').val()};
            $.ajax({
                type: 'POST',
                url: base_url + '/sites/syncUnica',
                data: data,
                dataType: 'json',
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        if (!res.error) {
                            LHM.common.notify(null, 'success', 'Đồng bộ dữ liệu thành công');
                            $('.sync_time').text('Đồng bộ lần cuối : ' + res.sync_time);
                        } else {
                            LHM.common.notify(null, 'danger', res.msg);
                        }
                        $(curr).removeAttr('disabled');
                        $(curr).find('i').removeClass('fa-spin');
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                    $(curr).removeAttr('disabled');
                }
            });
        }, getProfit: function getProfit(start, end) {
            start = start ? start : null;
            end = end ? end : null;
            var data = {start: start, end: end};
            $.ajax({
                type: 'GET',
                url: base_url + '/dashboard/profit',
                data: data,
                dataType: 'json',
                beforeSend: function beforeSend() {
                    $('#list_profit tbody').html('<tr><td colspan="6" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                },
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        $('#export_profit').attr('href', base_url + '/dashboard/profit?start=' + start + '&end=' + end + '&export=1');
                        $('#list_profit tbody').html('');
                        var html = '';
                        $('#total_profit').text(rs.total_profit);
                        if (rs.data.length > 0) {
                            rs.data.map(function (o, k) {
                                html += '<tr style="text-align: center">' + '<td>' + o['stt'] + '</td>' + '<td>' + o['type_payment'] + '</td>' + '<td>' + o['take_money'].toLocaleString('en-US') + rs.unit + '</td>' + '<td>' + o['real_take_money'].toLocaleString('en-US') + rs.unit + '</td>' + '</tr>';
                            });
                            html += '<tr style="text-align: center">' + '<th> Tổng </th>' + '<th></th>' + '<th>' + rs.total_filter_take.toLocaleString('en-US') + rs.unit + '</th>' + '<th>' + rs.total_filter_real.toLocaleString('en-US') + rs.unit + '</th>' + '</tr>';
                        } else {
                            html = '<tr><td colspan="6">Không có dữ liệu</td></tr>';
                        }
                        $('#total_profit_report').text(rs.total_order.toLocaleString('en-US') + ' ' + rs.unit);
                        $('#list_profit tbody').html(html);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, getProfitTeacher: function getProfitTeacher(start, end) {
            window.start_daterange_teacher = start;
            window.end_daterange_teacher = end;
            $.get('dashboard/division/', {start: start, end: end}, function (rs) {
                if (rs.login && rs.login == 1) {
                    if (!rs.error) {
                        $('#export_profit_teacher').attr('href', base_url + '/dashboard/division?start=' + start + '&end=' + end + '&export=1');
                        $('.total_profit_site').text(rs.data.total_profit_site);
                        $('.total_view_site').text(rs.data.total_view_site);
                        $('#list-data-profit-teacher').html('');
                        var html = '';
                        var i = 0;
                        $('.lbl-profit-teacher').html('<p>THU NHẬP GIẢNG VIÊN (' + rs.data.start + ' - ' + rs.data.end + '): <strong>' + rs.data.total_profit_teacher + ' VND</strong></p>');
                        if (rs.data.teacher.length != 0) {
                            $.each(rs.data.teacher, function (k, v) {
                                i++;
                                html += '<tr>' + '<td>' + i + '</td>' + '<td class="text-center"><img src="' + v.photo + '" class="rounded-circle" width="50" height="50"/></td>' + '<td>' + v.fullname + '</td>' + '<td>' + v.view + '</td>' + '<td>' + number_format_price(v.profit) + ' VND</td>' + '<td><a href="javascript:;" class="btn-detail-view-teacher" data-id="' + k + '"><i class="fa fa-info"></i> Chi tiết</a></td>' + '<td><a href="javascript:;" class="btn-show-payment-aff" data-id="' + k + '" data-name="' + v.fullname + '"><i class="fas fa-info-circle"></i> Thông tin thanh toán</a></td>' + '</tr>';
                            });
                            html += '<tr><td colspan="3"><strong>Tổng</strong></td><td><strong>' + rs.data.total_view_teacher + '</strong></td><td><strong>' + rs.data.total_profit_teacher + ' VND</strong></td><td><td></tr>';
                        } else html = '<tr>' + '<td colspan="6">Không có dữ liệu!</td>' + '</tr>';
                        $('#list-data-profit-teacher').html(html);
                    } else LHM.common.notify(null, 'danger', 'Có lỗi xảy ra');
                } else if (rs.login && rs.login == 2) {
                    window.location = rs.href;
                }
            });
        }, getProfitCourse: function getProfitCourse(start, end, teacher_id) {
            window.start_daterange_profit_course = start;
            window.end_daterange_profit_course = end;
            $.get('dashboard/profit_course/', {
                start: start,
                end: end,
                teacher_id: teacher_id,
                course_id: $('#course_filter_report').val()
            }, function (rs) {
                if (rs.login && rs.login == 1) {
                    if (!rs.error) {
                        $('#list-data-profit-course').html('');
                        var html = '';
                        var i = 0;
                        $('.lbl-profit-course').html('<p>THU NHẬP KHÓA HỌC (' + rs.data.start + ' - ' + rs.data.end + '): <strong>' + rs.data.total_profit_course + ' VND</strong></p>');
                        if (rs.data.teacher.length != 0) {
                            $.each(rs.data.teacher, function (k, v) {
                                i++;
                                html += '<tr>' + '<td>' + i + '</td>' + '<td class="text-center"><img src="' + v.cover + '" class="rounded-circle" width="50" height="50"/></td>' + '<td>' + v.course + '</td>' + '<td>' + v.fullname + '</td>' + '<td>' + v.view + '</td>' + '<td>' + number_format_price(v.profit) + ' VND</td>' + '</tr>';
                            });
                            html += '<tr><td colspan="4"><strong>Tổng</strong></td><td><strong>' + rs.data.total_view_course_teacher + '</strong></td><td><strong>' + rs.data.total_profit_course + ' VND</strong></td></tr>';
                        } else html = '<tr>' + '<td colspan="6">Không có dữ liệu!</td>' + '</tr>';
                        $('#list-data-profit-course').html(html);
                    } else LHM.common.notify(null, 'danger', 'Có lỗi xảy ra');
                } else if (rs.login && rs.login == 2) {
                    window.location = rs.href;
                }
            });
        }, getProfitAffiliate: function getProfitAffiliate(page) {
            page = page ? page : 0;
            var time = $('#filter-date-profit-aff-site').val();
            $('#list-profit-affiliate').html('<tr><td colspan="12" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get('dashboard/profit_affiliate/', {
                time: time,
                limit_record: page,
                fillter: $('#name_username_aff_site').val()
            }, function (rs) {
                if (rs.login && rs.login == 1) {
                    var _rs$total_record;
                    LHM.common.pagination_site(rs.count_record, rs.limit, page, 'list-profit-affiliate', null, true, null, (_rs$total_record = rs.total_record) !== null && _rs$total_record !== void 0 ? _rs$total_record : null);
                    if (!rs.error) {
                        var html = '';
                        if (rs.data.length != 0) {
                            $.each(rs.data, function (k, v) {
                                html += '<tr>' + '<td style="text-align: center;">' + (rs.limit * page + k + 1) + '</td>';
                                if (v.id_user == 0) {
                                    html += '<td style="text-align: center;">' + v.fullname + '</td>';
                                } else {
                                    html += '<td style="text-align: center;"><a style="color: #007bff;" target="_blank" href="site/detail_student/' + v.id_user + '" class="btn-view-user-registed" data-id="' + v.id_user + '">' + v.fullname + '</a></td>';
                                }
                                html += '<td style="text-align: center;">' + v.affname + '</td>' + '<td style="text-align: center;"><a href="javascript:void(0);" style="color: #007bff;" class="view_list_user_aff_signin" data-id="' + v.id_user + '" data-time="' + time + '">' + v.count_user_signin_aff + '</a></td>' + '<td style="text-align: center;"><a href="javascript:void(0);" style="color: #007bff;" class="view_list_all_order_aff" data-id="' + v.id_user + '" data-time="' + time + '">' + v.count_order + '</a></td>' + '<td style="text-align: center;">' + v.count_order_payment + '</td>' + '<td style="text-align: center;">' + v.sr + '</td>' + '<td style="text-align: center;">' + v.revenue.toLocaleString('en-US') + ' ' + rs.unit + '</td>' + '<td style="text-align: center;">' + v.revenue_net.toLocaleString('en-US') + ' ' + rs.unit + '</td>' + '<td style="text-align: center;">' + v.commission.toLocaleString('en-US') + ' ' + rs.unit + '</td>' + '<td style="text-align: center;">' + v.commission_net.toLocaleString('en-US') + ' ' + rs.unit + '</td>';
                                if (rs.type_affiliate == 2) {
                                    if (v.id_user != 0) {
                                        html += '<td style="text-align: center;">' + '           <ul class="list-unstyled acts-li">' + '           <li class="" title="Xem danh sách aff cấp dưới" style="margin-right:0px;"><a href="javascript:;" onclick=LHM.mnDashboard.getAffLevel("' + v.id_user + '","down")><i class="fa fa-level-down"></i></a></li>' + '           <li class="" title="Xem danh sách aff cấp trên" ><a href="javascript:;" onclick=LHM.mnDashboard.getAffLevel("' + v.id_user + '","up")><i class="fa fa-level-up"></i></a></li>' + '           </ul>' + '</td>';
                                    }
                                }// '<td style="text-align: center;">'+v.percent+'</td>' +
                                html += '</tr>';
                            });
                        } else html = '<tr>' + '<td colspan="12">Không có dữ liệu</td>' + '</tr>';
                        $('#list-profit-affiliate').html(html);
                    } else {
                        $.each(rs.msg, function (index, el) {
                            LHM.common.notify(null, 'danger', el);
                        });
                    }
                } else if (rs.login && rs.login == 2) {
                    window.location = rs.href;
                }
            });
        }, getAffLevel: function getAffLevel(user_id, type) {
            var title = type == "up" ? "Danh sách aff cấp trên" : "Danh sách aff cấp dưới";
            $.confirm({
                title: title,
                columnClass: 'col-md-6',
                type: 'blue',
                scrollToPreviousElement: false,
                scrollToPreviousElementAnimate: false,
                content: function content() {
                    var self = this;
                    return $.ajax({
                        url: base_url + '/dashboard/getAffLevel',
                        type: 'GET',
                        data: {user_id: user_id, type: type},
                        success: function success(res) {
                            if (res.login && res.login == 1) {
                                if (!res.error) {
                                    if (type == "up") {
                                        var html = '<dl>';
                                        if (res.data.length) {
                                            $.each(res.data, function (k, v) {
                                                html += '<dt class="multilevel' + (res.data.length - k) + '">' + v.full_name + ' - ' + v.user_name + '</dt>';
                                            });
                                        } else {
                                            html = '<dt>Không có dữ liệu</dt>';
                                        }
                                        html += '</dl>';
                                        self.setContent(html);
                                    } else if (type == "down") {
                                        var html = '<div class="table-responsive">' + '<table class="table table-hover">' + '<thead>' + '<tr class="table-active">' + '<th width="50%" style="text-align: center;">Họ tên</th>' + '<th style="text-align: center;">Username</th>' + '</tr>' + '</thead>' + '<tbody>';
                                        if (res.data.length) {
                                            $.each(res.data, function (k, v) {
                                                html += '<tr>' + '<td style="text-align: center;">' + v.full_name + '</td>' + '<td style="text-align: center;">' + v.user_name + '</td>' + '</tr>';
                                            });
                                        } else {
                                            html = '<tr><td colspan="3" style="border:0px !important;">Không có dữ liệu</td></tr>';
                                        }
                                        html += '</tbody></table></div>';
                                        self.setContent(html);
                                    }
                                } else {
                                    LHM.common.notify(null, 'danger', res.msg);
                                }
                            } else if (res.login && res.login == 2) {
                                window.location = res.href;
                            }
                        }
                    });
                },
                buttons: {cancel: {text: 'Đóng'}}
            });
        }, getStudentStudy: function getStudentStudy(page) {
            var data = '?filter=1&' + $('#list-filter-process-study').serialize();
            $('.box-list-student table tbody').html('<tr><td colspan="8" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $('.btn-export-process').attr('data-href', data);
            data += "&limit_record=".concat(page);
            $.get('dashboard/processStudy/' + data, function (rs) {
                if (rs.login && rs.login == 1) {
                    var html_process = '';
                    LHM.common.pagination_site(rs.count_record, rs.limit, page, 'list_process_study', null, true, null, rs.total_record);
                    if (rs.data.length > 0) {
                        $.each(rs.data, function (k, v) {
                            if (v.percent == 0) var styleProcess = 'style="width:0%;color:black"';
                            html_process += '<tr>' + '<td>' + (rs.limit * page + k + 1) + '</td>' + '<td>' + 'Tên: ' + v.name + '<br>' + 'Email: ' + v.email + '<br>' + 'SDT: ' + v.phone + '<br>' + 'Đăng nhập cuối: ' + v.last_login + '' + '</td>' + '<td><div class="progress list-detail-lesson" data-uid="' + v.user_id['$id'] + '" data-course-id="' + v.id_course['$id'] + '" style="height:30px;cursor:pointer;"><div class="progress-bar progress-bar-striped active progress-bar-animated bg-success ' + v.user_id['$id'] + '_' + v.id_course['$id'] + '" role="progressbar" aria-valuenow="' + v.percent + '" aria-valuemin="0" aria-valuemax="100" ' + styleProcess + '>' + v.percent + '%</div></div></td>' + '<td>' + v.course_name + '</td>' + '<td>' + v.days_since_last_login + '</td>' + '<td>' + v.group + '</td>';
                            if (v.remove_process_study) {
                                html_process += '<td><a href="javascript:;" style="color:black;" onclick="LHM.lessons.removeStudentStudyLHM(this,\'' + v.user_id['$id'] + '\',\'' + v.id_course['$id'] + '\');"><i class="fa fa-trash deletes"></i> Xóa</a></td>';
                                if (v.create_certificate) {
                                    html_process += '<td><a href="javascript:;" style="color:black;" onclick="LHM.lessons.createCertificate(this,\'' + v.user_id['$id'] + '\',\'' + v.id_course['$id'] + '\');"><i class="fa fa-plus"></i> Chứng chỉ</a></td>';
                                } else {
                                    html_process += '<td></td>';
                                }
                            } else {
                                html_process += '<td></td><td></td>';
                            }
                            if (v.update_complete_course) {
                                html_process += '<td><a href="javascript:;" class="btn btn-success" " onclick="LHM.lessons.completeCourse(this,\'' + v.user_id['$id'] + '\',\'' + v.id_course['$id'] + '\');">Đánh dấu hoàn thành</a></td>';
                            } else if (v.is_complete) {
                                html_process += '<td><span><i class="fa fa-check"></i> Hoàn thành</span></td>';
                            } else {
                                html_process += '<td></td>';
                            }
                            html_process += '</tr>';
                        });
                    } else {
                        html_process = '<tr><td colspan="9">Không có dữ liệu</td></tr>';
                    }
                    $('.box-list-student table tbody').html(html_process);
                    $('.progress-bar').each(function () {
                        var valueNow = $(this).attr('aria-valuenow');
                        if (parseInt(valueNow) > 0) {
                            $(this).animate({
                                width: valueNow + '%',
                                percent: 100
                            }, {
                                progress: function progress(a, p, n) {
                                    $(this).css('width', valueNow * p + '%').html(Math.round(valueNow * p) + '%');
                                }
                            }, 100);
                        }
                    });
                } else if (rs.login && rs.login == 2) {
                    window.location = rs.href;
                }
            });
        }
    }, lessons: {// lấy danh sách bài học ra view
        getArrayNumberHide: function getArrayNumberHide() {
            var array_number_hide = [], index = 0;
            $('#list_lessons button.js-change-show-hide').each(function () {
                if ($(this).find('i').hasClass('fa-chevron-right')) {
                    array_number_hide.push(index);
                }
                index++;
            });
            return array_number_hide;
        }, list_lessons: function list_lessons(parent_id) {
            var val_get = {live_code: code_live, course_id: id_course};
            var array_number_hide = LHM.lessons.getArrayNumberHide();
            $.ajax({
                type: 'GET',
                data: val_get,
                url: base_url + '/lessons/manageLesson/list',
                dataType: 'json',
                success: function success(lessons) {
                    if (lessons.login && lessons.login == 1) {
                        $('#list_lessons').html('');
                        if (lessons && lessons.data) {
                            var genChild = function genChild(child) {
                                var plusLesson = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
                                var htmlChild = '';
                                for (var e = 0; e < child.length; e++) {
                                    index_lesson++;
                                    button = 'well';
                                    chapter = '';
                                    var start_date = 'Vui lòng chọn ngày <i class="fa fa-calendar fs_15"></i>';
                                    if (child[e]['start_date'] != '') {// khi tồn tại ngày bắt đầu
                                        start_date = child[e]['start_date'] + '<i class="fa fa-calendar fs_15"></i>';
                                    }
                                    var icon_status = '';
                                    if(lessons.layer_lesson) {
                                        icon_status = '<i class="fas fa-tools fs_15"></i>';
                                    } else {
                                        if (child[e]['status'] == 2) {
                                            icon_status = '<i style="color: red" class="fa fa-eye-slash fs_15"></i>';
                                        } else if (child[e]['status'] == 1) {
                                            icon_status = '<i class="fa fa-eye fs_15"></i>';
                                        }
                                    }
                                    var start_date_html = '<p class="hide_date"><strong>Ngày học live</strong>: <span  onclick=LHM.lessons.click_date("' + child[e]['_id'] + '")  class="start_date ddddd" data-date="' + child[e]['date'] + '"> ' + start_date + '</span></p>';
                                    var button_add_date = '';
                                    $('#show_date').val(lessons.live.is_show_add_date);
                                    if (lessons.live.is_show_add_date) {
                                        $('#live_id').val(lessons.live.live_id);
                                        button_add_date = '<a title="Chỉ định ngày học" live_id="' + lessons.live.live_id + '" href="javascript:void(0);" onclick=LHM.lessons.change_date_lesson(this,"' + child[e]['_id'] + '","add_date") id="' + child[e]['_id'] + '"><i class="fas fa-calendar-alt fs_15"></i></a>';
                                    } else {
                                        start_date_html = '';
                                    }
                                    if (window.streamurl) window.streamurl[child[e]['_id']] = child[e]['video']; else {
                                        window.streamurl = {};
                                        window.streamurl[child[e]['_id']] = child[e]['video'];
                                    }
                                    if (child[e]['video_status']) {
                                        if (window.video_status) window.video_status[child[e]['_id']] = child[e]['video_status']; else {
                                            window.video_status = {};
                                            window.video_status[child[e]['_id']] = child[e]['video_status'];
                                        }
                                        if (window.video_status_text) window.video_status_text[child[e]['_id']] = child[e]['status_text']; else {
                                            window.video_status_text = {};
                                            window.video_status_text[child[e]['_id']] = child[e]['status_text'];
                                        }
                                    }
                                    var icon_status_lesson = '';
                                    var tittle_status_lesson_child = '';
                                    if (child[e]['status_lesson'] == 0) {
                                        icon_status_lesson = '<i class="fa fa-unlock"></i>';
                                        tittle_status_lesson_child = "Công khai";
                                    } else {
                                        icon_status_lesson = '<i class="fa fa-lock"></i>';
                                        tittle_status_lesson_child = "Không công khai";
                                    }
                                    var icon_pin_lesson = '';
                                    var tittle_pin = '';
                                    if (child[e]['pin'] == 1) {
                                        icon_pin_lesson = '<i style="color: red" class="fa fa-thumb-tack"></i>';
                                        tittle_pin = "Bỏ ghim";
                                    } else {
                                        icon_pin_lesson = '<i class="fa fa-thumb-tack"></i>';
                                        tittle_pin = "Ghim lên đầu";
                                    }
                                    var action = '';
                                    if (!child[e]['is_end_course']) {
                                        if (child[e]['course_code']) {
                                            action += "<a href=\"".concat(base_url, "/video/").concat(child[e]['course_code'], "#").concat(child[e]['_id'], "\" target=\"_blank\" title=\"Chi ti\u1EBFt b\xE0i h\u1ECDc\"><i class=\"fa fa-link\" aria-hidden=\"true\"></i></a>");
                                        }
                                        action += '     <a title="' + tittle_pin + '" href="javascript:void(0);" status_pin="' + child[e]['pin'] + '" onclick=LHM.lessons.change_status_pin(this,"' + child[e]['_id'] + '")>' + icon_pin_lesson + '</a>';
                                        action += '     <a title="' + tittle_status_lesson_child + '" href="javascript:void(0);" status_lesson="' + child[e]['status_lesson'] + '" onclick=LHM.lessons.change_status(this,"' + child[e]['_id'] + '")>' + icon_status_lesson + '</a>';
                                        action += '     <a title="Học thử" href="javascript:void(0);" status="' + child[e]['status'] + '" data-nature="' + child[e]['nature'] + '" onclick=LHM.lessons.change_status_lessons(this,"' + child[e]['_id'] + '")>' + icon_status + '</a>';
                                        action += '     <a title="Video bài học & Tài liệu" href="javascript:void(0);" onclick="LHM.lessons.filemanager(\'' + child[e]['_id'] + '\', \'uploader\')"><i class="fa fa-file fs_15"></i></a>';
                                        action += '     ' + button_add_date + '';
                                        action += '     <a title="Cài đặt chung" href="javascript:void(0);" onclick="LHM.lessons.setting(\'' + child[e]['_id'] + '\')"><i class="fa fa-cog fs_15"></i></a>';
                                        action += '           <a title="Sửa tên bài học" href="javascript:void(0);" onclick=LHM.lessons.editChapter(this,"' + child[e]['_id'] + '")><i class="fa fa-edit"></i></a>';
                                        action += '     <a title="Xóa bài học" href="javascript:void(0);" onclick=LHM.lessons.remove_lesson(this,"' + child[e]['_id'] + '")><i class="fas fa-trash-alt fs_15"></i></a>';
                                        action += '   <a title="Nhân Bản Bài học" href="javascript:void(0);" type_remove="parrent" onclick=LHM.lessons.duplicateLesson("' + child[e]['_id'] + '")><i class="fa fa-copy fs_15"></i></a>';
                                        if (lessons.upload_aws_s3 && child[e]['aws_link'] === '') {
                                            if (child[e]['status_sync_aws'] && child[e]['status_sync_aws'] === lessons.status_sync_aws_pending) {
                                                action += '<i class="fa fa-spinner" aria-hidden="true" title="Đang xử lý trên server AWS và sẽ tự động hoàn thành"></i>';
                                            } else {
                                                if (child[e]['old_video_id']) {
                                                    action += '<a title="Upload lên server AWS" href="javascript:void(0);"  onclick=LHM.lessons.convertVideoToAws("' + child[e]['_id'] + '","' + child[e]['old_video_id'] + '")> <i class="fa fa-cloud-upload" aria-hidden="true"></i> </a>';
                                                }
                                            }
                                        }
                                        if (isShowMiniQuiz && child[e]['get_time_video'] != '' && child[e]['get_time_video'] != '00:00:00') {
                                            action += '<a title="Chỉnh sửa mini quiz" data-id="' + child[e]['_id'] + '" class="btn-edit-mini-to-lesson" href="javascript:void(0);"><i class="fa fa-question-circle"></i></a>';
                                        }
                                        if (plusLesson) {
                                            action += '<a title="Thêm bài học con" href="javascript:void(0);" onclick=LHM.lessons.add_lecture("' + child[e]['_id'] + '","lecture")><i class="fa fa-plus fs_15"></i></a>';
                                        }
                                        if (child[e]['childs'] && child[e]['childs'].length) {
                                            action += '<a href="javascript:void(0);" class="js-change-show-hide" data-id="' + child[e]['_id'] + '"><i class="fa fa-chevron-down" aria-hidden="true"></i></a>';
                                        }
                                    }
                                    htmlChild += ' <div class="' + button + ' child-item row" data-id="' + child[e]['_id'] + '" data-index="' + index_lesson + '">';
                                    htmlChild += '<div class="col-sm-'+(lessons.layer_lesson ? 5 : 6)+'">';
                                    htmlChild += '   <strong class="pull-left text-title">';
                                    htmlChild += '       ' + chapter + '';
                                    htmlChild += '       <span id="edit_' + child[e]['_id'] + '"><span><i class="' + child[e]['get_fa'] + '"></i></span> <span class="edit-name-chapter">' + child[e]['name'] + '</span>';
                                    htmlChild += '       </span>';
                                    htmlChild += '   </strong>';
                                    htmlChild += '</div>';
                                    if (!child[e]['is_end_course']) {
                                        htmlChild += '<div class="col-sm-'+(lessons.layer_lesson ? 2 : 1)+' text-center pd-10-0">' + child[e]['try_lesson'] + '</div>';
                                        htmlChild += '<div class="col-sm-1 text-center pd-10-0">' + child[e]['play_video'] + '</div>';
                                        htmlChild += '<div class="col-sm-1 text-center pd-10-0">' + child[e]['text_duration'] + '</div>';
                                        htmlChild += '<div class="col-sm-3 text-center pd-10-0 action">' + action + '</div>';
                                        htmlChild += '<div class="col-sm-12 text-right">' + start_date_html + '</div>';
                                    } else {
                                        htmlChild += '<div class="col-sm-6"></div>';
                                    }
                                    var files = child[e]['files'];
                                    if (files.length > 0) {
                                        htmlChild += '<div class="col-sm-12"><u>Tài liệu</u> <ul class="list-unstyled" style="padding: 0;">';
                                        for (var _b = 0; _b < files.length; _b++) {//icon file
                                            var icon = 'fas fa-file';
                                            var type_file = 'fas fa-file';
                                            var filetype = files[_b]['type'].split("/");
                                            if (filetype[0] === 'image') {
                                                icon = 'far fa-image';
                                                type_file = 'image';
                                            } else if (filetype[1] === 'pdf') {
                                                icon = 'far fa-file-pdf';
                                                type_file = 'pdf';
                                            } else if (filetype[0] === 'audio') {
                                                icon = 'far fa-file-audio';
                                                type_file = 'audio';
                                            } else if (filetype[0] === 'video' && (filetype[1] == 'stream' || typeof filetype[1] == 'undefined')) {
                                                type_file = 'video';
                                                icon = 'fas fa-video';
                                            } else if (files[_b]['type'] == 'youtube') {
                                                type_file = 'youtube';
                                                icon = 'fab fa-youtube';
                                            } else if (files[_b]['type'] == 'vimeo') {
                                                type_file = 'vimeo';
                                                icon = 'fab fa-vimeo';
                                            }
                                            if (files[_b]['rename']) files[_b]['name'] = files[_b]['rename']; else files[_b]['name'] = files[_b]['filename'];//overwrite filename
                                            if (window.streamurl) window.streamurl[files[_b]['_id']] = files[_b]['video_info']; else {
                                                window.streamurl = {};
                                                window.streamurl[files[_b]['_id']] = files[_b]['video_info'];
                                            }
                                            if (files[_b]['video_status']) {
                                                if (window.video_status) window.video_status[files[_b]['_id']] = files[_b]['video_status']; else {
                                                    window.video_status = {};
                                                    window.video_status[files[_b]['_id']] = files[_b]['video_status'];
                                                }
                                                if (window.video_status_text) window.video_status_text[files[_b]['_id']] = files[_b]['status_text']; else {
                                                    window.video_status_text = {};
                                                    window.video_status_text[files[_b]['_id']] = files[_b]['status_text'];
                                                }
                                            }
                                            if (type_file == 'video' && !files[_b]['video_info'].length) {
                                                if (files[_b]['video_status'] == 2) {//wait transcoding
                                                    htmlChild += '<li><a href="javascript:void(0);"><i class="' + icon + '"></i> ' + files[_b]['name'] + ' </a>';
                                                    htmlChild += '<div class="dateago"> <span class="badge badge-danger">Lỗi video: ' + files[_b]['status_text'] + '</span></div></li>';
                                                } else {//wait transcoding
                                                    htmlChild += '<li><a href="javascript:void(0);"><i class="' + icon + '"></i> ' + files[_b]['name'] + ' </a>';
                                                    htmlChild += '<div class="dateago"> <span class="badge badge-success">VIDEO ĐANG XỬ LÝ...</span></div></li>';
                                                }
                                            } else if (type_file == 'youtube') {//open popup player
                                                htmlChild += '<li><a href="javascript:void(0);" onclick="LHM.library.play_video(\'' + files[_b]['url_file'] + '\', \'youtube\')"><i class="' + icon + '"></i> ' + files[_b]['name'] + ' </a></li>';
                                            } else if (type_file == 'vimeo') {//open popup player
                                                htmlChild += '<li><a href="javascript:void(0);" onclick="LHM.library.play_video(\'' + files[_b]['url_file'] + '\', \'vimeo\')"><i class="' + icon + '"></i> ' + files[_b]['name'] + ' </a></li>';
                                            } else if (files[_b]['viewer'] == 1 && type_file == 'pdf') {//open popup player
                                                htmlChild += '<li><a href="javascript:void(0);" onclick="LHM.library.viewer_document(\'' + files[_b]['_id'] + '\', \'application/pdf\')"><i class="' + icon + '"></i> <span id="filename_' + files[_b]['_id'] + '">' + files[_b]['name'] + '</span></a></li>';
                                            } else if (files[_b]['viewer'] == 1 && files[_b]['type'] == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || files[_b]['type'] == 'application/vnd.ms-excel' || files[_b]['type'] == 'application/vnd.ms-powerpoint' || files[_b]['type'] == 'application/vnd.openxmlformats-officedocument.presentationml.presentation' || files[_b]['type'] == 'application/msword' || files[_b]['type'] == 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') {//open popup player
                                                htmlChild += '<li><a href="javascript:void(0);" onclick="LHM.library.viewer_document(\'' + files[_b]['url_file'] + '\', \'doc\')"><i class="' + icon + '"></i> <span id="filename_' + files[_b]['_id'] + '">' + files[_b]['name'] + '</span></a></li>';
                                            } else if (files[_b]['video_info'].length) {//open popup player
                                                htmlChild += '<li><a href="javascript:void(0);" onclick="LHM.library.play_video(\'' + files[_b]['_id'] + '\')"><i class="' + icon + '"></i> ' + files[_b]['name'] + ' </a></li>';
                                            } else {//open new window
                                                htmlChild += '<li><a href="' + files[_b]['url_file'] + '" target="_blank"><i class="' + icon + '"></i> ' + files[_b]['name'] + ' </a></li>';
                                            }
                                        }
                                        htmlChild += ' </ul></div>';
                                    }
                                    if (child[e]['childs'] && child[e]['childs'].length) {
                                        htmlChild += '<div class="col-sm-12 chapter-no-' + child[e]['_id'] + '"><div class="js-show-hide childs-childs not-end border mb-2">';
                                        htmlChild += genChild(child[e]['childs']);
                                        htmlChild += '</div></div>';
                                    }
                                    htmlChild += ' </div>';
                                }
                                return htmlChild;
                            };
                            var isShowMiniQuiz = lessons.is_show_mini_quiz;
                            var lesson = lessons.data;
                            var count_chapter = 0;
                            var html = '', htmlList = '', htmlEndCourse = '';
                            var index_lesson = 0, class_button = '', style_none = '';
                            for (var i = 0; i < lesson.length; i++) {
                                if (lesson[i]['parent_id'] == 0) {
                                    var button = 'well';
                                    var chapter = '';
                                    var icon_status = '';
                                    html = '';
                                    if (lesson[i]['status'] == 2) {
                                        icon_status = '<i style="color: red" class="fa fa-eye-slash fs_15"></i>';
                                    } else if (lesson[i]['status'] == 1) {
                                        icon_status = '<i class="fa fa-eye fs_15"></i>';
                                    }
                                    var icon_status_lesson_parent = '';
                                    var tittle_status_lesson = '';
                                    if (lesson[i]['status_lesson'] == 0) {
                                        icon_status_lesson_parent = '<i class="fa fa-unlock"></i>';
                                        tittle_status_lesson = "Công khai";
                                    } else {
                                        icon_status_lesson_parent = '<i class="fa fa-lock"></i>';
                                        tittle_status_lesson = "Không công khai";
                                    }
                                    var icon_pin_lesson_parent = '';
                                    var tittle_pin_parent = '';
                                    if (lesson[i]['pin'] == 1) {
                                        icon_pin_lesson_parent = '<i style="color: red" class="fa fa-thumb-tack"></i>';
                                        tittle_pin_parent = "Bỏ ghim";
                                    } else {
                                        icon_pin_lesson_parent = '<i class="fa fa-thumb-tack"></i>';
                                        tittle_pin_parent = "Ghim lên đầu";
                                    }
                                    var action = '';
                                    if (!lesson[i]['is_end_course']) {
                                        action += '     <a title="' + tittle_pin_parent + '" href="javascript:void(0);" status_pin="' + lesson[i]['pin'] + '" onclick=LHM.lessons.change_status_pin(this,"' + lesson[i]['_id'] + '")>' + icon_pin_lesson_parent + '</a>';
                                        action += '     <a title="' + tittle_status_lesson + '" href="javascript:void(0);" status_lesson="' + lesson[i]['status_lesson'] + '" onclick=LHM.lessons.change_status(this,"' + lesson[i]['_id'] + '")>' + icon_status_lesson_parent + '</a>';
                                        action += '<a title="Sửa tên chương" href="javascript:void(0);" data-time="' + lesson[i]['time_chapter'] + '" onclick=LHM.lessons.editChapterModal(this,"' + lesson[i]['_id'] + '")  ><i class="fa fa-edit"></i></a>';
                                        action += '   <a title="Xóa Chương học" href="javascript:void(0);" type_remove="parrent" onclick=LHM.lessons.remove_lesson(this,"' + lesson[i]['_id'] + '")><i class="fas fa-trash-alt fs_15"></i></a>';
                                        action += '   <a title="Nhân Bản Chương học" href="javascript:void(0);" type_remove="parrent" onclick=LHM.lessons.duplicateLesson("' + lesson[i]['_id'] + '")><i class="fa fa-copy fs_15"></i></a>';
                                    }
                                    html += ' <div class="parent parent-' + lesson[i]['_id'] + ' clearfix" data-id="' + lesson[i]['_id'] + '">';
                                    html += '   <div class="lesson-content">';
                                    html += ' <div class="' + button + ' row parent-title">';
                                    html += '   <div class="col-sm-'+(lessons.layer_lesson ? 5 : 6)+'" style="display: flex; gap: 14px; align-items: center;">';
                                    html += '   <strong class="pull-left text-title">';
                                    if (!lesson[i]['is_end_course']) {
                                        html += '   <i class="fa fa-arrows-alt" aria-hidden="true"></i>';
                                    }
                                    html += '       <span id="edit_' + lesson[i]['_id'] + '"> <span class="edit-name-chapter">' + lesson[i]['name'] + '</span>';
                                    html += '       </span>';
                                    html += '   </strong>';
                                    if (array_number_hide.length && array_number_hide.indexOf(i) !== -1) {
                                        class_button = 'fa-chevron-right';
                                    } else {
                                        class_button = 'fa-chevron-down';
                                    }
                                    if (lesson[i]['childs'].length > 0) {
                                        action += '   <a href="javascript:void(0);" class="js-change-show-hide" data-id="' + lesson[i]['_id'] + '"><i class="fa ' + class_button + '" aria-hidden="true"></i></a>' + '</div>';
                                    }
                                    html += '</div>';
                                    if (!lesson[i]['is_end_course']) {
                                        html += '   <div class="col-sm-'+(lessons.layer_lesson ? 2 : 1)+' text-center text-bold">Học thử</div>';
                                        html += '   <div class="col-sm-1 text-center text-bold">Xem</div>';
                                        html += '   <div class="col-sm-1 text-center text-bold">Thời lượng</div>';
                                        html += '   <div class="col-sm-3 text-center text-bold action">' + action + '</div>';
                                    } else {
                                        html += '   <div class="col-sm-5"></div>';
                                    }
                                    html += ' <div class="clearfix"></div>';
                                    html += '   </div>';
                                    if (array_number_hide.length && array_number_hide.indexOf(i) !== -1) {
                                        style_none = 'display:none';
                                    } else {
                                        style_none = '';
                                    }
                                    if (!lesson[i]['is_end_course']) {
                                        html += "<div class=\"childs js-show-hide\" style=\"".concat(style_none, "\">");
                                    } else {
                                        html += '<div>';
                                    }
                                    if (lesson[i]['childs'].length > 0) {
                                        var child = lesson[i]['childs'];
                                        html += genChild(child, !!lessons.add_lesson_child);
                                    }
                                    html += ' </div>';
                                    if (!lesson[i]['is_end_course']) {
                                        html += '<div class="clearfix js-show-hide" style="padding: 10px;' + style_none + '"><a title="Thêm bài học" class="btn btn-success" href="javascript:void(0);" onclick=LHM.lessons.add_lecture("' + lesson[i]['_id'] + '","lecture")><i class="fa fa-plus fs_15"></i> Thêm bài học</a></div>';
                                        html += ' </div>';
                                        html += ' </div>';
                                        htmlList += html;
                                    } else {
                                        html += ' </div>';
                                        html += ' </div>';
                                        htmlEndCourse += html;
                                    }
                                }
                            }
                            $('#list_lessons').html(htmlList);
                            if (htmlEndCourse) {
                                $('#lesson_end').html(htmlEndCourse);
                            }
                            setTimeout(function () {
                                $('.childs').sortable({
                                    connectWith: '.childs', start: function start(e, ui) {
                                        $(this).closest('#list_lessons').addClass('notify');
                                    }, update: function update(e, ui) {
                                        var child_item = $(this).closest('.childs').find('.child-item'),
                                            parent_lesson_id = $(this).closest('.parent').attr('data-id');
                                        $.each(child_item, function (k, v) {
                                            $(this).find('.chap_num').html(k + 1);
                                        });
                                        var data = $(this).sortable('toArray', {attribute: 'data-id'});
                                        if (data.length) {
                                            var notify = false;
                                            if ($(this).closest('#list_lessons').hasClass('notify')) {
                                                $(this).closest('#list_lessons').removeClass('notify');
                                                notify = true;
                                            }
                                            LHM.lessons.updateLessonNum(data, parent_lesson_id, notify);
                                        }
                                    }
                                });// $('.childs .child-item').disableSelection();
                                $('.childs-childs').each(function () {
                                    if ($(this).closest('.childs-childs').find('.child-item').length > 1) {
                                        $(this).sortable({
                                            start: function start(e, ui) {
                                                $(this).closest('#list_lessons').addClass('notify');
                                            }, update: function update(e, ui) {
                                                var child_item = $(this).closest('.childs-childs').find('.child-item'),
                                                    parent_lesson_id = $(this).closest('.child-item').attr('data-id');
                                                $.each(child_item, function (k, v) {
                                                    $(this).find('.chap_num').html(k + 1);
                                                });
                                                var data = $(this).sortable('toArray', {attribute: 'data-id'});
                                                if (data.length) {
                                                    var notify = false;
                                                    if ($(this).closest('#list_lessons').hasClass('notify')) {
                                                        $(this).closest('#list_lessons').removeClass('notify');
                                                        notify = true;
                                                    }
                                                    LHM.lessons.updateLessonNum(data, parent_lesson_id, notify);
                                                }
                                            }
                                        });
                                    }
                                });
                                if (parent_id && parent_id != '') {
                                    var div_offsetTop = $('.parent-' + parent_id).offset().top;
                                    $('body,html').animate({scrollTop: div_offsetTop}, 1000, 'swing');
                                }
                            }, 500);
                        }
                    } else if (lessons.login && lessons.login == 2) {
                        window.location = lessons.href;
                    }
                }
            });
        }, click_date: function click_date(id) {
            $('#' + id).trigger('click');
        }, remove_lesson: function remove_lesson(current, _id) {
            var val_post = {_token: $.cookie('_token'), lesson_id: _id, course_id: cid};
            $.confirm({
                title: 'Thông báo', content: 'Bạn có muốn xóa bài học này?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/lessons/manageLesson/remove',
                            data: val_post,
                            dataType: 'json',
                            success: function success(_success8) {
                                if (_success8.login && _success8.login == 1) {
                                    if (!_success8.error) {
                                        if ($(current).attr('type_remove') == 'parrent') {
                                            var list_lessons = $(current).closest('#list_lessons');
                                            $(current).closest(".parent").remove();
                                        } else {
                                            var list_child = $(current).closest('.childs');
                                            $(current).closest(".well").remove();
                                        }
                                        LHM.common.notify(null, 'success', _success8.msg ? _success8.msg : 'Xóa thành công');
                                    } else {
                                        LHM.common.notify(null, 'danger', _success8.msg ? _success8.msg : 'có lỗi xảy ra');
                                    }
                                } else if (_success8.login && _success8.login == 2) {
                                    window.location = _success8.href;
                                }
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }, duplicateLesson: function duplicateLesson(lesson_id) {
            var copy_to_course_id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
            var chapter_name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
            var to_chapter = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
            var val_post = {
                _token: $.cookie('_token'),
                lesson_id: lesson_id,
                copy_to_course_id: copy_to_course_id,
                chapter_name: chapter_name,
                to_chapter: to_chapter
            };
            $.confirm({
                title: 'Thông báo', content: 'Xác nhận nhân bản?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/lessons/duplicateLesson',
                            data: val_post,
                            dataType: 'json',
                            success: function success(_success9) {
                                LHM.lessons.list_lessons();
                                LHM.common.notify(null, 'success', _success9.msg);
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }, convertVideoToAws: function convertVideoToAws(lesson_id, video_id) {
            var val_post = {_token: $.cookie('_token'), lesson_id: lesson_id, video_id: video_id};
            $.confirm({
                title: 'Thông báo', content: 'Xác nhận upload video lên Aws?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/lessons/convertVideoToAws',
                            data: val_post,
                            dataType: 'json',
                            success: function success(_success10) {
                                console.log('success', _success10);
                                LHM.lessons.list_lessons();
                                Object.values(_success10.msg).forEach(function (values) {
                                    LHM.common.notify(null, 'warning', values);
                                });
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }, completeCourse: function completeCourse(current, user_id, course_id) {
            var val_post = {_token: $.cookie('_token'), user_id: user_id, course_id: course_id};
            $.confirm({
                title: 'Thông báo',
                content: 'Bạn có muốn cấp kết quả học tập cho học viên này?',
                buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/lessons/manageLesson/create_process_study',
                            data: val_post,
                            dataType: 'json',
                            success: function success(res) {
                                if (res.login && res.login == 1) {
                                    if (!res.error) {
                                        $(current).remove();
                                        $('.' + user_id + '_' + course_id).attr('aria-valuenow', 0);
                                        $('.' + user_id + '_' + course_id).attr('aria-valuemax', 100);
                                        $('.' + user_id + '_' + course_id).css('width', "100%");
                                        $('.' + user_id + '_' + course_id).css('color', "black");
                                        $('.' + user_id + '_' + course_id).html("100%");
                                    }
                                } else if (res.login && res.login == 2) {
                                    window.location = res.href;
                                }
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }, removeStudentStudyLHM: function removeStudentStudyLHM(current, user_id, course_id) {
            var val_post = {_token: $.cookie('_token'), user_id: user_id, course_id: course_id};
            $.confirm({
                title: 'Thông báo',
                content: 'Bạn có muốn xóa kết quả học tập này?',
                buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/lessons/manageLesson/remove_process_study',
                            data: val_post,
                            dataType: 'json',
                            success: function success(res) {
                                if (res.login && res.login == 1) {
                                    if (!res.error) {
                                        $(current).remove();
                                        $('.' + user_id + '_' + course_id).attr('aria-valuenow', 0);
                                        $('.' + user_id + '_' + course_id).attr('aria-valuemax', 100);
                                        $('.' + user_id + '_' + course_id).css('width', "0%");
                                        $('.' + user_id + '_' + course_id).css('color', "black");
                                        $('.' + user_id + '_' + course_id).html("0%");
                                    }
                                } else if (res.login && res.login == 2) {
                                    window.location = res.href;
                                }
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }, createCertificate: function createCertificate(current, user_id, course_id) {
            var val_post = {_token: $.cookie('_token'), user_id: user_id, course_id: course_id};
            $.confirm({
                title: 'Thông báo',
                content: 'Bạn có muốn cấp chứng chỉ cho trường hợp này?',
                buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/lessons/manageLesson/create_certificate',
                            data: val_post,
                            dataType: 'json',
                            success: function success(res) {
                                if (res.login && res.login == 1) {
                                    if (!res.error) {
                                        $(current).remove();
                                        LHM.common.notify(null, 'success', 'Cấp chứng chỉ thành công');
                                    }
                                } else if (res.login && res.login == 2) {
                                    window.location = res.href;
                                }
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }, editChapterModal: function editChapterModal(current, _idLessons) {
            var title = $('#edit_' + _idLessons);
            var name = title.find('.edit-name-chapter').html();
            console.log('name', name);
            var userChapterStudyTime = $(current).closest('#list_lessons').data('user_chapter_study_time');
            var content = ' <div class="form-group">\n' + '    <label >Tên chương</label>\n' + '    <input type="text" class="form-control name-chapter" placeholder="Tên chương" value="' + name + '">\n' + '     <p class="error-name" style="color: red;"></p>\n' + '  </div>';
            if (userChapterStudyTime) {
                var time = $(current).data('time');
                time = time ? time : 0;
                content += '<div  class="mb-4">\n' + '     <div class="input-group">\n' + '         <input type="text" class="form-control" placeholder="Thời lượng chương học" name="time" value="' + time + '">\n' + '            <div class="input-group-append">\n' + '                 <span class="input-group-text" id="basic-addon2">phút</span>\n' + '             </div>\n' + '     </div>\n' + '    <p class="error-time" style="color: red;"></p>\n' + '</div>';
            }
            $.confirm({
                title: "Ch\u1EC9nh s\u1EEDa ch\u01B0\u01A1ng: ".concat(name),
                columnClass: 'col-md-6',
                content: content,
                scrollToPreviousElement: false,
                scrollToPreviousElementAnimate: false,
                onContentReady: function onContentReady() {
                },
                buttons: {
                    formSubmit: {
                        text: 'OK', btnClass: 'btn-blue', action: function action() {
                            var error = this.$content.find('.error-name'),
                                name_chapter = this.$content.find('.name-chapter').val(), timeChapter = null;
                            error.html('');
                            if (!name_chapter) {
                                error.html('Vui lòng nhập tên chương');
                                return false;
                            }
                            var val_post = {
                                _token: $.cookie('_token'),
                                id_lesson: _idLessons,
                                course_id: cid,
                                lesson_name: name_chapter
                            };
                            if (userChapterStudyTime) {
                                val_post.time_chapter = this.$content.find('[name=time]').val();
                            }
                            $.ajax({
                                type: 'POST',
                                url: base_url + '/lessons/manageLesson/edit',
                                data: val_post,
                                dataType: 'json',
                                success: function success(res) {
                                    if (res.msg.length > 0) {
                                        for (var i = 0; i < res.msg.length; i++) {
                                            if (res.error) {
                                                LHM.common.notify(null, 'danger', res.msg[i]);
                                            } else {
                                                LHM.common.notify(null, 'success', res.msg[i]);
                                            }
                                        }
                                    }
                                    if (!res.error) {
                                        $('#edit_' + _idLessons + ' .edit-name-chapter').html(name_chapter);
                                        if (userChapterStudyTime) {
                                            console.log(val_post.time_chapter);
                                            if (typeof val_post.time_chapter == 'string') {
                                                $(current).data('time', 0);
                                            } else {
                                                $(current).data('time', val_post.time_chapter ? val_post.time_chapter : 0);
                                            }
                                        }
                                    }
                                },
                                error: function error(err) {
                                    LHM.common.notify(null, 'danger', 'Có lỗi xảy ra');
                                    return false;
                                }
                            });
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, editChapter: function editChapter(current, _idLessons) {
            if (_idLessons && _idLessons !== '' && $("#chapterName-" + _idLessons).length === 0) {
                var title = $('#edit_' + _idLessons);
                var name = title.find('.edit-name-chapter').html();
                $('.lesson-num-' + _idLessons).text();
                var html = '<span>';
                html += '  <input type="text" style="width: 400px; color: #000000;display:inline-block;" class="input-step form-control" id="chapterName-' + _idLessons + '" value="' + name + '"><a class="btn btn-inverse" onclick=LHM.lessons.edit_chapter("' + _idLessons + '")><i class="fa fa-save"></i></a>';
                html += '</span>';
                title.find('.edit-name-chapter').html(html);
                title.find('.acts').hide();
            }
        }, edit_chapter: function edit_chapter(_idLessons) {
            var val_post = {
                _token: $.cookie('_token'),
                id_lesson: _idLessons,
                course_id: cid,
                lesson_name: $('#chapterName-' + _idLessons).val(),
                chapter_name: $('#chapterName-order-' + _idLessons).val()
            };
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/manageLesson/edit',
                data: val_post,
                dataType: 'json',
                success: function success(_success11) {
                    if (_success11.login && _success11.login == 1) {
                        if (!_success11.error) {
                            $('#edit_' + _idLessons).find('.edit-name-chapter').html($('#chapterName-' + _idLessons).val());
                            $('#edit_' + _idLessons).find('.acts').show();
                            $('.lesson-num-' + _idLessons).html($('#chapterName-order-' + _idLessons).val());
                        }
                        if (_success11.error && _success11.msg && _success11.msg.length > 0) {
                            for (var i = 0; i < _success11.msg.length; i++) {
                                LHM.common.notify(null, 'warning', _success11.msg[i]);
                            }
                        }
                    } else if (_success11.login && _success11.login == 2) {
                        window.location = _success11.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, add_lesson_submit: function add_lesson_submit(lesson_name) {
            var timeChapter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
            var data = {course_id: id_course, lesson_name: lesson_name, _token: $.cookie('_token')};
            if (timeChapter) {
                data.time_chapter = timeChapter;
            }
            $.ajax({
                type: 'POST',
                data: data,
                url: base_url + '/lessons/manageLesson/add',
                dataType: 'json',
                success: function success(lessons) {
                    if (lessons.login && lessons.login == 1) {
                        if (lessons && !lessons.error) {
                            LHM.common.notify(null, 'info', lessons.msg);
                            var parent_id = false;
                            if (!lessons.lesson_parent) {
                                parent_id = lessons.data.detail_id;
                            }
                            LHM.lessons.list_lessons(parent_id);
                        }
                        if (lessons.error && lessons.msg && lessons.msg.length > 0) {
                            for (var i = 0; i < lessons.msg.length; i++) {
                                LHM.common.notify(null, 'warning', lessons.msg[i]);
                            }
                        }
                    } else if (lessons.login && lessons.login == 2) {
                        window.location = lessons.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, add_lecture: function add_lecture(_id, type) {
            if ($('.parent-' + _id).find('.child-item:last').attr('data-index')) var index_less = parseInt($('.parent-' + _id).find('.child-item:last').attr('data-index')) + 1; else {
                if ($('.child-item:last').attr('data-index')) var index_less = parseInt($('.child-item:last').attr('data-index')) + 1; else var index_less = 1;
            }
            var html = '<div class="form-group" style="width:100%">';
            html += '    <input type="text" placeholder="Nhập tên bài học" id="name_lecture" class="form-control input-step" value="Bài ' + index_less + ': "/>';
            html += '<div class="invalid-feedback"></div>';
            html += '</div>';
            html += '<div class="form-group m-0"><label><input type="checkbox" name="hide_show_find_lesson" class="hide_show_find_lesson"><span class="label-text"></span> Copy từ một khóa học khác</label></div><div class="box-find-lesson" style="display: none"><div class="form-group"><select name="lecture_course_id" class="form-control js-select2-new" data-not-clear="1" data--ajax="/lessons/getAllCourses"><option value="">Chọn khóa học</option></select></div><div class="form-group"><select name="lecture_chapter_id" data-not-clear="1" class="form-control js-select2-new" data-url="/lessons/getLessonByCourseId" data-cascade="course_id:lecture_course_id"><option value="">Chon chương</option></select></div><div class="form-group"><select name="lecture_lesson_id" class="form-control js-select2-new" data-not-clear="1" data-url="/lessons/getLessonByCourseId" data-cascade="course_id:lecture_course_id,parent_id:lecture_chapter_id"><option value="">Chon Bài học</option></select></div></div>';
            $.confirm({
                title: 'Thêm bài học',
                columnClass: 'col-md-6',
                content: html,
                onContentReady: function onContentReady() {
                    LHM.common.genSelect2New();
                    var that = this;
                    this.$content.find('.hide_show_find_lesson').click(function () {
                        that.$content.find('.box-find-lesson').toggle('slow');
                    });
                    that.$content.find('#name_lecture').keyup(function () {
                        $(this).addClass('u-keyup')
                    })
                    that.$content.find('select[name=lecture_lesson_id]').change(function () {
                        let name_lesson = that.$content.find('#name_lecture')
                        if($(this).val() && !name_lesson.hasClass('u-keyup')) {
                            name_lesson.val($(this).find('option:selected').text())
                        }
                    })
                },
                buttons: {
                    OK: {
                        text: 'OK', btnClass: 'btn-blue', action: function action() {
                            var lesson_name = $('#name_lecture').val();
                            var error = this.$content.find('.invalid-feedback');
                            var select_lesson_id = this.$content.find('[name=lecture_lesson_id]').val();
                            var _this = this;
                            _this.$content.find('.invalid-feedback').hide();
                            if (!lesson_name) {
                                _this.$content.find('.invalid-feedback').show();
                                error.html('Vui lòng nhập bài học');
                                return false;
                            } else {
                                if (this.$content.find('[name="hide_show_find_lesson"]').prop('checked')) {
                                    if (!select_lesson_id) {
                                        _this.$content.find('.invalid-feedback').show();
                                        error.html('Vui lòng chọn bài học muốn copy');
                                        return false;
                                    } else {
                                        LHM.lessons.duplicateLesson(select_lesson_id, cid, lesson_name, _id);
                                        this.close();
                                    }
                                } else {
                                    var val_post = {
                                        _token: $.cookie('_token'),
                                        type: type,
                                        course_id: cid,
                                        live_id: clid,
                                        chapter_id: _id,
                                        lesson_name: lesson_name
                                    };
                                    $.ajax({
                                        type: 'POST',
                                        url: base_url + '/lessons/manageLesson/add',
                                        data: val_post,
                                        dataType: 'json',
                                        success: function success(rs) {
                                            if (rs.login && rs.login == 1) {
                                                if (rs.error) {
                                                    for (var i in rs.msg) {
                                                        var _error2 = '';
                                                        for (var i in rs.msg) {
                                                            _error2 += '- ' + rs.msg[i] + '<br>';
                                                        }
                                                        _this.$content.find('.invalid-feedback').html(_error2).show();
                                                    }
                                                } else {
                                                    _this.close();
                                                    LHM.lessons.list_lessons();
                                                }
                                            } else if (rs.login && rs.login == 2) {
                                                window.location = rs.href;
                                            }
                                        }
                                    });
                                    return false;
                                }
                            }
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, addTag: function addTag(lesson_id) {
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/manageLesson/addtagtolesson',
                data: {
                    lid: lesson_id,
                    _token: $.cookie('_token'),
                    tags: $('#tags-content').find('.form-group input[type=text]').val()
                },
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.notify(null, 'success', 'Cập nhật tag thành công');
                        $('.alert').css({'z-index': 9999999999});
                        LHM.lessons.getTagLesson(lesson_id);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, addTagByClick: function addTagByClick(current) {
            var list_tag = $('#tags-content').find('.form-group input[type=text]').val();
            var new_tag = $(current).text();
            new_tag = new_tag.trim();
            var list_tag_lower_case = [];
            list_tag = list_tag.split(',');
            for (var i = 0; i < list_tag.length; i++) {
                list_tag_lower_case[i] = list_tag[i].toLowerCase();
            }
            if (jQuery.inArray(new_tag.toLowerCase(), list_tag_lower_case) < 0) {
                list_tag.push(new_tag);
                $('#' + $('#tags-content').find('.form-group input[type=text]').attr('id')).importTags(list_tag.join(','));
                $(current).removeAttr('onclick');
                $(current).addClass('active_tag');
            } else {
                $('#' + $('#hash_tag_lessons').attr('id') + '_tag').addClass('not_valid');
                $('#hash_tag_lessons').importTags(list_tag.join(','));
                $('#' + $('#hash_tag_lessons').attr('id') + '_tag').val(new_tag);
                $('#' + $('#hash_tag_lessons').attr('id') + '_tag').focus();
            }
        }, getTagLesson: function getTagLesson(lesson_id) {
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/manageLesson/loadTag',
                data: {lid: lesson_id, _token: $.cookie('_token')},
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        $('#list-tags').html('');
                        var tags = rs.tags;
                        var tag_val = rs.old_tags;
                        if (tags.length > 0) {
                            var tag_val;
                            var html = '';
                            var arr_tag = tag_val.split(',');
                            html += '<ul class="list-tags" style="padding: 0;">';
                            for (var _b2 = 0; _b2 < tags.length; _b2++) {
                                if (parseInt(arr_tag.indexOf(tags[_b2])) >= 0) {
                                    html += '<li><a href="javascript:" target="_blank" class="tag-item active_tag"><i class="fa fa-tag"></i> ' + tags[_b2] + ' </a></li>';
                                } else {
                                    html += '<li><a href="javascript:" target="_blank" class="tag-item" onclick="LHM.lessons.addTagByClick(this)"><i class="fa fa-tag"></i> ' + tags[_b2] + ' </a></li>';
                                }
                            }
                            html += ' </ul>';
                            html += '<div class="clearfix"></div>';
                            $('#list-tags').html(html);
                            $('#hash_tag_lessons').importTags(tag_val);
                        }
                        $('#hash_tag_lessons').tagsInput({
                            autocomplete_url: base_url + '/sites/getTagOfLesson',
                            defaultText: 'Nhập từng tag sau đó Enter....',
                            autocomplete: {selectFirst: true, autoFill: true},
                            removeWithBackspace: false,
                            width: '100%',
                            height: '200px',
                            minInputWidth: '225px',
                            onAddTag: function onAddTag(value) {
                                var list_tag = $(this).val();
                                var list_tag_lower_case = [];
                                list_tag = list_tag.split(',');
                                list_tag.pop();
                                for (var i = 0; i < list_tag.length; i++) {
                                    list_tag_lower_case[i] = list_tag[i].toLowerCase();
                                }
                                if (jQuery.inArray(value.toLowerCase(), list_tag_lower_case) < 0) {
                                    list_tag.push(value);
                                    $(this).importTags(list_tag.join(','));
                                } else {
                                    $('#' + $(this).attr('id') + '_tag').addClass('not_valid');
                                    $(this).importTags(list_tag.join(','));
                                    $('#' + $(this).attr('id') + '_tag').val(value);
                                    $('#' + $(this).attr('id') + '_tag').focus();
                                }
                                $('.ui-autocomplete').hide();
                            },
                            onRemoveTag: function onRemoveTag(value) {
                                var tag = value;
                                $('ul.list-tags li a.active_tag').each(function (index, el) {
                                    var tag_curr = $(el).text();
                                    if (tag_curr.trim() == tag) {
                                        $(el).removeClass('active_tag');
                                        $(el).attr('onclick', 'LHM.lessons.addTagByClick(this)');
                                    }
                                });
                            }
                        });
                        $('.ui-autocomplete').css({"z-index": 99999999});
                        $('#' + $('#tags-content').find('.form-group input[type=text]').attr('id') + '_tagsinput').css({'border': 'none'});
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, setDurationLesson: function setDurationLesson(lesson_id, duration) {
            if (!lesson_id) {
                lesson_id = '';
            }
            if (!duration || !$.isNumeric(duration)) {
                duration = 0;
            }
            $.confirm({
                title: 'Chỉnh sửa thời lượng bài học video',
                columnClass: 'col-md-5',
                content: '' + '<div class="form-group">' + '<label>Thời lượng (giây)</label>' + '<input type="number" min="0" class="form-control input-number" id="video_duration" placeholder="Thời gian (giây)" value="' + duration + '">' + '</div><div class="invalid-feedback"></div>',
                type: 'blue',
                scrollToPreviousElement: false,
                scrollToPreviousElementAnimate: false,
                buttons: {
                    formSubmit: {
                        text: 'OK', btnClass: 'btn-blue', action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').hide();
                            var video_duration = this.$content.find('#video_duration').val();
                            if ($.isNumeric(video_duration) && video_duration >= 0) {
                                $.post('/lessons/updateDuration', {
                                    lessonId: lesson_id,
                                    duration: video_duration,
                                    _token: $.cookie('_token')
                                }, function (rs) {
                                    if (rs.success) {
                                        $('.duration-' + lesson_id).attr('onclick', 'LHM.lessons.setDurationLesson(\'' + lesson_id + '\', ' + video_duration + ')').html(rs.timeText);
                                        _this.close();
                                    } else {
                                        _this.$content.find('.invalid-feedback').html(rs.ms ? rs.ms : 'Có lỗi xảy ra').show();
                                    }
                                });
                            } else {
                                _this.$content.find('.invalid-feedback').html('Thời lượng phải là số nguyên dương').show();
                            }
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, setting: function setting(lesson_id) {
            var html_switch = '<label style="margin-bottom: 10px;">Hoàn thành bài học trước</label>' + '<label class="chk-switch" >' + '<input type="checkbox" id="chk-skip-lesson" name="skip-lesson" data-lid="' + lesson_id + '">' + '<span class="chk-slider round"></span>' + '</label>';
            $.alert({
                title: 'Cài đặt bài học',
                columnClass: "col-sm-10",
                content: '<script src="' + base_url + '/statics/plugins/upload/js/jquery.iframe-transport.js"></script>' + '<script src="' + base_url + '/statics/plugins/upload/js/jquery.fileupload.js"></script>' + '<style>' + '.choice-item, .choice-item-left {' + 'display: flex;' + 'cursor: pointer;' + '}' + '.control-label {' + 'font-size: 13px!important;' + 'margin-bottom: 5px;' + 'color: #000!important;' + 'line-height: 22px;' + 'font-weight: 600;' + 'padding-left: 0;' + '}' + '.choice-item' + '{' + 'border-bottom: 1px solid #ccc;' + '}' + '.choice-item:not(:last-child) .choice-item-content {' + 'border-bottom: none;' + '}' + '.choice-item .choice-item-content {' + 'display: flex;' + 'width: 100%;' + 'border: 1px solid #c2cad8;' + '}' + '.choice-item-left {' + 'background-color: #fff;' + 'width: 50%;' + 'border-right: 1px solid #c2cad8;' + 'display: flex;' + 'justify-content: center;' + '}' + '.choice-padding {' + 'padding: 4px 0;' + '}' + '.choice-item-left:last-child {' + 'border-right: none;' + '}' + '.choice-key {' + 'max-width: 80%;' + 'text-align: center;' + 'line-height: 34px;' + '}' + '.choice-correct {' + 'width: 35px;' + '}' + '.choice-item-content input[type=checkbox], input[type=radio] {' + 'margin: 0;' + '}' + '.choice-item input {' + 'border: none;' + '}' + 'input[type="radio"]:focus,input[type="radio"]:active {' + 'outline: none !important;' + 'outline-color: transparent !important;' + '}' + '.form-control {' + 'outline: 0!important;' + 'box-shadow: none!important;' + '}' + '.btn-type-question{' + 'padding: 20px 0px;' + 'margin: 10px 0;' + '}' + '.btn-type-question i{' + 'font-size: 34pt;' + 'display: block;' + 'margin-bottom: 5px;' + '}' + '.input-group {' + 'display: table;' + 'border-collapse: separate;' + '}' + '.input-group-addon {' + 'padding: 6px 12px;' + 'font-size: 14px;' + 'font-weight: 400;' + 'line-height: 1;' + 'color: #555;' + 'text-align: center;' + 'background-color: #eee;' + 'border: 1px solid #ccc;' + 'border-radius: 4px;' + '}' + '.input-group-addon, .input-group-btn {' + 'width: 1%;' + 'white-space: nowrap;' + 'vertical-align: middle;' + '}' + '.input-group .form-control, .input-group-addon, .input-group-btn {' + 'display: table-cell;' + '}' + '.input-group-addon:last-child {' + 'border-left: 0;' + '}' + '.input-group .form-control {' + 'position: relative;' + 'z-index: 2;' + 'float: left;' + 'width: 100%;' + 'margin-bottom: 0;' + '}' + '.input-group .form-control:last-child, .input-group-addon:last-child, .input-group-btn:first-child > .btn-group:not(:first-child) > .btn, .input-group-btn:first-child > .btn:not(:first-child), .input-group-btn:last-child > .btn, .input-group-btn:last-child > .btn-group > .btn, .input-group-btn:last-child > .dropdown-toggle {' + 'border-bottom-left-radius: 0;' + 'border-top-left-radius: 0;' + '}' + '.form-control {' + 'outline: 0!important;' + 'box-shadow: none!important;' + '}' + '.control-label {' + 'font-size: 13px!important;' + 'margin-bottom: 5px;' + 'color: #000!important;' + 'line-height: 22px;' + 'font-weight: 600;' + 'padding-left: 0;' + '}' + '#sortable1, #sortable2 {' + 'border: 1px solid #c3c2c2;' + 'list-style-type: none;' + 'margin: 0;' + 'height: 200px;' + 'padding: 5px 0 0 0;' + 'overflow-y: scroll;' + 'overflow-x: hidden;' + '}' + '#sortable1 li, #sortable2 li {' + 'margin: 0 5px 5px 5px;' + 'padding: 5px;' + 'font-size: 1.2em;' + 'width: 120px;' + 'cursor: pointer;' + 'width: 97%;' + 'text-align:left;' + '}' + '.select2-container{width:100% !important;}' + '</style>' + '<div id="uploader">' + '<div class="container col-sm-12 ">' + '<ul class="nav nav-tabs justify-content-center" id="myTab" role="tablist">' + '<li class="nav-item">' + '<a class="nav-link active show" id="info-tab" onclick="LHM.lessons.getDescriptionLesson(\'' + lesson_id + '\')" data-toggle="tab" href="#info-content" role="tab" aria-controls="info-content" aria-selected="true">Mô tả bài học</a>' + '</li>' + '<li class="nav-item">' + '<a class="nav-link" id="tags-tab" data-toggle="tab" href="#tags-content" onclick="LHM.lessons.getTagLesson(\'' + lesson_id + '\')" role="tab" aria-controls="tags-content" aria-selected="true">Tags</a>' + '</li>' + '<li class="nav-item">' + '<a class="nav-link" id="photo-tab" data-toggle="tab" href="#photo-content" role="tab" aria-controls="photo-content" aria-selected="true">Ảnh đại diện</a>' + '</li>' + '<li class="nav-item">' + '<a class="nav-link" id="quiz-tab" data-toggle="tab" href="#quiz-content" role="tab" aria-controls="quiz-content" aria-selected="true" onclick="LHM.lessons.get_completeLesson(\'' + lesson_id + '\')">Hoàn thành</a>' + '</li>' + '</ul>' + '<div class="tab-content" id="myTabContent" style="min-height: 200px;background: white;">' + '<div class="tab-pane fade active show" id="info-content" role="tabpanel" aria-labelledby="info-tab">' + '<div class="form-group">' + '<textarea class="form-control" id="info-lesson" placeholder="Mô tả bài học...." cols="10" rows="9" style="border:none;"></textarea>' + '</div>' + '<a href="javascript:;" class="btn btn-success pull-left" data-type="description" onclick="LHM.lessons.updateDescription(\'' + lesson_id + '\')"><i class="fa fa-save"></i> Cập nhật</a>' + '<div class="clearfix"></div>' + '</div>' + '<div class="tab-pane fade" id="tags-content" role="tabpanel" aria-labelledby="tags-tab">' + '<div class="form-group">' + '<input type="text" placeholder="Nhập từng tag sau đó Enter" class="form-control" id="hash_tag_lessons" value=""/>' + '</div>' + '<div id="list-tags" style="margin-bottom: 15px;">' + '</div>' + '<a href="javascript:;" class="btn btn-success pull-left" data-type="tags" onclick="LHM.lessons.addTag(\'' + lesson_id + '\')"><i class="fa fa-save"></i> Cập nhật</a>' + '<div class="clearfix"></div>' + '</div>' + '<div class="tab-pane fade" id="photo-content" role="tabpanel" aria-labelledby="photo-tab">' + '<div class="input-form">' + '<div class="up-description">' + '<span style="font-size: 18px;">Upload</span>' + '<p>(Các định dạng file .jpg, .png)</p>' + '</div>' + '<div class="zone-upload">' + '<div class="progressing-bar"></div>' + '<a href="javascript:;" class="btn btn-success btn-upload" data-type="image"><i class="fa fa-upload"></i> Tải lên</a>' + '</div>' + '</div>' + '<input type="file" id="upload-file" name="files" style="display: none;">' + '<div class="clearfix"></div>' + '</div>' + '<div class="tab-pane fade" id="quiz-content" role="tabpanel" aria-labelledby="quiz-tab">' + '<form method="post" id="form-complete-lesson">' + '<div class="choice-item" >' + '<div class="choice-item-content">' + '<div class="choice-item-left" style="background: #eee;">' + '<div class="choice-correct choice-padding">' + '<input type="radio" class="form-control type_complete_lesson" name="type_complete_lesson" checked value="btn_complete" style="width: 100%;height: 25px;outline-color: transparent; margin-top:5px; ">' + '</div>' + '<div class="choice-key choice-padding">' + 'Xem hết video' + '</div>' + '</div>' + '<div class="choice-item-left">' + '<div class="choice-correct choice-padding">' + '<input type="radio" class="form-control type_complete_lesson" name="type_complete_lesson" value="answer_question" style="width: 100%;height:25px;outline-color: transparent; margin-top:5px;">' + '</div>' + '<div class="choice-key choice-padding">' + 'Trả lời câu hỏi cuối bài' + '</div>' + '</div>' + '<div class="choice-item-left">' + '<div class="choice-correct choice-padding">' + '<input type="radio" class="form-control type_complete_lesson" name="type_complete_lesson" value="auto_complete" style="width: 100%;height:25px;outline-color: transparent; margin-top:5px;">' + '</div>' + '<div class="choice-key choice-padding">' + 'Tự động hoàn thành bài học' + '</div>' + '</div>' + '</div>' + '</div><br>' + '<p class="lbl-suggest"></p>' + '<div id="notify-quiz-complete-test-lesson" class="text-center choice-item-left-content">' + '<div class="row">' + '<div class="col-md-12">' + '<label class="control-label">Phần trăm (%) xem hết video được xem là hoàn thành bài học</label>' + '<input type="number" id="percent_video" class="form-control col-md-4" name="percent_video" min="0" max="100" style="margin:0 auto;" onkeypress="return event.charCode >= 48">' + '</div>' + '<div class="col-md-12 mt-3">' + '<div class="form-group display-none">' + '<label class="control-label"><input id="seeked_complete" type="checkbox" name="seeked_complete"> Tua video vẫn hoàn thành bài học</label>' + '</div>' + '</div>' + '</div>' + '</div>' + '<div class="block-answer-question choice-item-left-content" style="display: none;">' + '<div class="choice-quiz-test type_choice">' + '</div>' + '<div class="form-group mt-10 text-left">' + '<label class="control-label">' + '<input type="checkbox" id="auto_submit_test" name="auto_submit_test">' + ' Tự động hoàn thành sau khi nộp bài Test</label>' + '</div>' + '</div><br>' + '<div class="error-block-quiz-lesson"></div>' + '<button type="submit" class="btn btn-primary btn-addquiztolesson mt-3" onclick="LHM.lessons.completeLesson(this,\'' + lesson_id + '\')"><i class="fa fa-save"></i> Cập nhật</button>' + '</form>' + '<div class="clearfix"></div>' + '</div>' + '</div>' + '</div>' + '</div>',
                type: 'blue',
                buttons: {close: {text: 'Đóng'}},
                onContentReady: function onContentReady() {
                    if (window.location.hostname != "yoga.edubit.vn") {
                        $('#info-tab,#tags-tab,#photo-tab,#info-content,#tags-content,#photo-content').remove();
                        $('#quiz-tab').trigger('click');
                    }
                    $('#chk-skip-lesson').change(function (event) {
                        if ($('#chk-skip-lesson:checked').length) {
                            LHM.lessons.settingCompleteLesson($(this).data('lid'), $(this).val());
                        } else LHM.lessons.settingCompleteLesson($(this).data('lid'), null);
                    });
                    window.setting = this;
                    $('.choice-item-left').click(function (event) {
                        $(this).find('input').prop('checked', true);
                        $('.choice-item-left').css('background', '#fff');
                        $(this).css('background', '#eee');
                        var val_check = $('input[type=radio][name=type_complete_lesson]:checked').val();
                        $('.choice-item-left-content').hide();
                        if (val_check == 'answer_question') {
                            $('.block-answer-question').show();
                            $('.lbl-suggest').text('Học viên cần hoàn thành bài Test cuối video bài học để hoàn thành');
                        } else if (val_check == 'auto_complete') {
                            $('.block-answer-question').hide();
                            $('.lbl-suggest').text('Học viên sẽ tự động hoàn thành bài học sau khi play video hoặc nộp bài kiểm tra');
                        } else {
                            $('#notify-quiz-complete-test-lesson').show();
                            $('.lbl-suggest').text('');
                        }
                    });
                    window.filemanager = this;//handle uploader
                    LHM.uploader.init(function (data_file) {//calbback when upload success
//object file
                        if (data_file._id) {
                            LHM.lessons.addthumbnailtolesson(data_file['_id']['$id'], lesson_id);
                            $('.thumbnail-lessons-' + lesson_id).html('<img src="' + data_file['url'] + '" height="100">' + '<input type="hidden" name="id_image" value="' + data_file['_id']['$id'] + '" id="id_image">');
                        } else {//[datafile, datafile]
                            for (var i in data_file) {
                                LHM.lessons.addthumbnailtolesson(data_file[i]['fid'], lesson_id);
                                $('.thumbnail-lessons-' + lesson_id).html('<img src="' + data_file[i]['url'] + '" height="100">' + '<input type="hidden" name="id_image" value="' + data_file[i]['fid'] + '" id="id_image">');
                            }
                        }//close popup
                        window.filemanager.close();
                    });
                    LHM.lessons.getDescriptionLesson(lesson_id);
                }
            });
        }, setting_general_lesson: function setting_general_lesson(course_id) {
            var content = '<div class="container">' + '                        <form method="post" class="text-center" id="form-complete-general-lesson">' + '                            <input type="hidden" name="id_course" value="' + course_id + '"/>' + '                            <div class="row">' + '                                <div class="col-sm-4 choice-item border">' + '                                    <div class="choice-correct choice-padding">' + '                                        <input type="radio" name="fields[type_complete_lesson]" value="btn_complete">' + '                                    </div>' + '                                    <div class="choice-key choice-padding">' + '                                        Xem hết video' + '                                    </div>' + '                                </div>' + '                                <div class="col-sm-4 choice-item border">' + '                                    <div class="choice-correct choice-padding">' + '                                        <input type="radio" name="fields[type_complete_lesson]" value="answer_question">' + '                                    </div>' + '                                    <div class="choice-key choice-padding">' + '                                        Trả lời câu hỏi cuối bài' + '                                    </div>' + '                                </div>' + '                                <div class="col-sm-4 choice-item border">' + '                                    <div class="choice-correct choice-padding">' + '                                        <input type="radio" name="fields[type_complete_lesson]" value="auto_complete">' + '                                    </div>' + '                                    <div class="choice-key choice-padding">' + '                                        Tự động hoàn thành bài học' + '                                    </div>' + '                                </div>' + '                                <div class="col-sm-12" style="padding-top: 20px">' + '                                    <div class="content-choice btn_complete">' + '                                        <div class="form-group">' + '                                            <label class="control-label"><b>Phần trăm (%) xem hết video được xem là hoàn thành bài học<br/>Cập nhật cho những bài học đã tồn tại video</b></label>' + '                                            <input type="number" id="percent_video" class="form-control col-md-4 input-number" name="fields[percent_video]" min="0" max="100" style="margin:0 auto;">' + '                                        </div>' + '                                        <div class="form-group display-none">' + '                                            <label class="control-label"><b><input id="seeked_complete" type="checkbox" name="fields[seeked_complete]"> Tua video vẫn hoàn thành bài học</b></label>' + '                                        </div>' + '                                    </div>' + '                                    <div class="content-choice answer_question" style="display: none">' + '                                        <label class="control-label">' + '                                            Học viên cần hoàn thành bài Test cuối video bài học để hoàn thành<br/>Cập nhật cho những bài học đã tồn tại video' + '                                        </label>' + '                                        <div class="form-group choice-quiz-test">' + '                                        </div>' + '                                        <div class="form-group">' + '                                            <label class="control-label pull-left"><b><input type="checkbox" id="auto_submit_test" name="fields[auto_submit_test]"> Tự động hoàn thành sau khi nộp bài Test</b></label>' + '                                        </div>' + '                                    </div>' + '                                    <div class="content-choice auto_complete" style="display: none">' + '                                        <label class="control-label">Học viên sẽ tự động hoàn thành bài học sau khi play video hoặc nộp bài kiểm tra</label>' + '                                    </div>' + '                                    <br>' + '                                    <div class="error-block-quiz-lesson"></div>' + '                                </div>' + '                                <div class="col-sm-12"><label class="control-label pull-left"><b><input type="checkbox" name="fields[update_all_lesson]"> Cập nhật cho tất cả bài học <i class="fas fa-question-circle" data-toggle="tooltip" data-placement="right" title="Khi chọn option thì cài đạt chung sẽ cập nhật cho tất cả bài học hiện có trong khóa, nếu không chọn thì chỉ cập nhật cho những bài học chưa có cài đặt."></i></b></label></div>' + '                                <div class="col-sm-12"><a href="javascript:;" id="submit-complete-general-lesson" class="btn btn-primary mt-3"><i class="fa fa-save"></i> Cập nhật</a></div>' + '                            </div>' + '                        </form>' + '                        <style>' + '                            .choice-correct {' + '                                width: 35px;' + '                            }' + '                            .choice-item {' + '                                background-color: #fff;' + '                                width: 50%;' + '                                border-right: 1px solid #c2cad8;' + '                                display: flex;' + '                                cursor: pointer;' + '                                justify-content: center;' + '                            }' + '                            .choice-item input[type="radio"]{' + '                                width: 100%;' + '                                height: 25px;' + '                                outline-color: transparent;' + '                                margin-top: 5px;' + '                            }' + '                            .choice-key {' + '                                max-width: 80%;' + '                                text-align: center;' + '                                line-height: 34px;' + '                            }' + '                            .choice-padding {' + '                                padding: 4px 0;' + '                            }' + '                        </style>' + '                    </div>';
            $.alert({
                title: 'Cài đặt hoàn thành chung',
                columnClass: "col-sm-10",
                content: content,
                type: 'blue',
                buttons: {close: {text: 'Đóng'}},
                onContentReady: function onContentReady() {
                    window.setting = this;
                    $('#form-complete-general-lesson .choice-item').click(function (event) {
                        var val_check = $(this).find('input').val();
                        if (val_check != '') {
                            $(this).find('input').prop('checked', true);
                            $('.choice-item').css('background', '#fff');
                            $(this).css('background', '#eee');
                            $('#form-complete-general-lesson .content-choice').hide();
                            $('#form-complete-general-lesson .' + val_check).show();
                        }
                    });
                    LHM.lessons.get_completeLesson(course_id, true);
                    $("#submit-complete-general-lesson").click(function (e) {
                        var form = $("#form-complete-general-lesson");
                        $('#submit-complete-general-lesson').css('pointer-events', 'none');
                        $.ajax({
                            type: "POST",
                            url: base_url + '/courses/settingCompleteCourse',
                            data: form.serialize() + '&_token=' + $.cookie('_token'),
                            dataType: 'json',
                            success: function success(data) {
                                if (data.success) {
                                    window.setting.close();
                                    LHM.common.notify(null, 'success', 'Cập nhật thành công');
                                } else {
                                    LHM.common.notify(null, 'danger', data.msg ? data.msg : 'Có lỗi xảy ra');
                                    $('#submit-complete-general-lesson').css('pointer-events', 'unset');
                                }
                            }
                        });
                    });
                }
            });
        }, getDescriptionLesson: function getDescriptionLesson(lesson_id) {
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/manageLesson/loadDescription',
                data: {lid: lesson_id, _token: $.cookie('_token')},
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        $('#info-lesson').val(rs.data);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, settingCompleteLesson: function settingCompleteLesson(lesson_id, chk_complete_lesson) {
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/manageLesson/setting_complete_lesson',
                data: {lid: lesson_id, _token: $.cookie('_token'), chk_complete_lesson: chk_complete_lesson},
                dataType: 'json',
                success: function success(rs) {
                    LHM.common.notify(null, 'success', rs.msg);
                }
            });
        }, updateDescription: function updateDescription(lesson_id) {
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/manageLesson/update_description',
                data: {lid: lesson_id, _token: $.cookie('_token'), description: $('#info-lesson').val()},
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.notify(null, 'success', rs.msg);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, filemanager: function filemanager(lesson_id, show_uploader) {
            $.alert({
                title: "Nội dung bài học",
                content: '<div class="container-render"><div class="uploader_targer"></div><div class="filemanager"></div></div>',
                columnClass: "col-sm-10",
                buttons: {close: {btnClass: 'btn-upload-lesson-pop', text: 'Đóng'}},
                onContentReady: function onContentReady() {//clear cache filter image only
                    delete window.uploaderfilterimage;// when content is fetched
                    window.filemanager = this;
                    var data = {};
                    if (show_uploader) {
                        data.show_uploader = true;
                    }
                    $.get(base_url + '/lessons/filemanager/' + lesson_id, data, function (rs) {
                        if (rs.login && rs.login == 1) {
                            if (rs.data.uploader) {//parse uploader
                                window.filemanager.$content.find('.uploader_targer').html(rs.data.uploader);
                            }
                            window.lesson_name = rs.data.lesson[0]['name'];// window.lesson_code = rs.data.lesson[0]['code'];
//parse files
                            var html = '';//attachment
                            var files = rs.data.lesson[0]['files'];//main-video
                            var video = rs.data.lesson[0]['video'];//document
                            var document_leson = rs.data.lesson[0]['document'];
                            var lesson_info = rs.data.lesson[0]['lesson_info'];
                            var document_info = rs.data.lesson[0]['document_info'];
                            var attachh_file = rs.data.lesson[0]['attach_file'];
                            var htmlnew = '';
                            var count = 0;
                            if (lesson_info && 'type' in lesson_info) {
                                count++;
                                var youtubelink = '';
                                var vimeolink = '';
                                if (lesson_info.type === 'youtube') youtubelink = lesson_info.url.replace('watch?v=', 'embed/');
                                if (lesson_info.type === 'vimeo' && new RegExp('^(http|https)?:\/\/vimeo.com').test(lesson_info.url)) {
                                    vimeolink = lesson_info.url.replace('vimeo.com', 'player.vimeo.com/video');
                                }
                                htmlnew += "<tr id=\"lesson_info_".concat(rs.data.lesson[0]._id.$id, "\">\n<td style=\"vertical-align: middle;\">").concat(count, "  </td>\n<td class=\"title-content\" style=\"padding-left: 5px; vertical-align: middle;\">\n<div><a href=\"javascript:void(0);\" onclick=\"LHM.courses.previewvideo(this)\" \ndata-type=\"").concat(lesson_info.type, "\"\ndata-youtubelink=\"").concat(youtubelink, "\"\ndata-vimeolink=\"").concat(vimeolink, "\"\ndata-lessonid=\"").concat(rs.data.lesson[0]._id.$id, "\">\n<i class=\"fa fa-play-circle fs_15\"></i> ").concat(lesson_info.name, " (Video b\xE0i h\u1ECDc) </a>\n</div></td> <td align=\"center\">\n<a href=\"javascript:void(0);\"\ndata-lessonid=\"").concat(rs.data.lesson[0]._id.$id, "\" \ndata-index=\"0\" \ndata-url=\"").concat(lesson_info.url, "\"\nonclick=\"LHM.lessons.removeFileUnicaOfLesson(this,'video','#lesson_info_").concat(rs.data.lesson[0]._id.$id, "')\">\n<i class=\"fa fa-trash\"></i> X\xF3a</a>\n</td></tr>");
                            }
                            if (document_info) {
                                count++;
                                htmlnew += "<tr id=\"document_info_".concat(rs.data.lesson[0]._id.$id, "\">\n<td style=\"vertical-align: middle;\"> ").concat(count, " </td>\n<td class=\"title-content\" style=\"padding-left: 5px; vertical-align: middle;\">\n<div><span>\n<i class=\"far fa-file-powerpoint ").concat(document_info.ext, "\"></i> ").concat(document_info.name, " (B\xE0i gi\u1EA3ng) </span>\n</div></td> <td align=\"center\">\n<a href=\"javascript:void(0);\"\ndata-lessonid=\"").concat(rs.data.lesson[0]._id.$id, "\" \ndata-index=\"0\" \ndata-url=\"").concat(document_info.url, "\"\nonclick=\"LHM.lessons.removeFileUnicaOfLesson(this,'document','#document_info_").concat(rs.data.lesson[0]._id.$id, "')\">\n<i class=\"fa fa-trash\"></i> X\xF3a</a>\n</td></tr>");
                            }
                            if (attachh_file) {
                                attachh_file.forEach(function (element, index) {
                                    count++;
                                    htmlnew += "<tr id=\"file_attach_".concat(index, "\">\n<td style=\"vertical-align: middle;\">  ").concat(count, "</td>\n<td class=\"title-content\" style=\"padding-left: 5px; vertical-align: middle;\">\n<div><a href=\"").concat(element.url, "\" target=\"_blank\">\n<i class=\"far fa-paperclip ").concat(element.ext, "\"></i> ").concat(element.name, " </a>\n</div></td> <td align=\"center\">\n<a href=\"javascript:void(0);\"\ndata-lessonid=\"").concat(rs.data.lesson[0]._id.$id, "\" \ndata-index=\"").concat(index, "\" \ndata-url=\"").concat(element.url, "\"\nonclick=\"LHM.lessons.removeFileUnicaOfLesson(this,'attach','#file_attach_").concat(index, "')\">\n<i class=\"fa fa-trash\"></i> X\xF3a</a>\n</td></tr>");
                                });
                            }//let countnew = count+attachh_file.length
//console.log('countnew='+countnew);
                            if (document_leson.length && !document_info) {
                                if (document_leson[0]['rename']) document_leson[0]['rename'] = document_leson[0]['rename'] + ' (Bài giảng)'; else document_leson[0]['rename'] = document_leson[0]['filename'] + ' (Bài giảng)';
                                files.unshift(document_leson[0]);
                            }
                            if (video.length && (!lesson_info || !('video_id' in lesson_info))) {
                                if (video[0]['rename']) video[0]['rename'] = video[0]['rename'] + ' (Video bài học)'; else video[0]['rename'] = video[0]['filename'] + ' (Video bài học)';
                                files.unshift(video[0]);
                            }
                            if (files.length) {
                                var tmp = 0;
                                for (var i = 0; i < files.length; i++) {
                                    count++;
                                    if (files[i]['status'] != 0) {
                                        files[i]['url_file'] = base_url + '/data/sites/' + sid + '/files/' + files[i]['filename'];//icon file
                                        var icon = 'fas fa-file';
                                        var type_file = 'fas fa-file';
                                        var filetype = files[i]['type'].split("/");
                                        if (filetype[0] === 'image') {
                                            icon = 'far fa-image';
                                            type_file = 'image';
                                        } else if (filetype[1] === 'pdf') {
                                            icon = 'far fa-file-pdf';
                                            type_file = 'pdf';
                                        } else if (filetype[0] === 'audio') {
                                            icon = 'far fa-file-audio';
                                            type_file = 'audio';
                                        } else if (filetype[0] === 'video' && (filetype[1] == 'stream' || typeof filetype[1] == 'undefined')) {
                                            type_file = 'video';
                                            icon = 'fas fa-video';
                                        } else if (files[i]['type'] == 'youtube') {
                                            type_file = 'youtube';
                                            icon = 'fab fa-youtube';
                                            var youtubeMatches = files[i]['filename'].match(/^(?:http(?:s)?:\/\/)?(?:www\.)?(?:youtu\.be\/|youtube\.com\/(?:(?:watch)?\?(?:.*&)?v(?:i)?=|(?:embed|shorts|v|vi|user)\/))([^\?&\"'<> #]+)/);
                                            var youtubeId = youtubeMatches[1];
                                            files[i]['url_file'] = 'https://www.youtube.com/embed/' + youtubeId;
                                        } else if (files[i]['type'] == 'vimeo') {
                                            type_file = 'vimeo';
                                            icon = 'fab fa-vimeo';
                                            files[i]['url_file'] = new RegExp('^(http|https)?:\/\/vimeo.com').test(files[i]['filename']) ? files[i]['filename'].replace('vimeo.com', 'player.vimeo.com/video') : files[i]['filename'];
                                        }//overwrite filename
                                        if (files[i]['rename']) files[i]['name'] = files[i]['rename']; else files[i]['name'] = files[i]['filename'];
                                        html += '<tr id="' + files[i]['_id']['$id'] + '">';
                                        html += '<td style="vertical-align: middle;">' + count + '</td>';
                                        html += '<td class="title-content" style="padding-left: 5px; vertical-align: middle;">';
                                        html += '    <div>';
                                        if (type_file == 'video') {//wait transcoding
                                            if (files[i]['video_info']) html += '<i class="' + icon + '"></i> ' + files[i]['name'] + '<a href="javascript:void(0);" onclick="LHM.library.play_video(\'' + files[i]['_id']['$id'] + '\')" style="color:red;"> <i class="fa fa-play-circle fs_15"></i></a>'; else html += '<i class="' + icon + '"></i> ' + files[i]['name'] + '<a href="javascript:void(0);" onclick="LHM.library.play_video(\'' + lesson_id + '\')" style="color:red;"> <i class="fa fa-play-circle fs_15"></i></a>';
                                        } else if (type_file == 'youtube') {//open popup player
                                            html += '<i class="' + icon + '"></i> ' + files[i]['name'] + '<a href="javascript:void(0);" onclick="LHM.library.play_video(\'' + files[i]['url_file'] + '\', \'youtube\')" style="color:red;"> <i class="fa fa-play-circle fs_15"></i></a>';
                                        } else if (type_file == 'vimeo') {//open popup player
                                            html += '<i class="' + icon + '"></i> ' + files[i]['name'] + '<a href="javascript:void(0);" onclick="LHM.library.play_video(\'' + files[i]['url_file'] + '\', \'vimeo\')" style="color:red;"> <i class="fa fa-play-circle fs_15"></i></a>';
                                        } else {//open new window
                                            html += '<a href="' + files[i]['url_file'] + '" target="_blank"><i class="' + icon + '"></i> ' + files[i]['name'] + ' </a>';
                                        }
                                        html += '    </div>';
                                        html += '</td>';
                                        html += ' <td align="center">';
                                        html += '<a href="javascript:void(0);" data-fid="' + files[i]['_id']['$id'] + '" data-lid="' + rs.data.lesson[0]['_id']['$id'] + '" onclick="LHM.lessons.removefileoflesson(this)"><i class="fa fa-trash"></i>&nbsp;Xóa</a></li>';
                                        html += ' </td>';
                                        html += '</tr>';
                                        tmp++;
                                    }
                                }
                                if (html == '') html = "<tr><td colspan='3' class='nodata'>Không có dữ liệu</td></tr>";
                            } else html = "<tr><td colspan='3' class='nodata'>Không có dữ liệu</td></tr>";
                            var enableDownload = rs.data.lesson[0]['enable_download'] ? 'checked' : '';
                            var htmlDownload = '';
                            if (count > 0 && !rs.data.hide_download_document) {
                                htmlDownload = '<input type="checkbox" id="enable-download" name="enable-download-document" ' + enableDownload + '> <label for="enable-download">Download</label> <br/><span style="font-weight: 400; font-size: 14px">(Chỉ download bài giảng)</span>';
                            }
                            var listfile = '<div class="table-responsive" id="lesson_files">' + '<table class="table">' + '<thead>' + '<tr class="filters">' + '<th width="5%">' + '#' + '</th>' + '<th width="55%">' + 'Các file đã thêm vào bài học' + '</th>' + '<th width="20%" class="text-center">' + htmlDownload + '</th>' + '</tr>' + '</thead>' + '<tbody>';
                            listfile += htmlnew + html;
                            listfile += '</tbody>' + '</table>' + '</div>';
                            window.filemanager.$content.find('.filemanager').html(listfile);//handle uploader
                            LHM.uploader.init(function (data_file) {
                                console.log(data_file);//calbback when upload success
//object file
                                if (data_file._id) {
                                    if (data_file.type == 'main-video') {//main video
                                        LHM.lessons.addfiletolesson(data_file._id['$id'], lesson_id, true);
                                    } else {
                                        if (data_file.type_upload == 'document')// add bài giảng sau khi upload vào bài học
                                            LHM.lessons.addfiletolesson(data_file._id['$id'], lesson_id, false, true); else LHM.lessons.addfiletolesson(data_file._id['$id'], lesson_id, false);//attach files
                                    }
                                } else {// add file trong tab thư viện vào bài học
                                    if (data_file.length > 0) {
                                        for (var _i11 in data_file) {
                                            if (data_file[_i11].attachorvideo && data_file[_i11].attachorvideo == '1')// option video bài học
                                            {
                                                LHM.lessons.addfiletolesson(data_file[_i11].fid, lesson_id, true);
                                            } else if (data_file[_i11].attachorvideo && data_file[_i11].attachorvideo == '3')// option bài giảng
                                            {
                                                LHM.lessons.addfiletolesson(data_file[_i11].fid, lesson_id, false, true);
                                            } else LHM.lessons.addfiletolesson(data_file[_i11].fid, lesson_id, false);// option làm video đính kèm
                                        }
                                    } else LHM.common.notify(null, 'danger', 'Vui lòng chọn 1 mục để thêm vào bài học');
                                }//close popup
// window.filemanager.close();
                            }, {page: 'addlessonfile'});
                            $('input[name=enable-download-document]').on('click', function () {
                                var lessonId = lesson_id;
                                var enable = $(this).prop('checked') ? true : false;
                                $.ajax({
                                    type: 'GET',
                                    url: '/lessons/enableDownloadDocument',
                                    data: {lesson_id: lessonId, enable: enable},
                                    dataType: 'json',
                                    success: function success(rs) {
                                        LHM.common.notify(null, 'success', rs);
                                    }
                                });
                            });
                        } else if (rs.login && rs.login == 2) {
                            window.location = rs.href;
                        }
                    });
                },
                onClose: function onClose() {
                    LHM.lessons.list_lessons();
                    $('#list_time_schedule input.destroy-timepicker').each(function () {
                        $(this).datetimepicker('destroy');
                    });
                }
            });
        }, addfiletolesson: function addfiletolesson(fid, lid, main_video) {
            var main_document = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/manageLesson/addfiletolesson',
                data: {
                    fid: fid,
                    lid: lid,
                    _token: $.cookie('_token'),
                    main_video: main_video,
                    main_document: main_document
                },
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        if (rs.error) LHM.common.notify(null, 'danger', rs.msg); else window.filemanager.close();
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, addthumbnailtolesson: function addthumbnailtolesson(fid, lid) {
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/manageLesson/addthumbnailtolesson',
                data: {fid: fid, lid: lid, _token: $.cookie('_token')},
                dataType: 'json',
                success: function success(rs) {
                }
            });
        }, removeFileUnicaOfLesson: function removeFileUnicaOfLesson(curr, typeremove, target) {
            var lesson_id = $(curr).data('lessonid');
            var index = $(curr).data('index');
            var url = $(curr).data('url');
            $.confirm({
                title: 'Thông báo',
                content: 'Bạn có muốn xóa file này khỏi bài học?',
                buttons: {
                    Ok: function Ok() {
                        var val_post = {
                            _token: $.cookie('_token'),
                            lesson_id: lesson_id,
                            index: index,
                            typeremove: typeremove,
                            url: url
                        };
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/lessons/manageLesson/removeFileUnicaOfLesson',
                            data: val_post,
                            dataType: 'json',
                            success: function success(rs) {
                                if (rs.login && rs.login == 1) {
                                    $('tr' + target).remove();
                                } else if (rs.login && rs.login == 2) {
                                    window.location = rs.href;
                                }
                            }
                        });
                    }, Cancel: {text: 'Đóng'}
                }
            });
        }, removefileoflesson: function removefileoflesson(curr) {
            var fid = $(curr).data('fid');
            var lid = $(curr).data('lid');
            $.confirm({
                title: 'Thông báo',
                content: 'Bạn có muốn xóa file này khỏi bài học?',
                buttons: {
                    Ok: function Ok() {
                        var val_post = {_token: $.cookie('_token'), lid: lid, fid: fid};
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/lessons/manageLesson/removefileoflesson',
                            data: val_post,
                            dataType: 'json',
                            success: function success(rs) {
                                if (rs.login && rs.login == 1) {
                                    $('tr#' + fid).remove();
                                } else if (rs.login && rs.login == 2) {
                                    window.location = rs.href;
                                }
                            }
                        });
                    }, Cancel: {text: 'Đóng'}
                }
            });
        }, change_date_lesson: function change_date_lesson(current, lesson_id, action) {
            var startDateSelector = $(current).parents('.well').find('.start_date');
            startDateSelector.datepicker('show').on('changeDate', function (ev) {
                var live_id = $(current).attr('live_id');
                var startDate = new Date(ev.date);
                var date = startDateSelector.data('date');
                var d = new Date(date);
                var week = d.getDay() === 0 ? 'Chủ nhật' : 'Thứ ' + (d.getDay() + 1);
                var fm_date = week + ', ' + d.getDate() + ' Tháng ' + (d.getMonth() + 1);
                var val_post = {
                    _token: $.cookie('_token'),
                    action: action,
                    _id: lesson_id,
                    live_id: live_id,
                    val_date: date
                };
                $.ajax({
                    type: 'POST',
                    url: base_url + '/lessons/addFieldsInLesson',
                    data: val_post,
                    dataType: 'json',
                    success: function success(_success12) {
                        if (_success12.login && _success12.login == 1) {
                            if (!_success12.error) {
                                startDateSelector.html(fm_date);
                            }
                        } else if (_success12.login && _success12.login == 2) {
                            window.location = _success12.href;
                        }
                    },
                    error: function error(err) {
                        LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                    }
                });
                startDateSelector.unbind("changeDate");
                startDateSelector.datepicker('hide');
            });
        }, change_status_lessons: function change_status_lessons(current, lesson_id, action) {
            var val_post = {_token: $.cookie('_token'), _id: lesson_id};
            if($(current).find('.fa-tools').length){
                $.confirm({
                    title: null,
                    type: 'green',
                    content: '<form id="config-try-lesson" class="form-label form-radio-lg"><div class="form-group"><label class="label-100">Cấu hình học thử </label><div class="d-flex justify-content-between"><label title="Không cần tài khoản vẫn có thể học thử"><input type="radio" name="try_item" value="1"/> Học thử</label><label title="Phải đăng nhập mới có thể học thử"><input type="radio" name="try_item" value="3"/> Free</label><label title="Phải được gắn vào khóa mới có thể học"><input type="radio" name="try_item" value="2"/> Pro</label></div></div><div class="form-group"><label class="label-100">Cấu hình tính chất bài học </label><div class="d-flex justify-content-between"><label><input type="radio" name="nature_item" value="1" checked/> None</label><label><input type="radio" name="nature_item" value="2"/> Quan trọng</label><label><input type="radio" name="nature_item" value="3"/> Thực chiến</label></div></div></form>',
                    onContentReady: function () {
                        var form_try = $('#config-try-lesson')
                        form_try.find('[name="try_item"][value="' + $(current).attr('status') + '"]').click()
                        form_try.find('[name="nature_item"][value="' + $(current).data('nature') + '"]').click()
                    },
                    buttons: {
                        ok: {
                            text: 'Lưu lại',
                            btnClass: 'btn-success',
                            action: function () {
                                LHM.common.callAjax('/lessons/configTryLesson', 'POST', $('#config-try-lesson').serialize() + '&_token=' + $.cookie('_token') + '&lesson_id=' + lesson_id, function (res) {
                                    $(current).closest('.child-item').find('.try-lesson').text(res.try_text);
                                    $(current).attr('status', res.data.try_item)
                                    $(current).data('nature', res.data.nature_item)
                                })
                            }
                        },
                        cancel: {text: 'Đóng'}
                    }
                })
            } else {
                $.ajax({
                    type: 'POST',
                    url: base_url + '/lessons/manageLesson/change_status',
                    data: val_post,
                    dataType: 'json',
                    success: function success(_success13) {
                        if (_success13.login && _success13.login == 1) {
                            if (!_success13.error) {
                                var status = $(current).attr('status');
                                if (status == 2) {
                                    $(current).html('<i class="fa fa-eye fs_15"></i>');
                                    $(current).attr('status', 1);
                                    $(current).parents('.child-item:first').find('.try-lesson').show();
                                } else if (status == 1) {
                                    $(current).html('<i style="color: red" class="fa fa-eye-slash fs_15"></i>');
                                    $(current).attr('status', 2);
                                    $(current).parents('.child-item:first').find('.try-lesson').hide();
                                }
                            }
                        } else if (_success13.login && _success13.login == 2) {
                            window.location = _success13.href;
                        }
                    },
                    error: function error(err) {
                        LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                    }
                });
            }
        }, change_status: function change_status(current, lesson_id, action) {
            var val_post = {_token: $.cookie('_token'), _id: lesson_id};
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/manageLesson/change_status_lesson',
                data: val_post,
                dataType: 'json',
                success: function success(_success14) {
                    if (_success14.login && _success14.login == 1) {
                        if (!_success14.error) {
                            var status = $(current).attr('status_lesson');
                            var divAll = $('div[data-id="' + lesson_id + '"] .action a[status_lesson]');
                            if (status == 0) {
                                divAll.attr('status_lesson', 1).attr('title', "Không công khai").html('<i class="fa fa-lock"></i>');
                            } else {
                                divAll.attr('status_lesson', 0).attr('title', "Công khai").html('<i class="fa fa-unlock"></i>');
                            }
                            LHM.common.notify(null, 'success', 'Thay đổi trạng thái thành công');
                        }
                    } else if (_success14.login && _success14.login == 2) {
                        window.location = _success14.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, change_status_pin: function change_status_pin(current, lesson_id, action) {
            var val_post = {_token: $.cookie('_token'), _id: lesson_id};
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/manageLesson/change_status_pin',
                data: val_post,
                dataType: 'json',
                success: function success(_success15) {
                    if (_success15.login && _success15.login == 1) {
                        if (!_success15.error) {
                            LHM.lessons.list_lessons();
                            LHM.common.notify(null, 'success', 'Thay đổi trạng thái ghim thành công');
                        }
                    } else if (_success15.login && _success15.login == 2) {
                        window.location = _success15.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, updateLessonNum: function updateLessonNum(data) {
            var parent_id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
            var notify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
            $.ajax({
                url: '/lessons/updateLessonNum',
                type: 'POST',
                data: {lesson_ids: data, parent_id: parent_id, _token: $.cookie('_token')},
                success: function success(res) {
                    if (res.status) {
                        if (notify) {
                            LHM.common.notify(null, 'success', res.message, 'col-md-2');
                        }
                    } else {
                        if (notify) {
                            LHM.common.notify(null, 'danger', res.message);
                        }
                    }
                }
            });
        }, testLesson: function testLesson(curr, lid) {
            $('#notify-quiz-test-lesson').html('');
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/testLesson',
                data: $('#form-lesson-test').serialize() + '&_token=' + $.cookie('_token') + '&lid=' + lid,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        if (!rs.error) {
                            window.filemanager.close();
                            LHM.common.notify(null, 'success', 'Cập nhật thành công');
                        } else {
                            $('#notify-quiz-test-lesson').html('<p class="text-danger">' + rs.msg + '</p>');
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, textLesson: function textLesson(curr, lid) {
            CKEDITOR.instances.text_lesson_content.updateElement();
            $(curr).attr('disabled', 'disabled');
            var data = $('#form-text-lesson').serialize() + '&_token=' + $.cookie('_token') + '&lid=' + lid;
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/textLesson',
                data: data,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        if (!rs.error) {
                            window.filemanager.close();
                            LHM.common.notify(null, 'success', __('Cập nhật thành công'));
                        } else {
                            $('#notify-quiz-text-lesson').html('<p class="text-danger">' + rs.msg + '</p>');
                        }
                        $(curr).removeAttr('disabled');
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, completeLesson: function completeLesson(curr, lid) {
            $(curr).attr('disabled', 'disabled');
            var quizs = [];
            $('#sortable2 li').each(function (index, el) {
                quizs.push($(el).find('input[type=hidden]').val());
            });
            quizs = quizs.join('-');
            var data = $('#form-complete-lesson').serialize() + '&_token=' + $.cookie('_token') + '&lid=' + lid + '&quizs=' + quizs;
            $.ajax({
                type: 'POST',
                url: base_url + '/lessons/completeLesson',
                data: data,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        if (!rs.error) {
                            window.setting.close();
                            LHM.common.notify(null, 'success', 'Cập nhật thành công');
                        } else {
                            $('.error-block-quiz-lesson').html('<p class="text-danger">' + rs.msg + '</p>');
                        }
                        $(curr).removeAttr('disabled');
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, get_completeLesson: function get_completeLesson(lid, cid) {
            if (!cid) {
                cid = '';
            }
            $.ajax({
                type: 'GET',
                url: base_url + '/lessons/get_completeLesson',
                data: {lid: lid, cid: cid},
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        if (rs.data) {
                            var html_test = '<label class="control-label pull-left">Đề thi</label>';
                            if (cid != '') {
                                $('input[type=radio][name="fields[type_complete_lesson]"][value=' + rs.data.type_complete + ']').trigger('click');
                                $('input[name="fields[percent_video]"]').val(rs.data.complete_percent_video);
                                if (rs.data.auto_submit_test) {
                                    $('#auto_submit_test').prop('checked', true);
                                }
                                html_test += '<select class="form-control" name="fields[test_quiz_id]">';
                            } else {
                                $('input[type=radio][name=type_complete_lesson][value=' + rs.data.type_complete + ']').trigger('click');
                                $('#percent_video').val(rs.data.complete_percent_video);
                                if (rs.data.auto_submit_test) {
                                    $('#auto_submit_test').prop('checked', true);
                                }
                                html_test += '<select class="form-control" name="test_quiz_id">';
                            }
                            html_test += '<option value="">--Chọn đề thi--</option>';
                            if (rs.test.length) {
                                $.each(rs.test, function (index, el) {
                                    html_test += '<option value="' + el._id['$id'] + '" ' + el.selected + '>' + el.name + '</option>';
                                });
                            }
                            html_test += '</select>';
                            $('.choice-quiz-test').html(html_test);
                            if (rs.data.load_seeked) {
                                if (rs.data.seeked_complete) {
                                    $('#seeked_complete').prop('checked', true);
                                }
                                $('#seeked_complete').parents('.form-group:first').removeClass('display-none');
                            } else {
                                $('#seeked_complete').parents('.form-group:first').remove();
                            }
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }
    }, library: {
        get_files_in_library: function get_files_in_library(page) {
            page = page ? page : 0;
            $('.uploader_targer_live').html('');
            $('#dashboard #get_files_in_library tbody').html('<tr><td colspan="7" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            var filter = {
                name: $('#filter_file_name').val(),
                type: $('#filter_type_file').val(),
                limit_record: $('#limit_record').val(),
                page: page
            };
            $.ajax({
                type: 'GET',
                data: filter,
                url: base_url + '/library/getFilesInLibrary',
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.library.print_html.data_file = rs.files;
                        LHM.common.pagination_site(rs.file_total, rs.limit, page, 'get_files_in_library');
                        LHM.library.print_html.print_files_in_library();//print storage
                        if (rs.storage) {
                            $('.storage .remain_percent').text(rs.storage.size_used + ' / ' + rs.storage.total_size_of_service + 'GB');
                            $('.storage .progress-bar[aria-valuenow]').attr('aria-valuenow', rs.storage.percent_used);
                            $('.storage .progress-bar[aria-valuenow]').text(rs.storage.percent_used + '%');
                            $('.storage .progress-bar[aria-valuenow]').css('width', rs.storage.percent_used + '%');
                        }//print uploader
                        $('.uploader_targer').html(rs.uploader);
                        $('#up-file-tab').trigger('click');
                        $('#up-filedocument-tab').trigger('click');//calbback when upload success
                        LHM.uploader.init(function (file) {
                            LHM.library.get_files_in_library();
                        });
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, filter_library_uploader: function filter_library_uploader(input) {
            var filter = input.value.toLowerCase();
            var table = document.querySelector('#get_files_in_libraries table');
            var trs = table.getElementsByTagName("tr");// Loop through all table rows, and hide those who don't match the search query
            for (var i = 0; i < trs.length; i++) {
                var td = trs[i].getElementsByTagName("td")[0];
                if (td) {
                    var label = td.querySelector('label').textContent || td.querySelector('label').innerText;
                    if (label.toLowerCase().indexOf(filter) > -1) {
                        trs[i].style.display = "";
                    } else {
                        trs[i].style.display = "none";
                    }
                }
            }
        }, get_library_uploader: function get_library_uploader() {
            var filter = {category: $('#category_show_filter').val()};
            $('#get_files_in_libraries tbody').html('<tr><td colspan="7" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            if (window.uploaderfilterimage) filter.image = window.uploaderfilterimage;
            $.ajax({
                type: 'GET',
                data: filter,
                url: base_url + '/library/getLibraryUploader',
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {//print categories
                        if (rs.categories.length) {
                            var _html = '<option value="all">Tất cả thể loại</option>';//store all cat
                            window.categories = rs.categories;
                            for (var i in rs.categories) {
                                _html += '<option value="' + rs.categories[i]._id['$id'] + '">' + rs.categories[i].name + '</option>';
                            }
                            $('#category_show_filter').html(_html);
                        }//print checkbox files
                        var html = '';
                        if (rs.files.length) {
                            for (var _i12 in rs.files) {
                                if (window.uploaderfilterimage === "image") {
                                    html += '<tr><td colspan="2"><div class="form-check">' + '<input class="form-check-input chk-lib-slt-lesson" type="checkbox" name="f" data-url="' + rs.files[_i12].url_file + '" value="' + rs.files[_i12]._id + '" id="' + _i12 + '">' + '<label class="form-check-label" for="' + _i12 + '"><img src="' + rs.files[_i12].url_file + '" alt="' + rs.files[_i12].name + '" style="width:30px;height:30px;"> ' + rs.files[_i12].name + '</label>' + '</div>' + '</td><td>' + rs.files[_i12].created_at + '</td></tr>';
                                } else {
                                    html += '<tr><td colspan="2"><div class="form-check">' + '<input class="form-check-input chk-lib-slt-lesson" type="checkbox" name="f" data-url="' + rs.files[_i12].url_file + '" value="' + rs.files[_i12]._id + '" id="' + _i12 + '">' + '<label class="form-check-label" for="' + _i12 + '">' + rs.files[_i12].name + '</label>' + '</div>' + '</td><td>' + rs.files[_i12].created_at + '</td></tr>';
                                }
                            }
                        } else html += "<tr><td colspan='3' class='nodata'>Không có dữ liệu</td></tr>";
                        $('#get_files_in_libraries tbody').html(html);
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, update_fields_in_file: function update_fields_in_file(current, file_id, _action4) {
            if (_action4 == 'remove') {
                var val_post = {_token: $.cookie('_token'), _id: file_id, action: _action4};
                $.confirm({
                    title: 'Xóa file', content: 'Bạn có muốn xóa file này?', buttons: {
                        Ok: function Ok() {
                            $.ajax({
                                type: 'POST',
                                url: base_url + '/library/uploadFieldsInFile',
                                data: val_post,
                                dataType: 'json',
                                success: function success(_success16) {
                                    if (_success16.login && _success16.login == 1) {
                                        if (!_success16.error) {
                                            LHM.common.notify(null, 'success', 'Xóa thành công');
                                            $(current).closest("tr").remove();
                                            if ($('#get_files_in_library tbody tr').length == 0) {
                                                $('#get_files_in_library table tbody').html('<tr><td colspan="5">Không có dữ liệu</td></tr>');
                                            }
                                        } else {
                                            LHM.common.notify(null, 'danger', 'Xóa không thành công');
                                        }
                                    } else if (_success16.login && _success16.login == 2) {
                                        window.location = _success16.href;
                                    }
                                },
                                error: function error(err) {
                                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                                }
                            });
                        }, Cancel: function Cancel() {
                        }
                    }
                });
            } else if (_action4 == 'rename') {
                var filename = $(current).attr('name');
                var category_id = $(current).attr('category_id');
                var enable_viewer = $(current).attr('data-enable-viewer');
                var enable_timer = $(current).attr('data-enable-timer');
                var video_duration = $(current).attr('data-video-duration');
                if (enable_timer == 1) {
                    var edit_timer = ' <label for="video_duration">Thời lượng(giây) <span class="text-danger">*</span></label> <input type="number" id="video_duration" value="' + video_duration + '" class="form-control">';
                } else var edit_timer = '';
                if (enable_viewer == 1) {
                    var check_viewer = ' <label for="file_viewer"><input type="checkbox" id="file_viewer" name="file_viewer"> Sử dụng trình xem tài liệu</label>';
                } else var check_viewer = '';
                var html = '';
                html += LHM.library.getCategory(category_id);
                html += '<div class="form-group mt-3" style="width:100%">';
                html += '<label for="file_name">Đổi tên <span class="text-danger">*</span></label>';
                html += '    <input type="text" id="file_name" value="' + filename + '" class="form-control">';
                html += ' <div id="notify_empty"></div></br>';
                html += check_viewer;
                html += edit_timer;
                html += '</div>';
                $.confirm({
                    title: 'Sửa',
                    columnClass: 'col-md-6 col-md-offset-3',
                    content: html,
                    onContentReady: function onContentReady() {
                        if ($(current).attr('data-viewer') == 'checked') $('#file_viewer').prop('checked', true); else $('#file_viewer').prop('checked', false);
                    },
                    buttons: {
                        Ok: {
                            text: 'OK', btnClass: 'btn-blue', action: function action() {
                                var catchoice = $('#change_category_of_file').val();
                                if ($('#file_viewer').prop('checked')) var data_viewer = 1; else var data_viewer = 0;
                                var val_post = {
                                    _token: $.cookie('_token'),
                                    action: _action4,
                                    _id: file_id,
                                    category_id: catchoice,
                                    file_name: $('#file_name').val(),
                                    viewer: data_viewer,
                                    video_duration: $('#video_duration').val()
                                };
                                if ($('#file_name').val() == '') {
                                    $('#notify_empty').html('<br><div class="alert alert-danger"><strong>Tên file không được trống!</strong></div>');
                                    return false;
                                } else {
                                    $.ajax({
                                        type: 'POST',
                                        url: base_url + '/library/uploadFieldsInFile',
                                        data: val_post,
                                        dataType: 'json',
                                        success: function success(_success17) {
                                            if (_success17.login && _success17.login == 1) {
                                                if (!_success17.error) {
                                                    LHM.common.notify(null, 'success', 'Cập nhật thành công');
                                                    LHM.mnDashboard.init('library');
                                                }
                                                if (_success17.error) {
                                                    for (var i = 0; i < _success17.msg.length; i++) {
                                                        LHM.common.notify(null, 'warning', _success17.msg[i]);
                                                    }
                                                }
                                            } else if (_success17.login && _success17.login == 2) {
                                                window.location = _success17.href;
                                            }
                                        }
                                    });
                                }
                            }
                        }, cancel: {text: 'Đóng'}
                    }
                });
            }
        }, getCategory: function getCategory(category_id) {
            var html = '<label for="category_show_filter">Thể loại</label>';
            html += '<select class="form-control" id="change_category_of_file"><option value="all">Tất cả thể loại</option>';
            for (var i in window.categories) {
                if (window.categories[i]._id != undefined) html += '<option ' + (window.categories[i]._id['$id'] == category_id ? 'selected' : '') + ' value="' + window.categories[i]._id['$id'] + '">' + window.categories[i].name + '</option>';
            }
            html += '</select>';
            return html;
        }, print_html: {
            data_file: [], print_files_in_library: function print_files_in_library() {
                var files = LHM.library.print_html.data_file;
                $('#dashboard #get_files_in_library tbody').html('');
                var site_id = '';
                if (sid == 0) {
                    site_id = uid;
                } else {
                    site_id = sid;
                }
                var html = '';
                if (files.length) {
                    for (var i = 0; i < files.length; i++) {
                        var icon = 'fas fa-file';
                        var type_file = 'fas fa-file';
                        var enable_timer = 0;
                        if (files[i]['type'] != '') {
                            var filetype = files[i]['type'].split("/");
                            if (filetype[0] === 'image') {
                                icon = 'far fa-image';
                                type_file = 'image';
                            } else if (filetype[1] === 'pdf') {
                                icon = 'far fa-file-pdf';
                                type_file = 'pdf';
                            } else if (filetype[0] === 'audio') {
                                icon = 'far fa-file-audio';
                                type_file = 'audio';
                            } else if (filetype[0] === 'video' && (filetype[1] == 'stream' || typeof filetype[1] == 'undefined')) {
                                type_file = 'video';
                                icon = 'fas fa-video';
                            } else if (files[i]['type'] == 'youtube') {
                                enable_timer = 1;
                                type_file = 'youtube';
                                icon = 'fab fa-youtube';
                            } else if (files[i]['type'] == 'vimeo') {
                                enable_timer = 1;
                                type_file = 'vimeo';
                                icon = 'fab fa-vimeo';
                            }
                            if (window.streamurl) window.streamurl[files[i]['_id']] = files[i]['video_info']; else {
                                window.streamurl = {};
                                window.streamurl[files[i]['_id']] = files[i]['video_info'];
                            }
                            if (files[i]['video_info']['video_status']) {
                                if (window.video_status) window.video_status[files[b]['_id']] = files[b]['video_info']['video_status']; else {
                                    window.video_status = {};
                                    window.video_status[files[b]['_id']] = files[b]['video_info']['video_status'];
                                }
                                if (window.video_status_text) window.video_status_text[files[b]['_id']] = files[b]['video_info']['status_text']; else {
                                    window.video_status_text = {};
                                    window.video_status_text[files[b]['_id']] = files[b]['video_info']['status_text'];
                                }
                            }
                            var enable_viewer = 0;
                            if (type_file == 'pdf' || files[i]['type'] == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || files[i]['type'] == 'application/vnd.ms-excel' || files[i]['type'] == 'application/vnd.ms-powerpoint' || files[i]['type'] == 'application/vnd.openxmlformats-officedocument.presentationml.presentation' || files[i]['type'] == 'application/msword' || files[i]['type'] == 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') enable_viewer = 1;
                            var embed_video = '';
                            var download_video = '';
                            if (type_file != 'video') {
                                if (files[i].dropbox) {
                                    var action_remove = '<a href="javascript:void(0);" onclick=LHM.quiz.deleteDropboxOldFile(this,"' + files[i]['_id'] + '","' + files[i]['name'] + '",2,\'' + site_id + '\',\'4QcyPCVneIoAAAAAAAAAAQdpVqYanldjmSRLgXZ6W-yTwYNdElGlS0zWu3928WyS\')><i class="fa fa-trash"></i>&nbsp;Xóa</a>';
                                } else {
                                    var action_remove = '<a href="javascript:void(0);" onclick=LHM.library.update_fields_in_file(this,"' + files[i]['_id'] + '","remove")><i class="fa fa-trash"></i>&nbsp;Xóa</a>';
                                }
                            } else {
                                var embed_video = '<a href="javascript:void(0);" onclick="LHM.common.copy_link(\'' + base_url + '/embed/videojs?id=' + files[i]['_id'] + '&autoplay=true\',\'Đã sao chép link!\')" data-name="' + files[i]['name'] + '" data-id="' + files[i]['_id'] + '" data-date="' + files[i]['date_to_play'] + '" data-vod="' + files[i]['vod_date'] + '"><i class="fas fa-code"></i> Lấy link </a>';
                                var download_video = '<a target="_blank" href="' + files[i]['url_download'] + '"><i class="fas fa-download"></i> Tải xuống </a>';
                                var action_remove = '<a href="javascript:void(0);" onclick=LHM.library.remove_video(this,"' + files[i]['_id'] + '")><i class="fa fa-trash"></i>&nbsp;Xóa</a>';
                            }
                            var notify_pending = '';
                            html += '<tr id="' + files[i]['_id'] + '" name="' + files[i]['name'] + '" category_id="' + files[i]['category_id'] + '">';
                            html += '<td style="vertical-align: middle;">' + files[i]['no'] + '</td>';
                            html += '<td class="title-content" style="padding-left: 5px; vertical-align: middle;">';
                            html += '    <div>';
                            if (type_file == 'video' && !files[i]['video_info'].length) {
                                if (files[i]['video_status'] == 2) {//error transcoding
                                    html += '<a href="javascript:void(0);"><i class="' + icon + '"></i> <span id="filename_' + files[i]['_id'] + '">' + files[i]['name'] + '</span> </a>';
                                    html += '<div class="dateago"> <span class="badge badge-danger">Lỗi video: ' + files[i]['status_text'] + '</span></div>';
                                } else {//wait transcoding
                                    html += '<a href="javascript:void(0);"><i class="' + icon + '"></i> <span id="filename_' + files[i]['_id'] + '">' + files[i]['name'] + '</span> </a>';
                                    notify_pending = '<div class="dateago"> <span class="badge badge-success" title="Video ID: ' + files[i]['video_id'] + '">ĐANG XỬ LÝ...</span><a href="javascript:;" title="Refresh" onclick="LHM.library.refresh_video(this,\'' + files[i]['video_id'] + '\',\'' + files[i]['_id'] + '\')"> <i class="fas fa-sync-alt"></i></a></div>';
                                }
                            } else if (type_file == 'youtube') {//open popup player
                                html += '<a href="javascript:void(0);" onclick="LHM.library.play_video(\'' + files[i]['url_file'] + '\', \'youtube\')"><i class="' + icon + '"></i> <span id="filename_' + files[i]['_id'] + '">' + files[i]['name'] + '</span></a> <a href="javascript:;" title="Lấy link" onclick="LHM.common.copy_link(\'' + files[i]['url_file'] + '\',\'Đã sao chép mã nhúng!\')"><i class="fa fa-link" aria-hidden="true"></i></a>';
                            } else if (type_file == 'vimeo') {//open popup player
                                html += '<a href="javascript:void(0);" onclick="LHM.library.play_video(\'' + files[i]['url_file'] + '\', \'vimeo\')"><i class="' + icon + '"></i> <span id="filename_' + files[i]['_id'] + '">' + files[i]['name'] + '</span></a> <a href="javascript:;" title="Lấy link" onclick="LHM.common.copy_link(\'' + files[i]['url_file'] + '\',\'Đã sao chép mã nhúng!\')"><i class="fa fa-link" aria-hidden="true"></i></a>';
                            } else if (files[i]['viewer'] == 1 && type_file == 'pdf') {//open popup player
                                html += '<a href="javascript:void(0);" onclick="LHM.library.viewer_document(\'' + files[i]['_id'] + '\', \'application/pdf\')"><i class="' + icon + '"></i> <span id="filename_' + files[i]['_id'] + '">' + files[i]['name'] + '</span></a> <a href="javascript:;" title="Lấy link" onclick="LHM.common.copy_link(\'' + files[i]['url_file'] + '\',\'Đã sao chép mã nhúng!\')"><i class="fa fa-link" aria-hidden="true"></i></a>';
                            } else if (files[i]['viewer'] == 1 && files[i]['type'] == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || files[i]['type'] == 'application/vnd.ms-excel' || files[i]['type'] == 'application/vnd.ms-powerpoint' || files[i]['type'] == 'application/vnd.openxmlformats-officedocument.presentationml.presentation' || files[i]['type'] == 'application/msword' || files[i]['type'] == 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') {//open popup player
                                html += '<a href="javascript:void(0);" onclick="LHM.library.viewer_document(\'' + files[i]['url_file'] + '\', \'doc\')"><i class="' + icon + '"></i> <span id="filename_' + files[i]['_id'] + '">' + files[i]['name'] + '</span></a> <a href="javascript:;" title="Lấy link" onclick="LHM.common.copy_link(\'' + files[i]['url_file'] + '\',\'Đã sao chép mã nhúng!\')"><i class="fa fa-link" aria-hidden="true"></i></a>';
                            } else if (files[i]['video_info'].length) {//open popup player
                                html += '<a href="javascript:void(0);" onclick="LHM.library.play_video(\'' + files[i]['_id'] + '\')"><i class="' + icon + '"></i> <span id="filename_' + files[i]['_id'] + '">' + files[i]['name'] + '</span> </a>';
                            } else {//open new window
                                if (files[i].dropbox) {
                                    html += '<a href="javascript:;" onclick="LHM.common.viewDropboxVideo(\'' + files[i].dropbox_shared_link + '\')"><i class="fab fa-dropbox"></i> <span id="filename_' + files[i]['_id'] + '">' + files[i]['name'] + '</span> </a>';
                                } else {
                                    html += '<a href="' + files[i]['url_file'] + '" target="_blank"><i class="' + icon + '"></i> <span id="filename_' + files[i]['_id'] + '">' + files[i]['name'] + '</span> </a> <a href="javascript:;" title="Lấy link" onclick="LHM.common.copy_link(\'' + files[i]['url_file'] + '\',\'Đã sao chép mã nhúng!\')"><i class="fa fa-link" aria-hidden="true"></i></a>';
                                }
                            }
                            if (parseInt(files[i]['size']) == 0 && type_file == 'video' && files[i]['sync'] == 0) {
                                var size_video = notify_pending;
                            } else {
                                var size_video = files[i]['size'];
                            }
                            html += '    </div>';
                            html += '</td>';
                            html += '<td style="vertical-align: middle;">' + size_video + '</td>';
                            html += '<td style="vertical-align: middle;">' + files[i]['created'] + '</td>';
                            html += ' <td align="center">';
                            html += '           <ul class="list-unstyled acts-li">';
                            html += '           <li>' + action_remove + '</li>';
                            html += '           <li><a href="javascript:void(0);" category_id="' + files[i]['category_id'] + '" data-video-duration="' + files[i]['video_duration'] + '" data-viewer="' + files[i]['check_viewer'] + '" data-enable-viewer="' + enable_viewer + '" data-enable-timer= "' + enable_timer + '" name="' + files[i]['name'] + '" onclick=LHM.library.update_fields_in_file(this,"' + files[i]['_id'] + '","rename")><i class="fas fa-edit"></i> Sửa </a></li>';
                            html += '           <li>' + embed_video + '</li>';
                            html += '           <li>' + download_video + '</li>';
                            html += '           </ul>';
                            html += ' </td>';
                            html += '</tr>';
                        }
                    }
                } else html = "<tr><td colspan='3' class='nodata'>Không có dữ liệu</td></tr>";
                $('#dashboard #get_files_in_library tbody').html(html);
            }
        }, refresh_video: function refresh_video(curr, video_id, file_id) {
            $(curr).find('i').addClass('fa-spin');
            $.ajax({
                type: 'POST',
                url: base_url + '/library/refreshVideo',
                data: {video_id: video_id, file_id: file_id, _token: $.cookie('_token')},
                dataType: 'json',
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        if (!res.error) {
                            LHM.library.get_files_in_library();
                        } else {
                            for (var i = 0; i < res.msg.length; i++) {
                                LHM.common.notify(null, 'warning', res.msg[i]);
                            }
                        }
                        $(curr).find('i').removeClass('fa-spin');
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, play_video: function play_video(id_or_url_video, type, callback) {//run: function (element, video_id, query, width = 100, height = 100) Ơ
            if (window.label_record) var title = window.label_record; else var title = 'Học thử';
            $.alert({
                title: title,
                content: "<div id='preview'></div>",
                columnClass: "col-lg-6 col-md-8 col-sm-12 col-12",
                onContentReady: function onContentReady() {// when content is fetched
                    var contaiter = this.$content.find('#preview');
                    if (type == 'youtube' || type == 'vimeo') {
                        var yt = '<div class="embed-responsive embed-responsive-16by9">' + '<iframe class="embed-responsive-item" src="' + id_or_url_video + '" allowfullscreen></iframe>' + '</div>';
                        contaiter.html(yt);
                    } else if (callback) {//apply some control customize
                        callback(contaiter);
                    } else {//run with videourls storaged in varible window.
                        LHM.common.player.run(contaiter[0], id_or_url_video, false, 510, 320);
                    }
                }
            });
        }, convert_video_link: function convert_video_link(url) {
            var data_post = {_token: $.cookie('_token'), url: url};
            $.ajax({
                type: 'POST',
                url: base_url + '/library/convertVideoLink',
                data: data_post,
                dataType: 'json',
                success: function success(_success18) {
                    return _success18[0];
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                    return false;
                }
            });
        }, viewer_document: function viewer_document(id_or_url_video, type) {//run: function (element, video_id, query, width = 100, height = 100) Ơ
            if (type == 'application/pdf') {
                window.location = base_url + '/embed/viewer?fid=' + id_or_url_video;
            } else {
                var title = 'Xem tài liệu';
                $.alert({
                    title: title,
                    content: "<div id='preview_doc' style='height:800px;'></div>",
                    columnClass: "col-lg-12 col-md-12 col-sm-12 col-12",
                    buttons: {OK: {text: 'Đóng'}},
                    onContentReady: function onContentReady() {// when content is fetched
                        var contaiter = this.$content.find('#preview_doc');
                        var doc = '<iframe class="embed-responsive-item" src="https://view.officeapps.live.com/op/embed.aspx?src=' + id_or_url_video + '" width="100%" height="100%"></iframe>';
                        contaiter.html(doc);
                    }
                });
            }
        }, remove_video: function remove_video(current, file_id) {
            var val_post = {_token: $.cookie('_token'), _id: file_id};
            $.confirm({
                title: 'Xóa video', content: 'Bạn có muốn xóa file này?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/library/removeVideoInlibrary',
                            data: val_post,
                            dataType: 'json',
                            success: function success(_success19) {
                                if (_success19.login && _success19.login == 1) {
                                    if (!_success19.error) {
                                        LHM.common.notify(null, 'success', 'Xóa thành công');
                                        $(current).closest("tr").remove();
                                    } else {
                                        LHM.common.notify(null, 'danger', 'Xóa không thành công');
                                    }
                                } else if (_success19.login && _success19.login == 2) {
                                    window.location = _success19.href;
                                }
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }
    }, checkout: {
        updateCheckOut: function updateCheckOut(elm, type_payment, oid) {
            var type_package = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : "";
            var pay_online = arguments.length > 4 ? arguments[4] : undefined;
            var sub_pay_online = '';
            if (type_payment == 'atm') {
                sub_pay_online = $('.atm-internet-banking input[name=payment_gate]:checked').val();
                pay_online = pay_online ? pay_online : sub_pay_online;
                if (!pay_online || pay_online == '') {
                    LHM.common.notify(null, 'warning', 'Vui lòng chọn ví điện tử để thanh toán');
                    return false;
                }
            } else if (type_payment == 'visa') {
                sub_pay_online = $('.inter-card input[name="payment_gate"]:checked').val();
                pay_online = pay_online ? pay_online : sub_pay_online;
                if (!pay_online || pay_online == '') {
                    LHM.common.notify(null, 'warning', 'Vui lòng chọn ví điện tử để thanh toán');
                    return false;
                }
            }
            var val_post = {
                _token: $.cookie('_token'), type_payment: type_payment,// kiểu thanh toán : ATM, master card ..
                pay_online: pay_online, oid: oid, type_package: type_package
            };//update address with COD
            if (type_payment == 'cod') {
                var add = $('[name="address"]').val();
                if (add == '') {
                    LHM.common.notify(null, 'warning', 'Vui lòng nhập địa chỉ chính xác');
                    return false;
                } else val_post.address = add;
            } else {
                if (type_payment == 'atm') {
                    if ($('.list-content').length > 0) {
                        val_post.option_payment = $('.atm-internet-banking input[name="option_payment"]:checked').val();
                        val_post.bankcode = $('.atm-internet-banking input[name="bankcode"]:checked').val();
                    }
                } else if (type_payment == 'visa') {
                    if ($('.list-content').length > 0) {
                        val_post.option_payment = $('.inter-card input[name="option_payment"]:checked').val();
                        val_post.bankcode = $('.inter-card input[name="bankcode"]:checked').val();
                    }
                }
            }
            $.ajax({
                type: 'POST',
                url: base_url + '/payment/getLinkCheckOut',
                data: val_post,
                dataType: "json",
                success: function success(rs) {
                    if (rs.error) {
                        for (var i = 0; i < rs.msg.length; i++) {
                            LHM.common.notify(null, 'warning', rs.msg[i]);
                        }
                    } else {
                        if (rs.data) window.location.href = rs.data; else {
                            LHM.common.notify(null, 'danger', 'Hệ thống thanh toán online chưa được cài đặt!');
                        }
                    }
                },
                error: function error() {
                    LHM.common.notify(null, 'danger', 'Có lỗi xảy ra');
                }
            });
        }
    }, upgrade: {
        getLinkCheckout: function getLinkCheckout(elm, typepayment) {
            var data_zoom = [];
            $('.quantity_live_order_zoom').each(function () {
                data_zoom.push({name: $(this).attr('data-code'), value: $(this).val()});
            });
            var val_post = {
                _token: $.cookie('_token'),
                month: $('#month_number').val(),
                sid: $('#site').val(),
                packagecode: $('#package').val(),
                packagelivecode: $('#package_live').val(),
                packagePageCode: $('#package_store').val(),
                typepayment: typepayment,// kiểu thanh toán : ATM, master card ..
                oid: window.oid_upgrade,
                active: window.active,
                type_buy_email: $('input.js-change-type-buy-email').prop('checked') ? '1' : '',
                email_sent_quota: $('#email_sent_quota').val(),
                email_sent_quota_by_life: $('#email_sent_quota_by_life').val(),
                member_quota: $('#member_quota').val(),
                disk_quota_select: $('#disk_quota_select').val(),
                disk_international_quota_select: $('#disk_international_quota_select').val(),
                active_user_quota_select: $('#active_user_quota_select').val(),
                time_expire_package: $('.time_expire_package').attr('data-timeexpirepackage'),
                unit_price_disk: $('#disk_quota_select').find('option:selected').attr('data-diskquotaprice'),
                unit_price_user: $('#active_user_quota_select').find('option:selected').attr('data-userquotaprice'),
                unit_price_email_sent_quota: $('#email_sent_quota').find('option:selected').attr('data-email_sent_quota'),
                package_site_name: $('#site').find('option:selected').attr('data-packagename'),
                total_price_order: $('.total_price_order').attr('data-totalprice'),
                total_live: $('#total_live').val(),
                total_page: $("#package_store").find('option:selected').data('price') ? $("#package_store").find('option:selected').data('price') : 0,
                select_remove_brandname: $('#select_remove_brandname').val(),
                type_pack: $('#' + $('#package').val() + $('#month_number').val()).attr('data-type'),
                check_personal_site: $('#check_personal_site').val(),
                data_zoom: data_zoom
            };
            $.ajax({
                type: 'POST',
                url: base_url + '/upgrade/getLinkCheckOut',
                data: val_post,
                dataType: "json",
                beforeSend: function beforeSend() {
                    $(elm).attr('disabled', 'true').text('Đang xử lý...');
                },
                success: function success(rs) {
                    if (rs.error) {
                        for (var i = 0; i < rs.msg.length; i++) {
                            LHM.common.notify(null, 'warning', rs.msg[i]);
                        }
                        $(elm).removeAttr('disabled').text('Thanh toán ngay');
                    } else {
                        window.location.href = rs.data;
                    }
                }
            });
        }
    }, orders: {
        listOrders: function listOrders() {
            var tbody = $('#list_order');
            LHM.common.getListTable('list_order', '/orders/listOrders', function (res) {
                tbody.html(res.html);
            });
        }, assignToSale: function assignToSale() {/*$('.btn-reload-assign').attr('disabled', 'disabled');*/
        }, removeduplicateOrder: function removeduplicateOrder() {
        }, saveDetailOrder: function saveDetailOrder() {
            var status_process = $('#status_process').val(), payment_type = $('#payment_type').val(),
                ship_partner = $('#ship_partner').val(), note = $('#note').val(), address = $('#address').val(),
                sub_status = $('#sub-status').val(), other_sub_status = $('#other-sub-status').val(),
                payment_status = $('#status_payment').val();
            var city = $('#city_info_order').val();
            var district = $('#district_info_order').val();
            var val_post = {
                _token: $.cookie('_token'),
                status_process: status_process,
                payment_type: payment_type,
                note: note,
                address: address,
                city: city,
                district: district,
                ship_partner: ship_partner,
                other_sub_status: other_sub_status,
                sub_status: sub_status,
                payment_status: payment_status
            };
            $('.btn-save-detail-order-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-save-detail-order-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/orders/saveDetailOrder',
                data: val_post,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        $('.btn-save-detail-order-popup').html('<i class="fa fa-save"></i> Lưu chỉnh sửa');
                        $('.btn-save-detail-order-popup').removeAttr('disabled');
                        if (!rs.error) {
                            LHM.common.notify('fa fa-check', 'info', rs.msg[0]);
                            window.location.reload();
                        }
                        if (rs.error && rs.msg && rs.msg.length > 0) {
                            for (var i = 0; i < rs.msg.length; i++) {
                                LHM.common.notify(null, 'danger', rs.msg[i]);
                            }
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, addOrders: function addOrders() {
            var datastring = $('#form-create-orders').serialize() + '&_token=' + $.cookie('_token') + '&type_membership=' + $('select#membership_add_order option:selected').attr('data-type');
            $('.btn-add-orders-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang tạo');
            $('.btn-add-orders-popup').addClass('disabled');
            $.ajax({
                type: 'POST',
                url: base_url + '/orders/addOrder',
                data: datastring,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        $('.btn-add-orders-popup').html('<i class="fa fa-save"></i> Tạo đơn');
                        $('.btn-add-orders-popup').removeClass('disabled');
                        if (rs.error && rs.msg && rs.msg.length > 0) {
                            for (var i = 0; i < rs.msg.length; i++) {
                                LHM.common.notify(null, 'warning', rs.msg[i]);
                            }
                        }
                        if (!rs.error && rs.msg.length > 0) {
                            for (var _i13 = 0; _i13 < rs.msg.length; _i13++) {
                                LHM.common.notify(null, 'info', rs.msg[_i13]);
                            }
                            window.location.href = base_url + '/manage#orders';
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, printOrder: function printOrder(oid) {
            $.get(base_url + '/orders/printOrder', {oid: oid}, function (data) {
                var newWin = window.open("");
                newWin.document.write(data);
                newWin.print();
                newWin.close();
            });
        }, creatShipOrder: function creatShipOrder(curr) {
            var type = $(curr).attr('data-ship');
            if (type != '') {
                if (type == 'ghtk') {
                    var datastring = $('#form_ghtk_').serialize() + '&type=' + type + '&action=creatShipOrder';
                } else if (type == 'busship') {
                    var datastring = $('#form_busship_').serialize() + '&type=' + type + '&action=creatShipOrder';
                }
                $.ajax({
                    type: 'GET',
                    url: base_url + '/orders/creatShipOrder',
                    data: datastring,
                    dataType: 'json',
                    success: function success(rs) {
                        if (rs.success) {
                            $('#taovandon').modal('hide');
                            LHM.common.notify(null, 'info', 'Tạo vận đơn thành công');
                            setTimeout(function () {
                                window.location.reload();
                            }, 1000);
                        } else {
                            LHM.common.notify(null, 'danger', rs.message);
                        }
                    },
                    error: function error(err) {
                        LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                    }
                });
            } else {
                LHM.common.notify(null, 'danger', 'Vui lòng chọn đơn vị ship');
            }
        }
    }, detectDeviceRTC: {
        detectRTCReload: function detectRTCReload() {
            window.onerror = console.error = function () {
                LHM.detectDeviceRTC.appendTR('Error', JSON.stringify(arguments), 'error');
            };
            DetectRTC.load(function () {
                LHM.detectDeviceRTC.reloadDetectRTC();
                try {
                    if (DetectRTC.MediaDevices[0] && DetectRTC.MediaDevices[0].isCustomLabel) {
                        navigator.mediaDevices.getUserMedia({audio: true, video: true}).then(function (stream) {
                            var video;
                            try {
                                video = document.createElement('video');
                                video.muted = true;
                                video.volume = 0;
                                video.src = URL.createObjectURL(stream);
                                video.style.display = 'none';
                                video.style.opacity = 0;
                                (document.body || document.documentElement).appendChild(vide);
                            } catch (e) {
                            }
                            LHM.detectDeviceRTC.reloadDetectRTC(function () {// release camera
                                stream.getTracks().forEach(function (track) {
                                    track.stop();
                                });
                                if (video && video.parentNode) {
                                    video.parentNode.removeChild(video);
                                }
                            });
                        })["catch"](LHM.detectDeviceRTC.reloadDetectRTC);
                        return;
                    }
                } catch (e) {
                }
                LHM.detectDeviceRTC.onDetectRTCLoaded();
            });
        }, appendTR: function appendTR(firstValue, secondValue, orignal) {
            var tr = document.createElement('tr');
            tr.id = orignal;
            var html = '<td style="border-top: none; border-bottom: 1px solid #dee2e6; padding:15px;width:' + (parseInt(screenWidth00 / 2) - 180) + 'px!important; overflow:hidden;text-aling: center!important;width:80%!important;">' + firstValue + '</td>';
            html += '<td style="padding:5px;border-top: none; border-bottom: 1px solid #dee2e6;padding:15px;">' + secondValue + '</td>';
            tr.innerHTML = html;
            if (orignal === 'error') {
                tr.style.color = 'red';
            }
            browserFeaturesTable.appendChild(tr);
            return tr;
        }, printVal: function printVal(value) {
            return value == true ? '<span style="color: blue;">Có</span>' : value == false ? '<span style="color: red;">Không</span>' : value;
        }, getInfoDiv: function getInfoDiv(id) {
            return '<div class="info-div" id="' + id + '"></div>';
        }, onDetectRTCLoaded: function onDetectRTCLoaded() {
            browserFeaturesTable.innerHTML = '';
            LHM.detectDeviceRTC.appendTR('Trình duyệt hỗ trợ tương tác', LHM.detectDeviceRTC.printVal(DetectRTC.isWebRTCSupported), 'isWebRTCSupported');
            output = LHM.detectDeviceRTC.printVal(DetectRTC.hasSpeakers);
            LHM.detectDeviceRTC.appendTR('Loa', output, 'audioOutputDevices');
            output = LHM.detectDeviceRTC.printVal(DetectRTC.hasMicrophone);
            LHM.detectDeviceRTC.appendTR('Microphone', output, 'audioInputDevices');
            output = LHM.detectDeviceRTC.printVal(DetectRTC.hasWebcam);
            LHM.detectDeviceRTC.appendTR('Webcam', output, 'videoInputDevices');
            LHM.detectDeviceRTC.appendTR('Quyền truy cập Webcam', LHM.detectDeviceRTC.printVal(DetectRTC.isWebsiteHasWebcamPermissions), 'isWebsiteHasWebcamPermissions');
            LHM.detectDeviceRTC.appendTR('Quyền truy cập Microphone', LHM.detectDeviceRTC.printVal(DetectRTC.isWebsiteHasMicrophonePermissions), 'isWebsiteHasMicrophonePermissions');
            if (DetectRTC.audioInputDevices.length == 0 && DetectRTC.videoInputDevices.length == 0) {
                if (DetectRTC.browser.name == 'Chrome') {//$('#parse_detect_html').html(guide_detect_chorme)
                } else {//$('#parse_detect_html').html(guide_detect_moliza)
                }
            }
        }, reloadDetectRTC: function reloadDetectRTC(callback) {
            DetectRTC.load(function () {
                LHM.detectDeviceRTC.onDetectRTCLoaded();
                if (callback && typeof callback == 'function') {
                    callback();
                }
                if (DetectRTC.browser.name == 'Chrome') {
                    if (typeof callback != 'undefined' && typeof callback != 'function') {
                    }
                } else {
                    if (typeof callback != 'undefined' && typeof callback != 'function') {
                    }
                }
            });
        }
    }, category: {
        add_folder: function (type) {
            let parent_active = sessionStorage.getItem('folder_' + type) || '';
            LHM.category.add_category_new(null, type, parent_active, function (res) {
                if (res.data) {
                    let parent_id = res.data.parent_id ? res.data.parent_id['$id'] : '';
                    if (parent_active === parent_id) {
                        LHM.category.list_folder(type, parent_active)
                    }
                }
            })
        },
        list_folder: function() {
            if(!window.listCategories) window.listCategories = {}
            const type = arguments.length > 0 && arguments[0] ? arguments[0] : 'store'
            const parent_id = arguments.length > 1 && arguments[1] ? arguments[1] : ''
            const callback = arguments.length > 2 && arguments[2] ? arguments[2] : null
            const get_parent = !!(arguments.length > 3 && arguments[3])
            const list_folder = $('#folder-' + type);
            if(list_folder.length){
                const breadcrumbList = function (category_id) {
                    let breadcrumbDiv = list_folder.parent().find('.breadcrumb-list');
                    breadcrumbDiv.html('');
                    if (category_id && window.listCategories[category_id]) {
                        let category = window.listCategories[category_id]
                        breadcrumbDiv.prepend('<div class="folder-' + type + ' breadcrumb-child font-weight-bold ellipsis-1" data-id="' + category.parent_id + '" style="">' + category.name + '</div>');
                        category_id = category.parent_id;
                        while (true) {
                            if (category_id === '') {
                                breadcrumbDiv.prepend('<div class="folder-' + type + ' folder-child breadcrumb-child" data-id=""><div class="click">Tất cả</div></div><span>/</span>');
                                break;
                            } else if (window.listCategories[category_id]) {
                                breadcrumbDiv.prepend('<div class="folder-' + type + ' folder-child ellipsis-1 breadcrumb-child" data-id="' + category_id + '"><div class="click">' + window.listCategories[category_id].name + '</div></div><span>/</span>');
                                category_id = window.listCategories[category_id].parent_id;
                            } else {
                                category_id = '';
                            }
                        }
                    }
                }
                list_folder.empty();
                $.ajax({
                    url: '/category/listByType',
                    type: 'GET',
                    data: {
                        type: type,
                        parent_id: parent_id,
                        get_parent: get_parent ? 'true' : 'false'
                    },
                    dataType: 'json',
                    success: (res) => {
                        $('.filter-category-id-folder').val(parent_id);
                        sessionStorage.setItem('folder_' + type, parent_id);
                        if(res.parents && res.parents.length){
                            console.log(res.parents)
                            res.parents.forEach(function (value, index) {
                                window.listCategories[value._id['$id']] = {
                                    'name': value.name,
                                    'parent_id': value.parent_id['$id']
                                };
                            })
                        }
                        if (res.items && res.items.length) {
                            res.items.forEach(function (value, index) {
                                window.listCategories[value._id['$id']] = {
                                    'name': value.name,
                                    'parent_id': parent_id
                                };
                                let html = '<div class="folder-test folder-child folder-child-css" title="' + value.name + '" data-id="' + value._id['$id'] + '"><div class="flex-1 folder-p d-flex justify-content-between align-items-center gap-1 click"><i class="fas fa-folder"></i><div class="ellipsis-1 flex-1">' + value.name + '</div></div>';
                                html += '<div><a data-toggle="dropdown" aria-expanded="false" class="folder-p"><i class="fas fa-ellipsis-v"></i></a><div class="dropdown-menu"><a class="dropdown-item" data-action="edit" href="javascript:void(0);">Chỉnh sửa</a><a class="dropdown-item" data-action="delete" href="javascript:void(0);"> Xóa</a></div></div>';
                                list_folder.append(html + '</div>');
                            })
                        }
                        breadcrumbList(parent_id, list_folder);
                        const childFolder = list_folder.parent().find('.folder-child')
                        childFolder.find('.click').click(function () {
                            LHM.category.list_folder(type, $(this).closest('.folder-child').data('id'), callback)
                        });
                        childFolder.find('.dropdown-item').click(function () {
                            let that = $(this), action = $(this).data('action'),
                                id = $(this).closest('.folder-child').data('id');
                            if (action === 'edit') {
                                LHM.category.add_category_new(id, type, null, function (res) {
                                    if (res.data) {
                                        that.closest('.folder-child').attr('title', res.data.name).find('.ellipsis-1').text(res.data.name);
                                    }
                                })
                            } else if (action === 'delete') {
                                LHM.category.delete_ajax(id, 'Xóa danh mục', function () {
                                    that.closest('.folder-child').remove();
                                })
                            }
                        });
                        if (callback) callback();
                    }
                })
            } else if (callback) callback();
        },
        updateSortCategories: function updateSortCategories() {
            var getList = function getList(items) {
                var data = [];
                if (items.length) {
                    var key = 0;
                    items.each(function () {
                        var plus = {
                            'id': $(this).data('category-id'),
                            'text': $(this).find('.li-title:first > :first').text()
                        };
                        if ($(this).find('ul:first > li').length) {
                            plus['items'] = getList($(this).find('ul:first > li'));
                        }
                        data[key++] = plus;
                    });
                }
                return data;
            };
            var data = getList($('#category_site_course ul:first > li'));
            LHM.common.confirmAjax('/category?a=sortCategory', 'POST', {items: data, _token: $.cookie('_token')});
        }, parseCategoryUl: function parseCategoryUl(items) {
            var _this2 = this;
            var h = '';
            $.each(items, function (k, v) {
                var ch = '';
                if (v.children && v.children.length) {
                    ch = _this2.parseCategoryUl(v.children);
                }
                h += "<li data-category-id=\"".concat(v._id, "\">\n                        <div class=\"li-title d-flex gap-1 align-items-center\">\n                            <div class=\"font-weight-bold d-flex justify-content-center flex-1 align-items-center\">\n                                <a href=\"javascript:;\" class=\"mr-2 btn-sm btn-default border js-open-close\">\n                                    <i class=\"fas fa-plus-circle\"></i>\n                                </a>\n                                <div class=\"flex-1 js-category-click\" title=\"").concat(v.name, "\">").concat(v.name, "</div>\n                            </div>\n                            <div class=\"list-action\">\n                                <a href=\"javascript:;\" data-id=\"").concat(v._id, "\" class=\"edit_category_course btn-sm btn-info\"><i class=\"fas fa-edit\"></i></a>\n                                <a href=\"javascript:;\" data-id=\"").concat(v._id, "\" class=\"delete_category_course btn-sm btn-danger\"><i class=\"fa fa-trash deletes\"></i></a>\n                            </div>\n                        </div>\n                        <ul class=\"d-none\">").concat(ch, "</ul>\n                    </li>\n                    ");
            });
            return h;
        }, getCategories: function getCategories(type, name_func) {
            var category_new = type == 'store' || type == 'combo_document';
            $.ajax({
                type: 'GET', url: base_url + '/category?a=list&type=' + type,// data: val_post,
                dataType: 'json', beforeSend: function beforeSend() {
                    if (category_new) {
                        $('#category_site_course .js-drop-category').hide();
                    } else if (type == 'blog' || type == 'document' || type == 'product') {
                        $('#dashboard .' + type + ' #categories_' + type).html('<tr><td colspan="6" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                    }
                }, success: function success(cats) {
                    if (cats.login && cats.login == 1) {
                        if (category_new) {
                            var html = '';
                            if (cats.data.length) {
                                html = LHM.category.parseCategoryUl(cats.data);
                            } else {
                                html = '<li class="text-center">Không có dữ liệu</li>';
                            }
                            $("#category-tree-course ul").html(html);
                            setTimeout(function () {
                                $("#category-tree-course ul").sortable({
                                    connectWith: "#category-tree-course ul",
                                    items: "li",
                                    placeholder: "portlet-placeholder",
                                    tolerance: "pointer",
                                    update: function update() {
                                        $('#category_site_course .js-drop-category').show();
                                    }
                                }).disableSelection();
                            });
                            if (type == 'combo_document' && $('#filter-category-document').length) {
                                $("#filter-category-document ul").html(html);
                                $("#filter-category-document ul .list-action").remove();
                            } else if (type == 'store' && $('#filter-category-course').length) {
                                $('#filter-category-course').addClass('isChange');
                                $("#filter-category-course ul").html(html);
                                $("#filter-category-course ul .list-action").remove();
                            }
                        } else {
                            if (cats.data.length > 0) {//parse cats
                                var _html2 = '';
                                var _loop3 = function _loop3() {
                                    var n = cats.data[i];
                                    _html2 += '<tr id="' + n['_id'] + '">';
                                    _html2 += '<td>' + n['no'] + '</td>';
                                    _html2 += '<td n="' + n['name'] + '">' + (n['name'] || '-') + '</td>';
                                    _html2 += '<td d="' + n['description'] + '">' + n['description'] + '</td>';
                                    if (n['list_lang']) {
                                        $.each(n['list_lang'], function (key, value) {
                                            _html2 += "<td><a href=\"category/updateOrCreate/".concat(n['_id'], "/").concat(key, "\"><img class=\"witdth-25\" src=\"").concat(value, "\" title=\"Click Edit (").concat(key, ")\"></a></td>");
                                        });
                                    }
                                    _html2 += '<td align="center">';
                                    _html2 += '           <ul class="list-unstyled acts-li">';
                                    _html2 += '           <li class=""><a href="javascript:;" onclick="LHM.category.delete_category(this, \'' + name_func + '\',\'' + type + '\')" data-id="' + n['_id'] + '"><i class="fa fa-trash deletes"></i> Xóa</a></li>';
                                    _html2 += '           <li class=""><a href="javascript:;" onclick="LHM.category.edit_category(this, \'' + name_func + '\')" data-id="' + n['_id'] + '"><i class="fas fa-edit"></i> Sửa </a></li>';
                                    _html2 += '           </ul>';
                                    _html2 += ' </td>';
                                    _html2 += '</tr>';
                                };
                                for (var i in cats.data) {
                                    _loop3();
                                }
                                if (type == 'store') {
                                    $('#dashboard .' + type + ' #categories_course').html(_html2);
                                } else if (type == 'blog') {
                                    $('#dashboard .' + type + ' #categories_' + type).html(_html2);
                                } else if (type == 'document') {
                                    $('#dashboard #categories_doc').html(_html2);
                                } else if (type == 'product') {
                                    console.log($('#dashboard #categories_pro'));
                                    $('#dashboard #categories_pro').html(_html2);
                                }
                            } else {
                                if (type == 'store') {
                                    $('#dashboard .' + type + ' #categories_course').html('<tr><td colspan="6" class="nodata">Không có dữ liệu</td></tr>');
                                } else if (type == 'blog') {
                                    $('#dashboard .' + type + ' #categories_' + type).html('<tr><td colspan="6" class="nodata">Không có dữ liệu</td></tr>');
                                } else if (type == 'document') {
                                    console.log($('#dashboard #categories_doc'));
                                    $('#dashboard #categories_doc').html('<tr><td colspan="6" class="nodata">Không có dữ liệu</td></tr>');
                                } else if (type == 'product') {
                                    $('#dashboard #categories_pro').html('<tr><td colspan="6" class="nodata">Không có dữ liệu</td></tr>');
                                }
                            }
                            $('#tbl-list-cate tbody').sortable({
                                update: function update(e, ui) {
                                    var data = $(this).sortable('toArray', {attribute: 'id'});
                                    LHM.courses.updateCateNum(data);
                                }
                            });
                            $('#tbl-list-cate tbody').disableSelection();
                        }
                    } else if (cats.login && cats.login == 2) {
                        window.location = cats.href;
                    }
                }
            });
        }, edit_category: function edit_category(curr) {
            let id = $(curr).data('id');
            this.add_category_new(id, '', '', function (res) {
                $(curr).parents('tr#' + id).find('td[n]').text(res.data.name);
                $(curr).parents('tr#' + id).find('td[d]').text(res.data.description || '');
            });
        }, selectList: function () {
            var _selectList = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(div) {
                var type, data, selectCategory, value, classChoice, placeHolder, id, eventChange, _args7 = arguments;
                return _regeneratorRuntime().wrap(function _callee7$(_context7) {
                    while (1) switch (_context7.prev = _context7.next) {
                        case 0:
                            type = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : 'store';
                            data = _args7.length > 2 ? _args7[2] : undefined;
                            selectCategory = $(div), value = selectCategory.data('value'), classChoice = 'choice', placeHolder = selectCategory.data('place-holder'), id = 'selectList_category_' + Date.now(), eventChange = selectCategory.attr('name') && selectCategory.attr('multiple');
                            if (typeof value == 'undefined') {
                                value = '';
                            }
                            if (data) {
                                _context7.next = 7;
                                break;
                            }
                            _context7.next = 7;
                            return $.get("/category/getList/".concat(type, "/").concat(value), function (res) {
                                data = res.data;
                            });
                        case 7:
                            selectCategory.addClass('added_category');
                            if (eventChange) {
                                $("<input type=\"hidden\" name=\"".concat(selectCategory.attr('name'), "\" id=\"").concat(id, "\" value=\"").concat(value, "\"/>")).insertBefore(selectCategory);
                                selectCategory.attr('name', '');
                            }
                            if (!selectCategory.attr('multiple')) {
                                classChoice += ' choice-radio';
                            }
                            if (selectCategory.find('option').length === 0) {
                                selectCategory.append('<option></option>');
                            }
                            selectCategory.select2({
                                data: data,
                                placeholder: placeHolder !== null && placeHolder !== void 0 ? placeHolder : "-- ".concat(__('Danh mục'), " --"),
                                allowClear: true,
                                templateResult: function templateResult(option) {
                                    return $("<div class=\"d-flex\" style=\"padding-left: ".concat(option.padding_left, "px\"></div>")).html("<div class=\"".concat(classChoice, "\"></div><div class=\"flex-1\">").concat(option.text, "</div>"));
                                }
                            }).on("change.select2", function () {
                                if (eventChange) {
                                    var _data = $(this).select2('data'), listStr = _data.map(function (item) {
                                        return item.id;
                                    }).join();
                                    $("#".concat(id)).val(listStr);
                                }
                            }).on('select2:open', function () {
                                var $container = $(this).data('select2').$dropdown.find('.select2-dropdown');
                                $container.addClass('not-hidden-select2');
                            });
                        case 12:
                        case"end":
                            return _context7.stop();
                    }
                }, _callee7);
            }));

            function selectList(_x7) {
                return _selectList.apply(this, arguments);
            }

            return selectList;
        }(), add_category_new: function add_category_new(itemId) {
            var type = arguments.length > 1 && arguments[1] ? arguments[1] : 'store';
            var parent_id = arguments.length > 2 && arguments[2] ? arguments[2] : ''
            var callback = arguments.length > 3 && arguments[3] ? arguments[3] : null
            $.get("/category", {
                a: 'parseForm', type: type, itemId: itemId, parentId: parent_id
            }, function (res) {
                let confirm = $.confirm({
                    title: itemId ? __('Chỉnh sửa') : __('Thêm mới'),
                    content: res.html,
                    onContentReady: function onContentReady() {
                        LHM.category.selectList('#select-category-tree', type, res.categories);
                        $('#category_site_edit').submit(function(e) {
                            e.preventDefault();
                            LHM.common.callAjax(
                                '/category?a=edit', 'POST',
                                $(this).serialize() + "&_token=".concat($.cookie('_token')),
                                function (res) {
                                    if (res.success) {
                                        if(callback) {
                                            callback(res);
                                        } else {
                                            setTimeout(function () {
                                                LHM.category.getCategories(type, '');
                                            }, 500);
                                        }
                                        confirm.close();
                                    }
                                }
                            )
                        })
                    },
                    buttons: {
                        Ok: {
                            btnClass: 'btn-success',
                            action: function action() {
                                $('#category_site_edit').submit()
                                return false;
                            }
                        }, cancel: {}
                    }
                });
            });
        }, add_category: function add_category(idname, type) {
            this.add_category_new('', type, '', function (res) {
                let categories = $('#dashboard .' + type + ' #categories_' + type)
                if (categories.find('tr').length === 1 && !categories.find('tr').hasClass('cat-item'))
                    categories.html('');
                if (type === "store") {
                    LHM.category.getCategories('store', 'danh mục khóa học');
                } else if (type === "blog") {
                    LHM.category.getCategories('blog', 'danh mục bài viết');
                } else if (type === "document") {
                    LHM.category.getCategories('document', 'danh mục tài liệu');
                }
                $('#category').append('<option value="' + res.data['_id']['$id'] + '">' + res.data['name'] + '</option>');
                $('#category_list_filter').append('<option value="' + res.data['_id']['$id'] + '">' + res.data['name'] + '</option>');
            });
        }, delete_category: function delete_category(curr, idname, type) {
            this.delete_ajax($(curr).data('id'), 'Xóa ' + idname, function(res) {
                $(curr).closest("tr").remove();
                if ($('#dashboard .' + type + ' #categories tr').length === 0) $('#dashboard .' + type + ' #categories').html('<tr><td colspan="5">Không có dữ liệu</td></tr>');
            })
        }, delete_ajax: function (itemId, title = "Xóa danh mục", callback) {
            $.confirm({
                title: title,
                content: 'Bạn có muốn tiếp tục không?',
                buttons: {
                    Ok: {
                        btnClass: 'btn-danger',
                        action: function Ok() {
                            LHM.common.callAjax('/category?a=delete', 'POST', {
                                _token: $.cookie('_token'),
                                itemId: itemId
                            }, function(res) {
                                if(callback) callback(res)
                            })
                        }
                    }, Cancel: {}
                }
            });
        }
    }, blog: {
        getNews: function getNews(page) {
            page = page ? page : 0;
            $('#dashboard #news').html('<tr><td colspan="5" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            var val_post = {
                _token: $.cookie('_token'),
                category: $('#category_list_filter').val(),
                name: $('#blog_name').val(),
                limit_record: page//lang : $.cookie('lang')
            };
            $.ajax({
                type: 'GET',
                url: base_url + '/blog/?a=list_news',
                data: val_post,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.pagination_site(rs.count_record, rs.limit, page, 'news');
                        if (rs.news.length > 0) {//parse news
                            var html = '';
                            var _loop4 = function _loop4() {
                                var n = rs.news[i];
                                html += '<tr id="' + n['_id'] + '">';// html += '<td>' + (page*rs.limit + parseInt(i) + 1) + '</td>';
                                html += '<td><div class="row">' + '<div class="col-md-2">' + '<img src="' + n['cover'] + '" alt="' + n['title'] + '" style="width:90px;height:45px;">' + '</div>' + '<div class="col-md-10">' + '<a href="' + n['link_detail'] + '" target="_blank">' + n['title'] + '(' + n['lang'] + ')</a>' + '<div style="font-size:12px;"><i>Cập nhật: ' + n['by'] + ' lúc ' + n['date'] + '</i></div>' + '</div>' + '</div></td>';
                                html += '<td>' + (n['cate'] || '-') + '</td>';
                                html += ' <td> <span class="badge badge-' + n['status']['label_color'] + '">' + n['status']['label'] + '</span> </td>';
                                if (n['list_lang']) {
                                    $.each(n['list_lang'], function (key, value) {
                                        html += "<td><a href=\"blog/updateOrCreate/".concat(n['_id'], "/").concat(key, "\"><img class=\"witdth-25\" src=\"").concat(value, "\" title=\"Click Edit (").concat(key, ")\"></a></td>");
                                    });
                                }
                                html += '<td align="center">';
                                html += '           <ul class="list-unstyled acts-li">';
                                html += '           <li class=""><a href="javascript:;" onclick="LHM.blog.delete_news(this, ' + n['_id'] + ')"><i class="fa fa-trash deletes"></i> Xóa</a></li>';
                                html += '           <li class=""><a href="/blog/edit_news/' + n['_id'] + '" class=""><i class="fas fa-edit"></i> Sửa</a></li>';
                                html += '           </ul>';
                                html += ' </td>';
                                html += '</tr>';
                            };
                            for (var i in rs.news) {
                                _loop4();
                            }
                            $('#dashboard #news').html(html);
                        } else {
                            $('#dashboard #news').html('<tr><td colspan="5">Không có dữ liệu</td></tr>');
                        }
                        if (rs.categories.length > 0) {//parse news
                            var _html4 = '<option value="all">Tất cả danh mục</option>';
                            for (var _i14 in rs.categories) {
                                var n = rs.categories[_i14];
                                if ($('#category_list_filter').val() == n._id['$id']) _html4 += '<option value="' + n._id['$id'] + '" selected>' + n.name + '</option>'; else _html4 += '<option value="' + n._id['$id'] + '">' + n.name + '</option>';
                            }
                            $('#dashboard #category_list_filter').html(_html4);
                        }
                        $('#tbl-list-blog-news tbody').sortable({
                            update: function update(e, ui) {
                                var data = $(this).sortable('toArray', {attribute: 'id'});
                                LHM.blog.updateBlogNewsNum(data);
                            }
                        });
                        $('#tbl-list-cate tbody').disableSelection();
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, updateBlogNewsNum: function updateBlogNewsNum(data) {
            $.ajax({
                url: '/blog/updateBlogNewsNum',
                type: 'POST',
                data: {news_ids: data, _token: $.cookie('_token')},
                success: function success(res) {
                    if (res.status) {
                        LHM.common.notify(null, 'success', res.message, 'col-md-2');
                    } else {
                        LHM.common.notify(null, 'danger', res.message);
                    }
                }
            });
        }, edit_news: function edit_news(nid) {
            CKEDITOR.instances.content.updateElement();
            var datastring = $('#news').serialize();
            datastring = datastring + '&_token=' + $.cookie('_token') + '&id=' + nid;
            $('.btn-edit-news-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-edit-news-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/blog?a=update_news',
                data: datastring,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        $('.btn-edit-news-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-edit-news-popup').removeAttr('disabled');
                        if (rs.error) {
                            for (var i in rs.msg) {
                                LHM.common.notify(null, 'warning', rs.msg[i]);
                            }
                        } else {
                            LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                            setTimeout(function () {
                                window.location.href = base_url + '/manage#blog';
                            }, 500);
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, create_news: function create_news() {
            CKEDITOR.instances.content.updateElement();
            var datastring = $('#news').serialize();
            datastring = datastring + '&_token=' + $.cookie('_token');
            $('.btn-create-news-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang tạo');
            $('.btn-create-news-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/blog?a=create_news',
                data: datastring,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        $('.btn-create-news-popup').html('<i class="fa fa-save"></i> Tạo');
                        $('.btn-create-news-popup').removeAttr('disabled');
                        if (rs.error) {
                            for (var i in rs.msg) {
                                LHM.common.notify(null, 'warning', rs.msg[i]);
                            }
                        } else {
                            LHM.common.notify(null, 'success', 'Tạo thành công!');
                            setTimeout(function () {
                                window.location.href = base_url + '/manage#blog';
                            }, 500);
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, delete_news: function delete_news(current, nid) {
            var val_post = {_token: $.cookie('_token'), nid: nid};
            $.confirm({
                title: 'Xóa bài viết', content: 'Bạn có muốn tiếp tục không?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/blog?a=delete_news',
                            data: val_post,
                            dataType: 'json',
                            success: function success(_success20) {
                                if (_success20.login && _success20.login == 1) {
                                    if (!_success20.error) {
                                        $(current).closest("tr").remove();
                                    }
                                } else if (_success20.login && _success20.login == 2) {
                                    window.location = _success20.href;
                                }
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }, filemanager: function filemanager() {
            $.alert({
                title: "Chọn ảnh",
                content: 'url:' + base_url + '/uploader/genuploader?extratools=library,upimage',
                columnClass: "col-sm-8",
                buttons: {close: {text: 'Đóng'}},
                onContentReady: function onContentReady() {
                    window.filemanager = this;//handle uploader
                    LHM.uploader.init(function (data_file) {//calbback when upload success
//object file
                        if (data_file._id) {
                            $('.upload-cover img').attr('src', data_file['url']);
                            $('.upload-cover #thumbnail').val(data_file['_id']['$id']);
                        } else {//[datafile, datafile]
                            for (var i in data_file) {//LHM.lessons.addfiletolesson(data_file[i], lesson_id, false);
                                $('.upload-cover img').attr('src', data_file[i]['url']);
                                $('.upload-cover #thumbnail').val(data_file[i]['fid']);
                            }
                        }//close popup
                        window.filemanager.close();
                    });
                }
            });
        }
    }, document: {
        getListDocument: function getListDocument(page) {
            page = page ? page : 0;
            $('#dashboard #documents').html('<tr><td colspan="5" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            var val_post = {
                _token: $.cookie('_token'),
                category: $('#category_document_list_filter').val(),
                title: $('#title').val(),
                limit_record: page
            };
            $.ajax({
                type: 'GET',
                url: base_url + '/document/getList',
                data: val_post,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.pagination_site(rs.count_record, rs.limit, page, 'documents');
                        if (rs.documents.length > 0) {//parse news
                            var html = '';
                            var _loop5 = function _loop5() {
                                var n = rs.documents[i];
                                html += '<tr id="' + n['_id'] + '">';// html += '<td>' + (page*rs.limit + parseInt(i) + 1) + '</td>';
                                html += '<td><div class="row">' + '<div class="col-md-2">' + '<img src="' + n['cover'] + '" alt="' + n['title'] + '" style="width:90px;height:45px;">' + '</div>' + '<div class="col-md-10">' + '<a href="' + n['link_detail'] + '" target="_blank">' + n['title'] + '</a>' + '<div style="font-size:12px;"><i>Cập nhật: ' + n['by'] + ' lúc ' + n['date'] + '</i></div>' + '</div>' + '</div></td>';
                                html += '<td>' + (n['cate'] || '-') + '</td>';
                                html += ' <td> <span class="badge badge-' + n['status']['label_color'] + '">' + n['status']['label'] + '</span> </td>';
                                if (n['list_lang']) {
                                    $.each(n['list_lang'], function (key, value) {
                                        html += "<td><a href=\"blog/updateOrCreate/".concat(n['_id'], "/").concat(key, "\"><img class=\"witdth-25\" src=\"").concat(value, "\" title=\"Click Edit (").concat(key, ")\"></a></td>");
                                    });
                                }
                                html += '<td align="center">';
                                html += '           <ul class="list-unstyled acts-li">';
                                html += '           <li class=""><a href="javascript:;" onclick="LHM.document.delete(this, \'' + n['_id'] + '\')"><i class="fa fa-trash deletes"></i> Xóa</a></li>';
                                html += '           <li class=""><a href="/document/edit/' + n['_id'] + '" class=""><i class="fas fa-edit"></i> Sửa</a></li>';
                                html += '           </ul>';
                                html += ' </td>';
                                html += '</tr>';
                            };
                            for (var i in rs.documents) {
                                _loop5();
                            }
                            $('#dashboard #documents').html(html);
                        } else {
                            $('#dashboard #documents').html('<tr><td colspan="5">Không có dữ liệu</td></tr>');
                        }
                        if (rs.categories.length > 0) {//parse news
                            var _html5 = '<option value="all">Tất cả danh mục</option>';
                            for (var _i15 in rs.categories) {
                                var n = rs.categories[_i15];
                                if ($('#category_document_list_filter').val() == n._id['$id']) _html5 += '<option value="' + n._id['$id'] + '" selected>' + n.name + '</option>'; else _html5 += '<option value="' + n._id['$id'] + '">' + n.name + '</option>';
                            }
                            $('#dashboard #category_document_list_filter').html(_html5);
                        }
                        $('#tbl-list-document tbody').disableSelection();
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, create_document: function create_document() {
            CKEDITOR.instances.content.updateElement();
            var datastring = $('#news').serialize();
            datastring = datastring + '&_token=' + $.cookie('_token');
            $('.btn-create-news-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang tạo');
            $('.btn-create-news-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/document/store',
                data: datastring,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        $('.btn-create-news-popup').html('<i class="fa fa-save"></i> Tạo');
                        $('.btn-create-news-popup').removeAttr('disabled');
                        if (rs.error) {
                            for (var i in rs.msg) {
                                LHM.common.notify(null, 'warning', rs.msg[i]);
                            }
                        } else {
                            LHM.common.notify(null, 'success', 'Tạo thành công!');
                            setTimeout(function () {
                                window.location.href = base_url + '/manage#document';
                            }, 500);
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, "delete": function _delete(current, nid) {
            var val_post = {_token: $.cookie('_token'), nid: nid};
            $.confirm({
                title: 'Xóa bài viết', content: 'Bạn có muốn tiếp tục không?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/document/delete',
                            data: val_post,
                            dataType: 'json',
                            success: function success(_success21) {
                                if (_success21.login && _success21.login == 1) {
                                    if (!_success21.error) {
                                        $(current).closest("tr").remove();
                                    }
                                } else if (_success21.login && _success21.login == 2) {
                                    window.location = _success21.href;
                                }
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }, update: function update(nid) {
            CKEDITOR.instances.content.updateElement();
            var datastring = $('#news').serialize();
            datastring = datastring + '&_token=' + $.cookie('_token') + '&id=' + nid;
            $('.btn-edit-news-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang cập nhật');
            $('.btn-edit-news-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/document/update',
                data: datastring,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        $('.btn-edit-news-popup').html('<i class="fa fa-save"></i> Cập nhật');
                        $('.btn-edit-news-popup').removeAttr('disabled');
                        if (rs.error) {
                            for (var i in rs.msg) {
                                LHM.common.notify(null, 'warning', rs.msg[i]);
                            }
                        } else {
                            LHM.common.notify(null, 'success', 'Cập nhật thành công!');
                            setTimeout(function () {
                                window.location.href = base_url + '/manage#document';
                            }, 500);
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }
    }, uploader: {
        init: function init(callback) {
            var datapage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
            var backendURI = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'https://video.edubit.vn';
            var videoNetSiteId = 6;
            if (datapage && datapage.site_id) {
                videoNetSiteId = datapage.site_id;
            }
            LHM.uploader.uploadVideo(callback, backendURI, videoNetSiteId);// upload video new version
//open dialog choice file
            var _this;
            $('.btn-upload-video').on('click', function () {// LHM.common.notify(null, 'warning', "Tính năng upload video hiện đang bảo trì");
                $('#myDropzone').click();
            });
            $('.btn-upload').on('click', function () {
                _this = this;
                window.upload_type = $(this).data('type');
                $('#upload-file').trigger('click');
            });
            $('.btn-upload-multiple').on('click', function () {
                _this = this;
                window.upload_type = $(this).data('type');
                $('#upload-file-multiple').trigger('click');
            });
            $('.btn-addyoutube').on('click', function () {
                _this = this;
                var url = $('#url-youtube').val(), video_duration = $('#video_duration_yb').val();//hidden msg
                $(this).parents('.url-youtube').find('.invalid-feedback').hide();
                var data = {url: url, video_duration: video_duration, _token: $.cookie('_token')};//data at some page
                if (datapage) data.datapage = datapage;
                $.post(base_url + '/uploader/addyoutube', data, function (rs) {
                    if (rs.error) {
                        for (var i in rs.msg) {
                            var error = '';
                            for (var i in rs.msg) {
                                error += rs.msg[i] + '<br>';
                            }
                            $(_this).parents('.url-youtube').find('.invalid-feedback').html(error).show();
                        }
                    } else {
                        $('#url-youtube').val('');
                        LHM.common.notify(null, 'success', 'Thêm thành công!');
                        callback(rs.data);
                    }
                });
            });
            $('.btn-addvimeo').on('click', function () {
                _this = this;
                var url = $('#url-vimeo').val();//hidden msg
                $(this).parents('.url-vimeo').find('.invalid-feedback').hide();
                var data = {url: url, video_duration: $('#video_duration_vimeo').val(), _token: $.cookie('_token')};//data at some page
                if (datapage) data.datapage = datapage;
                $.post(base_url + '/uploader/addvimeo', data, function (rs) {
                    if (rs.error) {
                        for (var i in rs.msg) {
                            var error = '';
                            for (var i in rs.msg) {
                                error += rs.msg[i] + '<br>';
                            }
                            $(_this).parents('.url-vimeo').find('.invalid-feedback').html(error).show();
                        }
                    } else {
                        $('#url-vimeo').val('');
                        LHM.common.notify(null, 'success', 'Thêm thành công!');
                        callback(rs.data);
                    }
                });
            });
            var total_file = 0;
            var count_file = 0;
            var count_file_success = 0, maxSize = 4294967296, msMaxSize = 'Upload file tối đa là 4G';
            var callback_success = '';//listen upload multiple
            $('#upload-file-multiple').bind('fileuploadsubmit', function (_, data) {
                var formData = {
                    _token: $.cookie('_token'),
                    type: window.upload_type,
                    type_image: window.type_image ? window.type_image : '',
                    upload_multiple: true,
                    file_id: ''
                };
                data.formData = formData;
                data.url = base_url + '/uploader/transfer';
                total_file++;
                $('#count_file_upload').text(count_file_success + '/' + total_file);
            }).fileupload({autoUpload: true}, 'option', {
                maxChunkSize: 1000000,// 1 MB
                maxRetries: 3, retryTimeout: 500, dropZone: null, uploadMultiple: true
            }).bind('fileuploadadd', function (_, data) {
                window.invalid_ext_upload = 0;
                var uploadErrors = [];
                var acceptFileTypes = /(\.|\/)(zip|x-zip-compressed|x-zip|jpe?g|png|mpeg|rar|jpg|pdf|vnd.openxmlformats-officedocument.wordprocessingml.document|msword|vnd.ms-excel|vnd.openxmlformats-officedocument.spreadsheetml.sheet|vnd.ms-powerpoint|vnd.openxmlformats-officedocument.presentationml.presentation|wav|mp4)$/i;
                $.each(data.originalFiles, function (key, val) {
                    if (val.type && !acceptFileTypes.test(val.type)) {
                        uploadErrors.push('Định dạng file không hợp lệ');
                    }
                    if (val.size && val.size > maxSize) {
                        uploadErrors.push(msMaxSize);
                    }
                });
                var jqXHR = data.submit();
                if (uploadErrors.length > 0) {
                    LHM.common.notify(null, 'warning', uploadErrors[0]);
                    jqXHR.abort();
                    jqXHR = null;
                    return false;
                } else {
                    $(_this).hide();
                }
            }).bind('fileuploadchunkdone', function (_, data) {
                console.log('fileuploadchunkdone', data);
                data.formData.file_id = data.result && data.result.file_id ? data.result.file_id : null;
                if (!data.result.ext_valid) {
                    window.invalid_ext_upload = 1;
                }
            }).bind('fileuploadchunksend', function (_, data) {
                if (window.invalid_ext_upload === 1) {
                    var jqXHR = data.submit();
                    jqXHR.abort();
                    jqXHR = null;
                    LHM.common.notify(null, 'warning', 'Định dạng file không hợp lệ');//show btn upload
                    $(_this).show();
                    $(_this).parent().find('.progressing-bar').html('');
                    $(_this).parent().find('.message').hide();
                    $(_this).parent().find('.message-loading').hide();
                    window.invalid_ext_upload = 0;
                    return false;
                }
            }).bind('fileuploaddone', function (_, data) {
                console.log('fileuploaddone', data);
                data.formData.file_id = '';
                if (data.result == 'The action you have requested is not allowed.') {
                    LHM.common.notify(null, 'warning', 'Định dạng file không hợp lệ');
                } else if (data.result.error) {
                    for (var i in data.result.msg) {
                        LHM.common.notify(null, 'warning', data.result.msg[i]);
                    }
                } else {
                    LHM.common.notify(null, 'success', 'Upload thành công!');
                    if (count_file >= total_file) {
                        callback(data.result.data);
                        $(_this).show();
                        $('#count_file_upload').text(count_file + '/' + total_file);
                    }
                }
            }).bind('fileuploadprogress', function (_, data) {
                var uploadpercent = data._progress.loaded / data._progress.total;
                uploadpercent = Math.round(uploadpercent * 100);
                var thisprogress = $(_this).parent().find('.progressing-bar');
                $(_this).parent().find('.message').show();
                $(_this).parent().find('.message-loading').show();
                var html = '<div class="progress">' + '<div class="progress-bar" role="progressbar" style="width: ' + uploadpercent + '%;" aria-valuenow="' + uploadpercent + '" aria-valuemin="0" aria-valuemax="100">' + uploadpercent + '%</div>' + '</div>';
                thisprogress.html(html);
                if (uploadpercent == 100) {
                    if (count_file >= total_file) {
                        thisprogress.html('');
                        $(_this).parent().find('.message').hide();
                        $(_this).parent().find('.message-loading').hide();
                        $('#count_file_upload').text('');
                    }
                    count_file++;
                    $('#count_file_upload').text(count_file + '/' + total_file);
                }
            });//listen upload
            $('#upload-file').bind('fileuploadsubmit', function (e, data) {
                var formData = {
                    _token: $.cookie('_token'),
                    type: window.upload_type,
                    type_image: window.type_image ? window.type_image : ''
                };
                data.formData = formData;
                data.url = base_url + '/uploader/transfer';
            }).fileupload({autoUpload: true}, 'option', {
                maxChunkSize: 1000000,// 1 MB
                maxRetries: 3, retryTimeout: 500, dropZone: null//acceptFileTypes: /(\.|\/)(gif|jpe?g|png|jpg|3gp|asf|avi|mp4|mov|vob|wmv|mp3|pdf|docx|doc|xls|xlsx|ppt)$/i
            }).bind('fileuploadadd', function (e, data) {//hidden btn upload
                window.invalid_ext_upload = 0;
                var uploadErrors = [];
                var acceptFileTypes = /(\.|\/)(zip|x-zip-compressed|x-zip|jpe?g|png|mpeg|rar|jpg|pdf|vnd.openxmlformats-officedocument.wordprocessingml.document|msword|vnd.ms-excel|vnd.openxmlformats-officedocument.spreadsheetml.sheet|vnd.ms-powerpoint|vnd.openxmlformats-officedocument.presentationml.presentation|wav|mp4)$/i;
                if (data.originalFiles[0]['type'].length && !acceptFileTypes.test(data.originalFiles[0]['type'])) {
                    uploadErrors.push('Định dạng file không hợp lệ');
                }
                if (data.originalFiles[0]['size'].length && data.originalFiles[0]['size'] > maxSize) {
                    uploadErrors.push(msMaxSize);
                }
                var jqXHR = data.submit();
                if (uploadErrors.length > 0) {
                    LHM.common.notify(null, 'warning', uploadErrors.join("\n"));
                    jqXHR.abort();
                    jqXHR = null;
                    return false;
                } else {
                    $(_this).hide();
                }
            }).bind('fileuploadchunkdone', function (e, data) {
                if (!data.result.ext_valid) {
                    window.invalid_ext_upload = 1;
                }
            }).bind('fileuploadchunksend', function (e, data) {
                if (window.invalid_ext_upload == 1) {
                    var jqXHR = data.submit();
                    jqXHR.abort();
                    jqXHR = null;
                    LHM.common.notify(null, 'warning', 'Định dạng file không hợp lệ');//show btn upload
                    $(_this).show();
                    $(_this).parent().find('.progressing-bar').html('');
                    $(_this).parent().find('.message').hide();
                    $(_this).parent().find('.message-loading').hide();
                    window.invalid_ext_upload = 0;
                    return false;
                }
            }).bind('fileuploaddone', function (e, data) {
                if (data.result.error) {
                    for (var i in data.result.msg) {
                        LHM.common.notify(null, 'warning', data.result.msg[i]);
                    }
                } else {
                    LHM.common.notify(null, 'success', 'Upload thành công!');
                    callback(data.result.data);
                }//show btn upload
                $(_this).show();
            }).bind('fileuploadprogress', function (e, data) {
                var uploadpercent = data._progress.loaded / data._progress.total;
                uploadpercent = Math.round(uploadpercent * 100);
                var thisprogress = $(_this).parent().find('.progressing-bar');
                $(_this).parent().find('.message').show();
                $(_this).parent().find('.message-loading').show();
                var html = '<div class="progress">' + '<div class="progress-bar" role="progressbar" style="width: ' + uploadpercent + '%;" aria-valuenow="' + uploadpercent + '" aria-valuemin="0" aria-valuemax="100">' + uploadpercent + '%</div>' + '</div>';
                thisprogress.html(html);
                if (uploadpercent == 100) {
                    thisprogress.html('');
                    $(_this).parent().find('.message').hide();
                    $(_this).parent().find('.message-loading').hide();
                }
            });//listen choice file tab library on uploader
            $('.btn-addfiletolesson').on('click', function () {
                var fileschecked = $('#uploader #library_box tbody input[name=f]:checked');
                var optionlib = $('#uploader #library_box input[name=optionlib]:checked');
                var datafile = [];
                $.each(fileschecked, function () {
                    var file = {'fid': $(this).val(), 'url': $(this).data('url')};
                    if (optionlib.length) file.attachorvideo = optionlib.val();
                    datafile.push(file);
                });
                callback(datafile);
                if (!window.check_upload_combo) {
                    setTimeout(function () {
                        LHM.lessons.list_lessons();
                    });
                }
            });
            $('.btn-addfiletolesson-new').on('click', function () {
                var files_dachon = localStorage.getItem('files_dachon');
                var optionlib = $(' #library_new_content input[name=optionlib]:checked');
                var type_add = parseInt(optionlib.val());
                var lesson_id = localStorage.getItem('lesson_id');
                if (type_add && files_dachon.length > 0 && lesson_id) {
                    if (type_add === 1) {
                        LHM.courses.addFileUnicaToLesson(JSON.parse(files_dachon), lesson_id, 'addFileUnicaToLesson');
                    } else if (type_add === 2) {
                        LHM.courses.addFileUnicaToLesson(JSON.parse(files_dachon), lesson_id, 'attachFileToLesson');
                    } else if (type_add === 3) {
                        LHM.courses.addFileUnicaToLesson(JSON.parse(files_dachon), lesson_id, 'addDocumentToLesson');
                    } else {
                        LHM.common.notify(null, 'danger', 'Có lỗi xảy ra');
                    }
                } else {
                    LHM.common.notify(null, 'danger', 'Vui lòng chọn kiểu muốn thêm vào');
                }
            });
        }, uploadVideo: function uploadVideo(callback) {
            var backendURI = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'https://video.edubit.vn';
            var siteId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 6;
            if ($('div#myDropzone').length) {
                var myDropzone = new Dropzone("div#myDropzone", {
                    url: backendURI + "/upload/uploadvideov2", method: "post", init: function init() {
                        this.on("sending", function (file, xhr, formData) {
                            formData.append("_token", $.cookie('_token'));
                        });
                    }, accept: function accept(file, done) {
                        $.post(base_url + '/uploader/checkFileSize', {
                            filesize: file.size,
                            filename: file.name,
                            _token: $.cookie('_token')
                        }, function (rs) {
                            if (!rs.error) {
                                done();
                                window.callback_upload_video = rs.callback_upload;
                                window.lesson_code = rs.lesson_code;
                            } else {// done(rs.msg);
                                LHM.common.notify(null, 'danger', rs.msg);
                                $('#myDropzone').find('.btn-upload-video').show();
                                $('.btn-upload-lesson-pop').removeAttr('disabled');
                            }
                        });
                    }, timeout: 60000, maxFilesize: 4096, maxFiles: 5,// parallelUploads: 1,
                    acceptedFiles: '.mp4', chunking: true, forceChunking: true, chunkSize: 1000000,//1MB
// parallelChunkUploads: true,
                    retryChunks: true,// retryChunksLimit: 3,
                    paramName: 'file', chunksUploaded: function chunksUploaded(file, done) {
                        var currentFile = file;
                        var urlApi = backendURI + "/upload/concatvideov2?dzuuid=" + currentFile.upload.uuid + "&dztotalchunkcount=" + currentFile.upload.totalChunkCount + "&name=" + currentFile.name + "&type=" + currentFile.name.substr(currentFile.name.lastIndexOf('.') + 1) + "&size=" + currentFile.size + "&site_id=" + siteId + "&lession_name=" + window.lesson_name + "&lessonid=" + window.lesson_code + "&call_back=" + window.callback_upload_video;
                        $.ajax({
                            url: urlApi, success: function success(rs) {
                                var res = JSON.parse(rs.substring(12, rs.length));
                                $('#myDropzone').find('.progressing-bar').html('');
                                $('#myDropzone').find('.message').hide();
                                $('#myDropzone').find('.message-loading').hide();
                                $('#myDropzone').find('.btn-upload-video').show();
                                $('.btn-upload-lesson-pop').removeAttr('disabled');
                                myDropzone.emit("complete", file);
                                LHM.common.notify(null, 'success', 'Upload thành công!');
                                callback({_id: res.data._id, file_name: currentFile.name, type: 'main-video'});// callback to addtolesson
                            }, error: function error(msg) {
                                currentFile.accepted = false;
                                myDropzone._errorProcessing([currentFile], msg.responseText);
                            }
                        });
                    }, uploadprogress: function uploadprogress(_, process) {
                        $('#myDropzone').find('.message-loading').show();
                        $('#myDropzone').find('.message').show();
                        var html = '<div class="progress">' + '<div class="progress-bar" role="progressbar" style="width: ' + process + '%;" aria-valuenow="' + parseInt(process) + '" aria-valuemin="0" aria-valuemax="100">' + parseInt(process) + '%</div>' + '</div>';
                        $('#myDropzone').find('.progressing-bar').html(html);
                    }, addedfile: function addedfile() {
                        $('#myDropzone').find('.btn-upload-video').hide();
                        $('.btn-upload-lesson-pop').attr('disabled', 'disabled');
                    }, error: function error(msg, response) {
                        LHM.common.notify(null, 'danger', response);
                        $('#myDropzone').find('.btn-upload-video').show();
                        $('.btn-upload-lesson-pop').removeAttr('disabled');
                    }
                });
            }
        }
    }, comment: {
        default_options: null, load: function load(pageid, options, callback) {//pageid is liveid or leesonid, notificationid ...
            LHM.comment.default_options = {collapsed: true, labelreplytotal: true};//overwrite options
            options = Object.assign(LHM.comment.default_options, options);//get comments
            $.ajax({
                type: 'GET',
                url: base_url + '/comments/all/' + pageid,
                data: options,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        if (rs.error) {
                            for (var i in rs.msg) {
                                LHM.common.notify(null, 'warning', rs.msg[i]);
                            }
                        } else {
                            callback(rs.data);
                            MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                }
            });
        }, delete_image: function delete_image(that) {
            if (that.length) {
                that.parent().hide().find('img').attr('src', '');
                that.parents('form-comment').find('input.file-image').val('');
            }
        }, load_image: function load_image(that) {
            if (that.length) {
                var input = that[0];
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        that.parents('.form-comment:first').find('.load-image').show();
                        that.parents('.form-comment:first').find('img').attr('src', e.target.result);
                    };
                    reader.readAsDataURL(input.files[0]);
                } else {
                    that.parents('.form-comment:first').find('.load-image').hide().find('img').attr('src', '');
                }
            }
        }, trigger_image: function trigger_image(that) {
            if (that.length) {
                that.prev().trigger('click');
            }
        }, click_button_image: function click_button_image(that) {
            console.log(that, 222);
            if (that.length) {
                console.log(that.parents('.form-comment:first'));
                that.parents('.form-comment:first').find('input.file-image').click();
            }
        }, reply_cms: function reply_cms(curr, cid) {
            var content = $(curr).parents('.form-comment:first').find('.comment-content').val();
            var photo = $(curr).parents('.form-comment:first').find('.file-image:first');
            var file = photo[0].files[0];
            var data = new FormData();
            data.append('image', file);
            data.append('content', content);
            data.append('_token', $.cookie('_token'));
            data.append('is_cms', 1);
            if ($.trim(content) != '') {
                $.ajax({
                    type: 'POST',
                    enctype: 'multipart/form-data',
                    url: base_url + '/comments/post/reply/' + cid,
                    data: data,
                    processData: false,
                    contentType: false,
                    dataType: 'json',
                    success: function success(rs) {
                        if (rs.error) {
                            for (var i in rs.msg) {
                                LHM.common.notify(null, 'warning', rs.msg[i]);
                            }
                        } else {
                            var html = '';
                            html += '<tr id=' + rs.data._id + ' class=' + cid + '>';
                            html += '<div class="col-xs-12 col-12 content_comment">';
                            html += ' <td>';
                            html += ' <div class="row list-comment-course list-reply-comment-cms">';
                            html += '   <div class="col-sm-1 ava-hv ava-hv-rep">';
                            html += '     <img class="img-thumbnail comment-review-cover"  alt="" src="' + rs.data.photo + '">';
                            html += '   </div>';
                            html += '   <div class="col-sm-10 block-hv">';
                            html += '       <div class="block-inner">';
                            html += '           <div class="name-student">' + rs.data.user + '<span style="margin-left:10px;font-weight:normal;color:#aaa;">' + moment.unix(rs.data.createdAt.sec).format('DD/MM/YYYY HH:mm') + '</span></div>';
                            html += '       </div>';
                            html += '       <div class="cm-hv">';
                            html += '           <p>' + rs.data.content + '</p>';
                            if (rs.data.image) {
                                html += '<div class="image-comment"><a data-fancybox="img_' + rs.data._id + '" class="img_' + rs.data._id + '" href="' + rs.data.image + '"></a>' + '<a class="thumb-image-comment" onclick="LHM.comment.trigger_image($(this))" href="javascript:;" data-id="' + rs.data._id + '"><image src="' + rs.data.image + '" weight="146" height="146"></a></div>';
                            }
                            html += '       </div>';
                            html += '   </div>';
                            html += ' </div>';
                            html += ' </td>';
                            html += ' <td align="center"></td>';
                            if (rs.data.approval_comment) {
                                html += ' <td align="center">';
                                html += '   <a onclick=LHM.courses.changeApprovalStatus(this,"' + rs.data._id + '",2) href="javascript:void(0);"><i class="fa fa-eye fs_15">Hiện</i></a>';
                                html += ' </td>';
                            }
                            html += ' <td align="center">';
                            html += '   <a onclick=LHM.courses.removeReviewCms(this,"' + rs.data._id + '",2,"' + cid + '") href="javascript:void(0);"><i class="fa fa-trash deletes"></i> Xóa</a>';
                            html += ' </td>';
                            html += ' </div>';
                            html += '</tr>';// $('.append_'+cid).append(html);
                            var itemsuba = $('#list_review_cms').find('.' + cid + ':last');
                            if (itemsuba.length) {
                                itemsuba.after(html);
                            } else {
                                var itemsub = $('#list_review_cms').find('#' + cid + ':last');
                                itemsub.after(html);
                            }
                            var total_reply = $('#show_rep_' + cid + ' #total_reply_cms strong').html();
                            if (total_reply == 0) {
                                $('#show_rep_' + cid + ' .fa-comments').css({"color": "#0bacea"});
                            }
                            if (total_reply >= 0) {
                                $('#' + cid + ' #total_reply_cms strong').html(parseInt(total_reply) + 1);
                            }
                            $(curr).parents('.form-comment:first').find('.comment-content').val('');
                            $(curr).parents('.form-comment:first').find('.file-image:first').val('');
                            $(curr).parents('.form-comment:first').find('.load-image').hide().find('img').attr('src', '');
                        }
                    }
                });
            }
        }, reply: function reply(curr, cid, lid) {// $(curr).parents('.form-comment').
            var content = $(curr).parents('.form-comment').find('.comment-content').val();
            var photo = $(curr).parents('.form-comment').find('.file-image:first');
            var file = photo[0].files[0];
            var data = new FormData();
            data.append('image', file);
            data.append('content', content);
            data.append('_token', $.cookie('_token'));
            if ($.trim(content) != '') {
                $.ajax({
                    type: 'POST',
                    enctype: 'multipart/form-data',
                    url: base_url + '/comments/post/reply/' + cid,
                    data: data,
                    processData: false,
                    contentType: false,
                    dataType: 'json',
                    success: function success(rs) {
                        if (rs.error) {
                            for (var i in rs.msg) {
                                LHM.common.notify(null, 'warning', rs.msg[i]);
                            }
                        } else {
                            if (rs.data.approval_status) {
                                var column_width_img = lid ? 'col-md-3 col-sm-2 col-3 col-xs-3 px-0 text-center' : 'col-md-1 col-sm-2 col-3 col-xs-3 px-0 text-center';
                                var column_width_content = lid ? 'col-md-9 col-sm-10 col-9 col-xs-9' : 'col-md-11 col-sm-10 col-9 col-xs-9';
                                var html = '<div class="item-subqa row" cid="' + rs.data._id + '">' + '<div class="' + column_width_img + '">' + '<img width="41" src="' + uphoto + '">' + '</div>' + '<div class="' + column_width_content + '">' + '<div class="title-item-qa">' + rs.data.user + '<span style="margin-left:10px;font-weight:normal;color:#aaa;">' + moment.unix(rs.data.createdAt.sec).format('DD/MM/YYYY HH:mm') + '</span>' + '<a title="Xóa" class="btndeletecomment" onclick="LHM.comment.delete(this,\'' + rs.data._id + '\')" href="javascript:;" style="float: right;display:none;"><i class="fas fa-trash-alt icon-trash"></i></a>' + '</div>' + '<div class="content-item-qa">' + rs.data.content + '</div>';
                                if (rs.data.image) {
                                    html += '<div class="image-comment"><a data-fancybox="img_' + rs.data._id + '" class="img_' + rs.data._id + '" href="' + rs.data.image + '"></a>' + '<a class="thumb-image-comment" onclick="LHM.comment.trigger_image($(this))" href="javascript:;" data-id="' + rs.data._id + '"><image src="' + rs.data.image + '" weight="146" height="146"></a></div>';
                                }
                                html += '</div></div>';
                                var allsuba = $(curr).parents('.list-subqa');
                                var itemsuba = allsuba.find('.item-subqa:last');//insert new comment
                                if (itemsuba.length) {
                                    itemsuba.after(html);
                                } else $(curr).parents('.list-subqa').prepend(html);//update count reply
                                var parent_discuss = $(curr).parents('div[cid="' + cid + '"]').parent().find('div[cid="' + cid + '"]');
                                LHM.comment.countsubcomment(parent_discuss);
                                LHM.comment.bindhoverbtndetele();// Xóa bỏ comment cũ
                                $(curr).parents('.form-comment').find('.comment-content').val('');
                                $(curr).parents('.form-comment').find('.file-image:first').val('');
                                $(curr).parents('.form-comment').find('.load-image').hide().find('img').attr('src', '');
                            } else {
                                LHM.common.notify(null, 'success', "Bình luận của bạn sẽ được xét duyệt bởi giảng viên");
                            }
                        }
                    }
                });
            }
        }, "delete": function _delete(curr, cid) {
            $.confirm({
                title: "Thông báo",
                content: "Bạn có muốn tiếp tục xóa?",
                scrollToPreviousElement: false,
                scrollToPreviousElementAnimate: false,
                buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/comments/delete/' + cid,
                            data: {_token: $.cookie('_token')},
                            dataType: 'json',
                            success: function success(rs) {
                                if (rs.error) {
                                    for (var i in rs.msg) {
                                        LHM.common.notify(null, 'warning', rs.msg[i]);
                                    }
                                } else {
                                    var parent_discuss = $(curr).parents('div[cid="' + cid + '"]').parents('.item-qa');
                                    $('div[cid=' + cid + ']').remove();//update count reply
                                    LHM.comment.countsubcomment(parent_discuss);
                                }
                            }
                        });
                    }, Cancel: {text: "Đóng"}
                }
            });
        }, countsubcomment: function countsubcomment(selector) {
            selector.find('.commenttotal strong').text(selector.find('.list-subqa .item-subqa').length);
        }, bindhoverbtndetele: function bindhoverbtndetele() {
            $('.item-subqa,.title-item-qa').hover(function (e) {
                $(this).find('.btndeletecomment').show();
            }, function () {
                $(this).find('.btndeletecomment').hide();
            });
        }, initlistenjquery: function initlistenjquery() {
            $('.list-qa .item-qa,.list-quest-overview .item-qa').on('click', function () {
                $(this).find('.list-subqa').show();
            });
        }, createquestion: function createquestion(classid, lessonid, notifyid) {
            lessonid = lessonid ? lessonid : '';
            var html = '<form id="submit-comment" class="form-comment" method="POST" enctype="multipart/form-data">' + '<div class="form-group">' + '<label for="content">Nội dung</label>' + '<textarea rows="5" class="form-control comment-content" placeholder="Nhập nội dung" name="content"></textarea>' + '</div><div class="form-group upload-image-comment"><a href="javascript:;" class="btnupload" onclick="LHM.comment.click_button_image($(this))" title="kèm ảnh cho câu hỏi"><img src="/data/share/no-thumb.png" class="preview-thumbnail" style="display: none"><span class="text-btnupload"><i class="fas fa-image"></i></span></a><a class="delFile removeFile" href="javascript:;" title="Xóa ảnh đính kèm" style="display: none"><i class="fa fa-times"></i></a><input class="file-upload file-image" type="file" accept="image/*" style="display: none" name="image"></div>' + '<div class="invalid-feedback"></div>' + '</form>';
            $.confirm({
                title: 'Tạo câu hỏi', columnClass: 'col-md-6 col-sm-8', content: html, buttons: {
                    Ok: {
                        text: 'Gửi', btnClass: 'btn-blue', action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').hide();
                            var title = _this.$content.find('.comment-title').val(),
                                content = _this.$content.find('.comment-content').val(),
                                column_width = lessonid ? 'col-md-2 col-sm-2 col-xs-2 col-2' : 'col-md-1 col-sm-2 col-xs-2 col-2';
                            $('#submit-comment').ajaxSubmit({
                                type: 'POST',
                                url: base_url + '/comments/post/question/' + classid,
                                data: {lessonid: lessonid, notifyid: notifyid, _token: $.cookie('_token')},
                                dataType: 'json',
                                success: function success(rs) {
                                    if (rs.error) {
                                        for (var i in rs.msg) {
                                            var error = '';
                                            for (var i in rs.msg) {
                                                error += '- ' + rs.msg[i] + '<br>';
                                            }
                                            _this.$content.find('.invalid-feedback').html(error).show();
                                        }
                                    } else {
                                        if (rs.data.approval_status) {
                                            html = '<div class="item-qa" cid="' + rs.data._id + '"> ' + '<div class="row">' + '<div class="' + column_width + ' d-sm-block px-0 text-center">' + '<img width="41" src="' + uphoto + '">' + '</div>' + '<div class="col-md-9 col-sm-7 col-xs-7 col-7">' + '<div class="title-item-qa">' + rs.data.user + '<span style="margin-left:10px;font-weight:normal;color:#aaa;">' + moment.unix(rs.data.createdAt.sec).format('DD/MM/YYYY HH:mm') + '</span>' + '<a title="Xóa" class="btndeletecomment" onclick="LHM.comment.delete(this,\'' + rs.data._id + '\')" href="javascript:;" style="float: right;display:none;"><i class="fas fa-trash-alt icon-trash"></i></a>' + '</div>' + '<div class="content-item-qa">' + rs.data.content + '</div>';
                                            if (rs.data.image) {
                                                html += '<a data-fancybox="img_' + rs.data._id + '" class="img_' + rs.data._id + '" href="' + rs.data.image + '"></a>' + '<a class="thumb-image-comment" onclick="LHM.comment.trigger_image($(this))" href="javascript:;" data-id="' + rs.data._id + '"><image src="' + rs.data.image + '" weight="146" height="146"></a>';
                                            }
                                            html += '<div class="list-subqa" ' + (LHM.comment.default_options.collapsed ? 'style="display:none;"' : '') + '>';
                                            html += '<div class="form-comment">' + '<div class="input-group">' + '<input type="file" class="display-none file-image" accept="image/*" onChange="LHM.comment.load_image($(this));"/><textarea class="form-control comment-content" placeholder="Trả lời của bạn...?"></textarea>' + '<div class="input-group-append"><button class="input-group-text btnupload icon-search" onclick="LHM.comment.click_button_image($(this))" style="padding-right: 0"><i class="fas fa-image" style="color: #0bacea;"></i></button><button class="input-group-text btnsend icon-search" onclick="LHM.comment.reply(this, \'' + rs.data._id + '\',\'' + lessonid + '\')"><i class="fas fa-paper-plane icon-send-comment" style="color: #0bacea"></i></button></div>' + '</div>' + '<div class="load-image display-none"><img src="" weight="146" height="146"/><a class="delFile removeFile" onclick="LHM.comment.delete_image($(this))" href="javascript:;" title="Xóa ảnh đính kèm"><i class="fa fa-times"></i></a></div></div>' + '</div>';
                                            html += '</div>';
                                            if (LHM.comment.default_options.labelreplytotal) {
                                                html += '<div class="col-md-2 text-center commenttotal col-sm-3 col-xs-3 col-3">' + '<br class="d-none d-sm-block" /><i class="fas fa-comments icon-comments" style="color: #0bacea"></i><br class="d-none d-sm-block" />' + '<span style="font-size: 13px"><strong>0</strong> Bình luận</span>' + '</div>';
                                            }
                                            html += '</div>' + '</div>';
                                            $('.list-qa').prepend(html);
                                            LHM.comment.initlistenjquery();
                                            LHM.comment.bindhoverbtndetele();
                                            _this.close();
                                        } else {
                                            _this.close();
                                            LHM.common.notify(null, 'success', "Bình luận của bạn sẽ được xét duyệt bởi giảng viên");
                                        }
                                    }
                                },
                                error: function error(err) {
                                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: "Đóng"}
                }, onContentReady: function onContentReady() {
                    $('#submit-comment .upload-image-comment .removeFile').css({
                        'float': 'right',
                        'background': '#EA5A5A',
                        'width': '25px',
                        'border-radius': '5px 0',
                        'text-align': 'center',
                        'line-height': '19px'
                    });
                    $('#submit-comment .upload-image-comment').css({'max-width': '250px', 'max-height': '180px'});
                    var readURL = function readURL(input) {
                        if (input.files && input.files[0]) {
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                $('#submit-comment .preview-thumbnail').attr('src', e.target.result).show();
                                $('#submit-comment .upload-image-comment .text-btnupload').hide();
                                $('#submit-comment .upload-image-comment .removeFile').show();
                            };
                            reader.readAsDataURL(input.files[0]);
                        } else {
                            $('#submit-comment .upload-image-comment .removeFile').click();
                        }
                    };
                    $(".file-upload").on('change', function () {
                        readURL(this);
                    });
                    $('#submit-comment .upload-image-comment .removeFile').on('click', function () {
                        $('#submit-comment .upload-image-comment').removeClass('upload-cover');
                        $('#submit-comment .upload-image-comment .preview-thumbnail').attr('src', '').hide();
                        $('#submit-comment .upload-image-comment .text-btnupload').show();
                        $('#submit-comment .upload-image-comment input[name="image"]').val('');
                        $(this).hide();
                    });
                }
            });
        }, createquestion_cms: function createquestion_cms() {
            var check_review_course = $('#filter_course_cms').val();
            var check_lesson = $('#filter_lesson_cms_comment').val();
            var html_cmt = '<form>' + '<div class="form-group">' + '<label for="content">Nội dung <span class="text-danger">*</span></label>' + '<textarea id="content_comment_cms" cols="100" name="content_comment_cms" rows="10"></textarea>' + '</div>' + '<script>' + 'LHM.common.ckeditor("content_comment_cms")' + '</script>' + '<div class="invalid-feedback"></div>' + '</form>';
            $.confirm({
                title: 'Thêm thảo luận', columnClass: 'col-md-6 col-sm-8', content: html_cmt, buttons: {
                    Ok: {
                        text: 'Thêm', btnClass: 'btn-blue', action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').hide();
                            var title = _this.$content.find('.comment-title').val();
                            var content = CKEDITOR.instances['content_comment_cms'].getData();
                            $.post(base_url + '/comments/post/question_cms/' + check_review_course, {
                                content: content,
                                _token: $.cookie('_token'),
                                lessonid: check_lesson
                            }, function (rs) {
                                if (rs.error) {
                                    for (var i in rs.msg) {
                                        var error = '';
                                        for (var i in rs.msg) {
                                            error += '- ' + rs.msg[i] + '<br>';
                                        }
                                        _this.$content.find('.invalid-feedback').html(error).show();
                                    }
                                } else {
                                    var html = '';
                                    html += '<tr id=' + rs.data._id + '>';
                                    html += '<div class="col-xs-12 col-12 content_comment">';
                                    html += ' <td>';
                                    html += ' <div class="row list-comment-course">';
                                    html += '   <div class="col-sm-1 ava-hv">';
                                    html += '     <img class="img-thumbnail comment-review-cover"  alt="" src="' + rs.data.photo + '">';
                                    html += '   </div>';
                                    html += '   <div class="col-sm-10 block-hv">';
                                    html += '       <div class="block-inner">';
                                    html += '           <div class="name-student">' + rs.data.user + '<span style="margin-left:10px;font-weight:normal;color:#aaa;">' + rs.data.createdAt + '</span></div>';
                                    html += '      <div> Khóa học : ' + rs.data.name_course + ' </div>';
                                    html += '       </div>';
                                    html += '       <div class="cm-hv">';
                                    html += '           <span class="star-comment-student-' + rs.data._id + '"></span>';
                                    html += '           <p>' + rs.data.content + '</p>';
                                    html += '       </div>';
                                    html += '   </div>';
                                    html += ' </div>';
                                    html += ' </td>';
                                    html += ' <td align="center">';
                                    html += '    <a href="javascript:void(0);">';
                                    html += '     <i class="fas fa-comments icon-comments"></i><br class="d-none d-sm-block" />';
                                    html += '     <span style="font-size: 13px" id="total_reply_cms"><strong>0</strong> Bình luận</span>';
                                    html += '       </a>';
                                    html += ' </td>';
                                    html += ' <td align="center">';
                                    html += '   <a onclick=LHM.courses.removeReviewCms(this,"' + rs.data._id + '",2) href="javascript:void(0);"><i class="fa fa-trash deletes"></i> Xóa</a>';
                                    html += ' </td>';
                                    html += ' </div>';
                                    html += '</tr>';
                                    $('#list_review_cms').prepend(html);
                                    var total_record = $('#v-pills-review-cms #total_record').html();
                                    $('#v-pills-review-cms #total_record').html(parseInt(total_record) + 1);
                                    $('#none_data_comment').hide();
                                    $('#v-pills-review-cms-tab').trigger('click');
                                    LHM.mnDashboard.getReview_cms(0);
                                    _this.close();
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: "Đóng"}
                }
            });
        }, createquestion_overview: function createquestion_overview(classid, lessonid) {
            var photo = $('#block-comment-overview .file-upload'), content = $('.overview_question').val();
            var file = photo[0].files[0];
            var data = new FormData();
            data.append('image', file);
            data.append('content', content);
            data.append('title', content);
            data.append('type', 'overview');
            data.append('_token', $.cookie('_token'));
            $.ajax({
                type: 'POST',
                enctype: 'multipart/form-data',
                url: base_url + '/comments/post/question/' + classid,
                data: data,
                processData: false,
                contentType: false,
                dataType: 'json',
                success: function success(rs) {
                    if (rs.error) {
                        var error = '';
                        for (var i in rs.msg) {
                            LHM.common.notify(null, 'danger', rs.msg[i]);
                        }
                    } else {
                        $('.overview_question').val('');
                        if (rs.data.approval_status) {
                            var html = '';
                            html = '<div class="item-qa" cid="' + rs.data._id + '"> ' + '<div class="row">' + '<div class="col-lg-1 d-sm-block col-md-2 col-xs-2 col-2 px-0 text-center">' + '<img width="41" src="' + uphoto + '">' + '</div>' + '<div class="col-lg-9 col-md-10 col-xs-7 col-7">' + '<div class="title-item-qa">' + rs.data.user + '<span style="margin-left:10px;font-weight:normal;color:#aaa;">' + moment.unix(rs.data.createdAt.sec).format('DD/MM/YYYY HH:mm') + '</span>' + '<a title="Xóa" class="btndeletecomment" onclick="LHM.comment.delete(this,\'' + rs.data._id + '\')" href="javascript:;" style="float: right;display:none;"><i class="fas fa-trash-alt icon-trash"></i></a>' + '</div>' + '<div class="content-item-qa">' + rs.data.content + '</div>';
                            if (rs.data.image) {
                                html += '<div class="image-comment"><a data-fancybox="img_' + rs.data._id + '" class="img_' + rs.data._id + '" href="' + rs.data.image + '"></a>' + '<a class="thumb-image-comment" onclick="LHM.comment.trigger_image($(this))" href="javascript:;" data-id="' + rs.data._id + '"><image src="' + rs.data.image + '" weight="146" height="146"></a></div>';
                            }
                            html += '<div class="list-subqa" ' + (LHM.comment.default_options.collapsed ? 'style="display:none;"' : '') + '>';
                            html += '<div class="form-comment">' + '<div class="input-group">' + '<input type="file" class="display-none file-image" accept="image/*" onChange="LHM.comment.load_image($(this));"/><textarea class="form-control comment-content" placeholder="Trả lời của bạn...?"></textarea>' + '<div class="input-group-append"><button class="input-group-text btnupload icon-search" onclick="LHM.comment.click_button_image($(this))" style="padding-right: 0"><i class="fas fa-image" style="color: #0bacea;"></i></button><button class="input-group-text btnsend icon-search" onclick="LHM.comment.reply(this, \'' + rs.data._id + '\')"><i class="fas fa-paper-plane icon-send-comment" style="color: #0bacea"></i></button></div>' + '</div>' + '<div class="load-image display-none"><img src="" weight="146" height="146"/><a class="delFile removeFile" onclick="LHM.comment.delete_image($(this))" href="javascript:;" title="Xóa ảnh đính kèm"><i class="fa fa-times"></i></a></div></div>' + '</div>';
                            html += '</div>';
                            if (LHM.comment.default_options.labelreplytotal) {
                                html += '<div class="col-lg-2 text-center commenttotal col-md-12 col-xs-3 col-3">' + '<i class="fas fa-comments icon-comments" style="color: #0bacea"></i><br class="d-none d-sm-block" />' + '<span style="font-size: 13px"><strong>0</strong> Bình luận</span>' + '</div>';
                            }
                            html += '</div>' + '</div>';
                            $('.list-quest-overview').prepend(html);
                            $('#block-comment-overview .file-upload').val('').change();
                            LHM.comment.initlistenjquery();
                            LHM.comment.bindhoverbtndetele();
                        } else {
                            LHM.common.notify(null, 'success', "Bình luận của bạn sẽ được xét duyệt bởi giảng viên");
                        }
                    }
                }
            });
        }
    }, notification: {
        create: function create(classid) {
            var html = '<form>' + '<div class="form-group">' + '<label for="title">' + __('Tiêu đề') + ' <span class="text-danger">*</span></label>' + '<input type="text" class="form-control comment-title" placeholder="' + __('Nhập tiêu đề') + '">' + '</div>' + '<div class="form-group">' + '<label for="content">' + __('Nội dung') + ' <span class="text-danger">*</span></label>' + '<textarea rows="5" class="form-control comment-content" placeholder="' + __('Nhập nội dung') + '"></textarea>' + '</div>' + '<div class="invalid-feedback"></div>' + '</form>';
            $.confirm({
                title: __('Tạo thông báo'), columnClass: 'col-md-6 col-sm-9', content: html, buttons: {
                    Ok: {
                        text: __('Gửi'), btnClass: 'btn-blue', action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').hide();
                            var title = _this.$content.find('.comment-title').val();
                            var content = _this.$content.find('.comment-content').val();
                            $.post(base_url + '/notifications/create/' + classid, {
                                title: title,
                                content: content,
                                _token: $.cookie('_token')
                            }, function (rs) {
                                if (rs.error) {
                                    for (var i in rs.msg) {
                                        var error = '';
                                        for (var i in rs.msg) {
                                            error += '- ' + rs.msg[i] + '<br>';
                                        }
                                        _this.$content.find('.invalid-feedback').html(error).show();
                                    }
                                } else {
                                    if (rs.data.teacher_id == uid) html = '<div class="item-comment wow bounceInUp"> <a title="Xóa"  onclick="LHM.notification.del(\'' + rs.data._id + '\',this)" href="javascript:;" style="float: right;"><i class="fas fa-trash-alt icon-trash"></i></a>' + '<div class="author">' + '<div class="image-author">' + '<img width="41" src="' + uphoto + '">' + '</div>' + '<div class="info-announcement">' + '<div class="title-author">' + ufullname + ' - ' + rs.data.live + '</div>' + '<div class="time-publish">' + rs.data.createdAt + '</div>' + '</div>' + '<div class="clearfix"></div>' + '</div>' + '<div class="content-announcement">' + '<div class="title-announcement">' + rs.data.title + '</div>' + rs.data.content + '</div>' + '</div>'; else html = '<div class="item-comment wow bounceInUp">' + '<div class="author">' + '<div class="image-author">' + '<img width="41" src="' + uphoto + '">' + '</div>' + '<div class="info-announcement">' + '<div class="title-author">' + ufullname + ' - ' + rs.data.live + '</div>' + '<div class="time-publish">' + rs.data.createdAt + '</div>' + '</div>' + '<div class="clearfix"></div>' + '</div>' + '<div class="content-announcement">' + '<div class="title-announcement">' + rs.data.title + '</div>' + rs.data.content + '</div>' + '</div>';
                                    if ($('.item-comment').length == 0) {
                                        $('.text-center').html('');
                                    }
                                    var containerinform = $('#detail-announcement .list-comment');
                                    if (containerinform.length) containerinform.prepend(html); else containerinform.html(html);
                                    _this.close();
                                    $('#v-pills-classes-notify-tab').trigger('click');
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: __('Đóng')}
                }
            });
        }, create_notification_cms: function create_notification_cms() {
            var check_review_course = $('#filter_course_cms').val();
            var html = '<form>' + '<div class="form-group">' + '<label for="title">Tiêu đề</label>' + '<input type="text" class="form-control comment-title" placeholder="Nhập tiêu đề">' + '</div>' + '<div class="form-group">' + '<label for="content">Nội dung</label>' + '<textarea rows="5" class="form-control comment-content" placeholder="Nhập nội dung"></textarea>' + '</div>' + '<div class="invalid-feedback"></div>' + '</form>';
            $.confirm({
                title: 'Tạo thông báo', columnClass: 'col-md-6 col-sm-8', content: html, buttons: {
                    Ok: {
                        text: 'Thêm', btnClass: 'btn-blue', action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').hide();
                            var title = _this.$content.find('.comment-title').val();
                            var content = _this.$content.find('.comment-content').val();
                            $.post(base_url + '/notifications/create_cms/' + check_review_course, {
                                title: title,
                                content: content,
                                _token: $.cookie('_token')
                            }, function (rs) {
                                if (rs.error) {
                                    for (var i in rs.msg) {
                                        var error = '';
                                        for (var i in rs.msg) {
                                            error += '- ' + rs.msg[i] + '<br>';
                                        }
                                        _this.$content.find('.invalid-feedback').html(error).show();
                                    }
                                } else {
                                    var html = '';
                                    html += '<tr id=' + rs.data._id + '>';
                                    html += '<div class="col-xs-12 col-12 content_comment">';
                                    html += ' <td>';
                                    html += ' <div class="row list-comment-course">';
                                    html += '   <div class="col-sm-1 ava-hv">';
                                    html += '     <img class="img-thumbnail comment-review-cover"  alt="" src="' + rs.data.photo + '">';
                                    html += '   </div>';
                                    html += '   <div class="col-sm-10 block-hv">';
                                    html += '       <div class="block-inner">';
                                    html += '           <div class="name-student">' + rs.data.user + '<span style="margin-left:10px;font-weight:normal;color:#aaa;">' + rs.data.createdAt + '</span></div>';
                                    html += '           <div> Khóa học : ' + rs.data.name_course + ' </div>';
                                    html += '       </div>';
                                    html += '       <div class="cm-hv">';
                                    html += '           <p>' + rs.data.title + ' - ' + rs.data.live + '</p>';
                                    html += '           <p>' + rs.data.content + '</p>';
                                    html += '       </div>';
                                    html += '   </div>';
                                    html += ' </div>';
                                    html += ' </td>';
                                    html += ' <td align="center">';
                                    html += '   <a onclick=LHM.courses.removeReviewCms(this,"' + rs.data._id + '",3) href="javascript:void(0);"><i class="fa fa-trash deletes"></i> Xóa</a>';
                                    html += ' </td>';
                                    html += ' </div>';
                                    html += '</tr>';
                                    $('#list_review_cms').prepend(html);// var total_record = $('#v-pills-review-cms #total_record').html();
// $('#v-pills-review-cms #total_record').html(parseInt(total_record) + 1);
                                    $('#none_data_comment').hide();
                                    $('#v-pills-review-cms-tab').trigger('click');
                                    _this.close();
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: "Đóng"}
                }
            });
        }, edit: function edit(id, curr) {
            var html = '<form>' + '<div class="form-group">' + '<label for="title">Tiêu đề</label>' + '<input type="text" class="form-control comment-title" placeholder="Nhập tiêu đề" value="' + $(curr).attr('data-title') + '">' + '</div>' + '<div class="form-group">' + '<label for="content">Nội dung</label>' + '<textarea rows="5" class="form-control comment-content" placeholder="Nhập nội dung">' + $(curr).attr('data-content') + '</textarea>' + '</div>' + '<div class="invalid-feedback"></div>' + '</form>';
            $.confirm({
                title: 'Sửa thông báo',
                columnClass: 'col-sm-5',
                content: html,
                buttons: {
                    Ok: {
                        text: 'Gửi', btnClass: 'btn-blue', action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').hide();
                            var title = _this.$content.find('.comment-title').val();
                            var content = _this.$content.find('.comment-content').val();
                            $.post(base_url + '/notifications/edit/' + id, {
                                title: title,
                                content: content,
                                _token: $.cookie('_token')
                            }, function (rs) {
                                if (rs.error) {
                                    for (var i in rs.msg) {
                                        var error = '';
                                        for (var i in rs.msg) {
                                            error += '- ' + rs.msg[i] + '<br>';
                                        }
                                        _this.$content.find('.invalid-feedback').html(error).show();
                                    }
                                } else {
                                    $('#v-pills-classes-notify-tab').trigger('click');
                                    _this.close();
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: "Đóng"}
                }
            });
        }, del: function del(id, curr) {
            $.confirm({
                title: 'Xác nhận xóa thông báo',
                columnClass: 'col-sm-5',
                content: 'Bạn chắc chắn muốn xóa không ?',
                buttons: {
                    Ok: {
                        text: 'Xóa', btnClass: 'btn-blue', action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').hide();
                            $.post(base_url + '/notifications/del', {
                                id: id,
                                _token: $.cookie('_token')
                            }, function (rs) {
                                if (rs.error) {
                                    for (var i in rs.msg) {
                                        var error = '';
                                        for (var i in rs.msg) {
                                            error += '- ' + rs.msg[i] + '<br>';
                                        }
                                        _this.$content.find('.invalid-feedback').html(error).show();
                                    }
                                } else {
                                    $(curr).parent().remove();
                                    if ($('.item-comment').length == 0) {
                                        var containerinform = $('#detail-announcement .list-comment');
                                        containerinform.prepend('<p class="text-center pb-5 pt-5">Chưa có thông báo</p>');
                                    }
                                    _this.close();
                                    $('#v-pills-classes-notify-tab').trigger('click');
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: "Đóng"}
                }
            });
        }
    }, quiz: {
        get_quantity_quiz: function get_quantity_quiz() {
            if(!$('#block-quiz-type').length) return
            $.ajax({
                type: 'GET',
                url: base_url + '/quiz/get_quantity_quiz',
                dataType: 'json',
                success: function success(res) {
                    if (res.data) {
                        $.each(res.data, function (k, v) {
                            $('#quantity_' + k).html(Intl.NumberFormat().format(v));
                        });
                    }
                }
            });
        },
        get_list_bank_question: function get_list_bank_question() {
            let tbody = $('#bank_quiz');
            LHM.common.getListTable('bank_quiz', '/quiz/get_list_bank_question', function (res) {
                var html;
                if (res.items && res.items.length) {
                    $.each(res.items, function (k, v) {
                        var action = '';
                        if (v.remove) {
                            action = '<span class="badge badge-danger">Đã xóa</span>';
                        } else {
                            action = "<a href=\"javascript:void(0)\" onclick=\"deleteQuiz('".concat(v.id, "',this)\"><i class=\"fa fa-trash\"></i> X\xF3a</a><a href=\"javascript:void(0)\" onclick=\"editQuiz('").concat(v.id, "', '").concat(v.type_quiz, "')\"><i class=\"fa fa-edit\"></i> S\u1EEDa</a>");
                            if (v.copyQuiz || $.cookie('copyQuiz')) {
                                action += "<a style=\"margin-right:10px\" href=\"javascript:;\" onclick=\"LHM.common.xService('quiz.copyItemQuiz','".concat(v.id, "', 'search_bank_quiz')\"><i class=\"fa fa-copy\"></i> Copy</a>");
                            }
                        }
                        var indexQ = res.limit * res.page + k + 1;
                        if(res.view_new && v.config && v.config.answer) {
                            let chart = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K'];
                            v.config.correct = typeof v.config.correct === 'string' ? [v.config.correct] : v.config.correct
                            v.title = '<div class="font-weight-bold mb-1">'+v.config.title+'</div>'
                            v.title += '<div>'+v.config.question+'</div>'
                            v.title += '<div class="row">'
                            v.config.answer.forEach(function (vA, kA) {
                                let chartF = '<b>' + chart.shift() + '.</b>';
                                if (v.config.correct.includes(kA)) {
                                    chartF = '<u>' + chartF + '</u>'
                                }
                                vA = vA.replace(/^([^\>]+\>)/, '$1' + chartF + ' ')
                                v.title += '<div class="col-md-6 col-12">' + vA + '</div>'
                            })
                            v.title += '</div>'
                        }
                        html += "<tr data-id=\"".concat(v.id, "\"><td><input type=\"checkbox\" class=\"select-item\" value=\"").concat(v.id, "\" onclick=\"tickCheckBox(this)\"></td><td>").concat(indexQ.toLocaleString('de-DE'), "</td><td style=\"word-break: break-word\">").concat(v.title, "</td><td>").concat(v.text_type, "</td><td>").concat(v.code, "</td><td>").concat(v.tags, "</td><td>").concat(v.creator_name, "</td><td>").concat(v.createdAt, "</td><td class=\"d-flex justify-content-center gap-1\">").concat(action, "</td></tr>");
                    });
                    $('#list-quiz_true_false .x-check-all').prop('checked', false).show();
                } else {
                    $('#list-quiz_true_false .x-check-all').prop('checked', false).hide();
                    html = '<tr><td colspan="8" style="text-align:center;">Không tồn tại dữ liệu</td></tr>';
                }
                $('.delete-quiz-all').hide();
                tbody.html(html);
            });
        },
        list_quiz_test_public: function list_quiz_test_public(page, filter_title) {
            page = page ? page : 0;
            var val_post = {limit_record: page};
            if (filter_title) {
                val_post['filter_title'] = filter_title;
            }
            $('#test-by-list').show();
            $('#test-by-tag').hide();
            $.ajax({
                type: 'GET',
                url: base_url + '/quiz/list_quiz_test_public',
                data: val_post,
                dataType: 'json',
                success: function success(quizs) {
                    LHM.common.pagination_site(quizs.count_record, quizs.limit, page, 'list_quiz_test_public');
                    $('#list_quiz_test_public').html('');
                    if (quizs && quizs.data) {
                        var quiz = quizs.data, html = '';
                        if (quiz.length > 0) {
                            for (var i = 0; i < quiz.length; i++) {
                                html = ' <tr>';
                                html += '     <td>' + quiz[i]['index'] + '</td>';
                                html += '     <td>' + quiz[i]['code_join_quiz'] + '</td>';
                                html += '     <td>';
                                html += '         <div class="name-item-course"><a target="_blank" href="' + quiz[i]['url_quiz_test'] + '">' + quiz[i]['quiz_title'] + '</a></div>';
                                html += '     </td>';
                                html += '     <td>' + quiz[i]['quiz_test_count'] + '</td>';
                                html += '     <td>' + quiz[i]['number_quiz'] + '</td>';
                                html += '     <td class="text-center font-weight-bold"><a id="hidden_rank_' + quiz[i]['_id']['$id'] + '" target="_blank" href="' + base_url + '/rank/' + quiz[i]['id_quiz_test'] + '" title="Xếp hạng">' + quiz[i]['max_score'] + '/' + quiz[i]['quiz_test_count'] + '</a></td>';
                                html += '     <td>' + quiz[i]['createdAt'] + '</td>';
                                html += ' </tr>';
                                $('#list_quiz_test_public').append(html);
                            }
                        } else {
                            $('#list_quiz_test_public').html('<tr><td colspan="7"><span>Không có dữ liệu</span></td></tr>');
                        }
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        },
        list_quiz_test_public_table: function list_quiz_test_public_table(page, filter_title) {
            page = page ? page : 0;
            var val_post = {limit_record: page};
            if (filter_title) {
                val_post['filter_title'] = filter_title;
            }
            $('#test-by-tag').show();
            $('#test-by-list').hide();
            $.ajax({
                type: 'GET',
                url: base_url + '/quiz/list_quiz_test_public_table',
                data: val_post,
                dataType: 'json',
                success: function success(quizs) {
                    if (quizs && quizs.items) {
                        var items = quizs.items, html = '';
                        if (items.length > 0) {
                            for (var i in items) {
                                html += '<div class="eq-box-quiz load-item-tags">';
                                html += '<div class="row">';
                                html += '<div class="col-lg-12">';
                                html += '<div class="title-box-quiz float-left">' + items[i]['name'] + '</div>';
                                html += '</div>';
                                html += '</div>';
                                html += '<div class="row load-item-test" data-id="' + items[i]['id'] + '">';
                                var tests = items[i]['items'];
                                for (var j in tests) {
                                    html += '<div class="col-lg-3 col-md-4 col-12">';
                                    html += '<a href="/quiz/' + tests[j]['code_join_quiz'] + '" class="box-quiz-main" target="_blank">';
                                    html += '<img class="img-fluid img-quiz-main course-item-image" src="' + tests[j]['cover'] + '" alt="">';
                                    html += '<div class="info-quiz">';
                                    html += '<div class="number-rb alert-primary float-left">' + tests[j]['quiz_test_count'] + ' câu hỏi</div>';
                                    html += '<div class="number-rb alert-primary float-right">' + tests[j]['number_quiz'] + ' lượt tham gia</div>';
                                    html += '</div>';
                                    html += '<div class="title-quiz">' + tests[j]['quiz_title'] + '</div>';
                                    html += '</a>';
                                    html += '</div>';
                                }
                                if (tests.length == 4) {
                                    html += '<div class="col-md-12 text-center div-ser-more">';
                                    html += '<a href="javascript:;" class="see-more" title="Xem thêm" onclick="seeMore($(this))">Xem thêm</a>';
                                    html += '</div>';
                                }
                                html += '</div>';
                                html += '</div>';
                            }
                            $('#test-by-tag').html(html);
                        } else {
                            $('#test-by-tag').html('<div>Không có dữ liệu</div>');
                        }
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        },
        filemanager: function filemanager() {
            $.alert({
                title: "Chọn ảnh",
                content: 'url:' + base_url + '/uploader/genuploader?extratools=library,upimage',
                columnClass: "col-sm-8",
                buttons: {close: {text: 'Đóng'}},
                onContentReady: function onContentReady() {
                    window.filemanager = this;//handle uploader
                    LHM.uploader.init(function (data_file) {//calbback when upload success
//object file
                        if (data_file._id) {
                            $('.preview-' + window.type_image).attr('src', data_file['url']);
                            $('#id_image_' + window.type_image).val(data_file['_id']['$id']);
                        } else {//[datafile, datafile]
                            for (var i in data_file) {//LHM.lessons.addfiletolesson(data_file[i], lesson_id, false);
                                $('.preview-' + window.type_image).attr('src', data_file[i]['url']);
                                $('#id_image_' + window.type_image).val(data_file[i]['fid']);
                            }
                        }//close popup
                        window.filemanager.close();
                    });
                }
            });
        },
        editDragDropZone: function editDragDropZone(curr, type, key) {
            if (type == 'text') {
                var content = $(curr).parents('.drag-zone-element').find('.drag-text-position').html();
                content = content.trim();
                var html = '';
                html += '<div class="form-group">' + '<textarea id="drag_text_content" cols="100" name="drag_text_content" rows="10">' + content + '</textarea>' + '</div>';
                $.confirm({
                    title: 'Chỉnh sửa văn bản',
                    columnClass: 'col-md-8',
                    type: 'blue',
                    content: html,
                    onContentReady: function onContentReady() {
                        LHM.common.ckeditor('drag_text_content');
                    },
                    buttons: {
                        formSubmit: {
                            text: 'OK', btnClass: 'btn-blue', action: function action() {
                                var content_change = CKEDITOR.instances.drag_text_content.getData();
                                $('.dgz-element-' + key + ' .drag-text-position').html(content_change);
                                $('.dgz-element-' + key + ' .drag-box-content-detail').val(content_change);
                                MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                            }
                        }, cancel: {text: 'Đóng'}
                    }
                });
            } else if (type == 'image') {
                LHM.courses.fileManagerUnica('', "#drag_box_content_detail_".concat(key), ".img-element-".concat(key));
            }
        },
        deleteDragDropZone: function deleteDragDropZone(curr) {
            $.confirm({
                title: 'Xóa box',
                content: 'Bạn thực sự muốn xóa box này?',
                buttons: {
                    Ok: {
                        text: 'OK', action: function action() {
                            $(curr).parents('.drag-zone-element').remove();
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        },
        getQuizOfType: function getQuizOfType() {
            $.ajax({
                type: 'GET',
                url: base_url + '/quiz/getQuizOfType/',
                data: {type: $('#type_quiz').val(), levels: $('#filter_level').val(), sort_id: $('#sort_id').val()},
                dataType: 'json',
                success: function success(rs) {
                    $('#sortable1').html('');
                    if (rs.length) {
                        $.each(rs, function (k, v) {
                            $('#sortable1').append('<li class="ui-state-default" id="' + v._id['$id'] + '"><div class= "row"> <div class= "col-11 body_name_quiz"><input type="hidden" value="' + v._id['$id'] + '"><i class="fas fa-arrows-alt"></i> ' + v.question + '</div><div class= "col-1 view_edit_quiz" data-qid="' + v._id['$id'] + '" data-template="' + v.template + '"><i class="fas fa-edit"></i></div></div></li>');
                            MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                        });
                    }
                }
            });
        },
        saveQuizToTest: function saveQuizToTest() {
            $('#sortable1 li').each(function (index, el) {
                $(el).find('input').remove();
            });
            var _id = '';
            var datastring = $('#form-quiz-test').serialize();
            var quizs = [];
            $('#sortable2 li').each(function (index, el) {
                quizs.push($(el).find('input[type=hidden]').val());
            });
            var tags_random = [];
            $('#filter_level_tag_random :selected').each(function () {
                tags_random.push($(this).val());
            });
            quizs = quizs.join('-');
            datastring = datastring + '&_token=' + $.cookie('_token') + '&quizs=' + quizs + '&tags_random=' + tags_random;
            $('.btn-save-quiz-in-test-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang lưu');
            $('.btn-save-quiz-in-test-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/quiz/saveQuizToTest',
                data: datastring,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('.btn-save-quiz-in-test-popup').html('<i class="fa fa-save"></i> Lưu lại');
                        $('.btn-save-quiz-in-test-popup').removeAttr('disabled');
                        if (!data.error) {
                            LHM.common.notify(null, 'success', data.msg[0]);
                            if (data.personal_site) {
                                window.location = base_url + '/home/quiz';
                            } else {
                                window.location = base_url + '/manage#quiz_questions-quiz_test';
                            }
                        } else {
                            $.each(data.msg, function (index, el) {
                                LHM.common.notify(null, 'danger', el);
                            });
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                },
                error: function error(err) {
                    $('.btn-save-quiz-test-popup').html('<i class="fa fa-save"></i> Lưu lại');
                    $('.btn-save-quiz-test-popup').removeAttr('disabled');
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        },
        saveQuizToQuiz: function saveQuizToQuiz() {
            $('#sortable1 li').each(function (index, el) {
                $(el).find('input').remove();
            });
            var _id = '';
            var datastring = $('#form-quiz-to-quiz').serialize();
            var quizs = [];
            $('#sortable2 li').each(function (index, el) {
                quizs.push($(el).find('input[type=hidden]').val());
            });
            var tags_random = [];
            $('#filter_level_tag_random :selected').each(function () {
                tags_random.push($(this).val());
            });
            quizs = quizs.join('-');
            datastring = datastring + '&_token=' + $.cookie('_token') + '&quizs=' + quizs + '&tags_random=' + tags_random;
            $('.btn-save-quiz-to-quiz-popup').html('<i class="fas fa-spinner fa-spin"></i> Đang lưu');
            $('.btn-save-quiz-to-quiz-popup').attr('disabled', true);
            $.ajax({
                type: 'POST',
                url: base_url + '/quiz/saveQuizToQuiz',
                data: datastring,
                dataType: 'json',
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        $('.btn-save-quiz-to-quiz-popup').html('<i class="fa fa-save"></i> Lưu lại');
                        $('.btn-save-quiz-to-quiz-popup').removeAttr('disabled');
                        if (!data.error) {
                            LHM.common.notify(null, 'success', data.msg[0]);
                            if (data.personal_site) {
                                window.location = base_url + '/home/quiz';
                            } else {
                                window.location = base_url + '/manage#quiz_questions-quiz_test';
                            }
                        } else {
                            $.each(data.msg, function (index, el) {
                                LHM.common.notify(null, 'danger', el);
                            });
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                },
                error: function error(err) {
                    $('.btn-save-quiz-test-popup').html('<i class="fa fa-save"></i> Lưu lại');
                    $('.btn-save-quiz-test-popup').removeAttr('disabled');
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        },
        saveQuizToTestSpecial: function saveQuizToTestSpecial(itemId) {
            if (itemId) {
                var form = $('#form-add-quiz-to-test-special');
                var data = new FormData(form[0]);
                data.append('_token', $.cookie('_token'));
                form.find('select.js-select2').each(function () {
                    if ($(this).attr('name')) {
                        data["delete"]($(this).attr('name'));
                        data.append($(this).attr('name'), $(this).val());
                    }
                });
                $.ajax({
                    type: 'POST',
                    url: base_url + '/quiz_test/saveAddQuizToTest/' + itemId,
                    data: data,
                    processData: false,
                    contentType: false,
                    dataType: 'json',
                    success: function success(rs) {
                        if (rs.success) {
                            LHM.common.notify(null, 'success', rs.ms ? rs.ms : 'Cập nhật thành công');
                            setTimeout(function () {
                                window.location = '/manage#quiz_questions';
                            }, 1000);
                        } else {
                            if (rs.ms) {
                                $.each(rs.ms, function (k, v) {
                                    LHM.common.notify(null, 'danger', v);
                                });
                            } else {
                                LHM.common.notify(null, 'danger', 'Thất bại');
                            }
                        }
                    },
                    error: function error(rs) {
                        LHM.common.notify(null, 'danger', rs.ms ? rs.ms : 'Có lỗi xảy ra');
                    }
                });
            } else {
                LHM.common.notify(null, 'danger', 'Truyền thiếu tham số');
            }
        },
        saveQuizTest: function saveQuizTest(check) {
            LHM.common.updateCkeditor('form-quiz-test')
            $.ajax({
                type: 'POST',
                url: base_url + '/quiz/saveQuizTest',
                data: $('#form-quiz-test').serialize() + '&_token=' + $.cookie('_token'),
                success: function success(data) {
                    if (data.login && data.login == 1) {
                        if (!data.error) {
                            LHM.common.notify(null, 'success', data.msg[0]);
                            if(data.new){
                                window.location = data.href ? data.href : base_url + '/quiz/add-quiz-to-test/' + data._id;
                            } else {
                                setTimeout(function () {
                                    window.location = '/manage#quiz_questions';
                                }, 1000);
                            }
                        } else {
                            $.each(data.msg, function (index, el) {
                                LHM.common.notify(null, 'danger', el);
                            });
                        }
                    } else if (data.login && data.login == 2) {
                        window.location = data.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            })
        },
        saveQuizTestSpecial: function saveQuizTestSpecial() {
            var form = $('#form-quiz-test-special');
            form.find('textarea').each(function () {
                var id_area = $(this).attr('id');
                if (id_area && !$(this).hasClass('not-update-element')) {
                    CKEDITOR.instances[id_area].updateElement();
                }
            });
            var data = new FormData(form[0]), tags_quiz = [];
            $('[name="fields[tags]"] :selected').each(function () {
                tags_quiz.push($(this).val());
            });
            data.append('_id', form.find('[name="itemId"]').val());
            data.append('fields[tags]', tags_quiz.toString());
            data.append('_token', $.cookie('_token'));
            $.ajax({
                url: base_url + '/quiz_test/edit',
                data: data,
                cache: false,
                contentType: false,
                processData: false,
                type: 'POST'
            }).done(function (res) {
                if (res.success) {
                    LHM.common.notify(null, 'success', res.message ? res.message : 'Thành công');
                    setTimeout(function () {
                        if (res.href) {
                            window.location = res.href;
                        } else {
                            window.location = '/manage#quiz_questions';
                        }
                    }, 1000);
                } else {
                    LHM.common.notify(null, 'danger', res.message ? res.message : 'Có lỗi xảy ra');
                }
            }).fail(function () {
                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
            });
        },
        deleteQuizTest: function deleteQuizTest(id, curr) {
            var val_post = {_id: id, _token: $.cookie('_token')};
            $.confirm({
                title: 'Xác nhận',
                content: 'Bạn có chắc chắn xóa đề thi này không ?',
                buttons: {
                    Ok: function Ok() {
                        $.post('/quiz/deleteQuizTest', val_post, function (data) {
                            if (data.login && data.login == 1) {
                                if (!data.error) {
                                    LHM.common.notify(null, 'success', 'Xóa đề thi thành công');
                                    $(curr).parents('tr').remove();
                                }
                            } else if (data.login && data.login == 2) {
                                window.location = data.href;
                            }
                        });
                    }, Cancel: {'text': 'Đóng'}
                }
            });
        },
        checkCompleteTest: function checkCompleteTest(qid, lid, tqi) {
            var user_id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
            var merge_quizcontent_quizinfo = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
            var index_video = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
            var btn_view_result = '';
            var btn_remake_quiz = '';
            var time_quiz = '';
            $.ajax({
                type: 'GET',
                url: base_url + '/quiz/checkCompleteTest',
                data: {qid: qid, user_id: user_id, lid: lid},
                dataType: "json",
                success: function success(res) {
                    if(!qid && res.qid) qid = res.qid
                    if (res.html) {
                        $('.video-src').html("<div class=\"main-test full-page-quiz quiz_edubit text-center\">".concat(res.html, "</div>"));
                        return true;
                    }
                    var text_training = '';
                    var btn_batdau_lambai = __('Bắt đầu làm bài');
                    var txt_hoanthanh_baithi = __('Bạn đã hoàn thành bài thi');
                    var txt_diem = __('Điểm');
                    var txt_time_exam = __('Thời gian làm bài');
                    var txt_dung = __('Đúng');
                    var txt_sai = __('Sai');
                    var txt_boqua = __('Bỏ qua');
                    var txt_thilai = __('Thi lại');
                    if (res.allTest) {
                        var class_training = res.is_training ? '' : 'events-none';
                        text_training = "<div class=\"".concat(class_training, "\"><div class=\"mx-auto\" style=\"width: 540px; max-width: 100%\">\n                                <p class=\"font-weight-bold text-left\">Ch\u1ECDn ph\u1EA7n thi mu\u1ED1n l\xE0m</p>");
                        $.each(res.allTest, function (k, v) {
                            text_training += "<div class=\"d-flex col-gap-1 align-items-center mb-2\">\n                                    <input class=\"top-0\" name=\"training_test_id\" id=\"child_".concat(v._id['$id'], "\" type=\"checkbox\" value=\"").concat(v._id['$id'], "\" checked/> \n                                    <label for=\"child_").concat(v._id['$id'], "\">").concat(v.quiz_title, " (").concat(v.quiz_test_count, " c\xE2u h\u1ECFi)</label>\n                                </div>");
                        });
                        text_training += '<div><p class="font-weight-bold text-left">Giới hạn thời gian</p><select class="form-control" name="training_time"><option value="">-- Chọn thời gian --</option>';
                        for (var i = -3; i <= 3; i++) {
                            var time_choice = parseInt(res.quiz_time) + i * 5, selected = '';
                            if (i === 0) selected = 'selected="selected"';
                            text_training += "<option value=\"".concat(time_choice, "\" ").concat(selected, ">").concat(time_choice, " ph\xFAt</option>");
                        }
                        text_training += '</select></div></div></div>';
                    }
                    if (!res.data.score_info) {
                        var view_rank = "";
                        if (res.data.view_rank_quiz_test && res.data.data_top_rank) {
                            $('body').css("background-color", "#f5f5f5");
                            view_rank = '<div class="col-md-4 full-page-quiz full-content-quiz quiz_edubit"><h5 tyle="padding-top: 10px;">TOP 10 Quizer</h5><div class="table-responsive"><table class="table table-hover bg-white" style="line-height:0.8;"><tbody id="top-student">';
                            $.each(res.data.data_top_rank, function (k, v) {
                                view_rank += '<tr><td>' + v.stt + '. ' + v.name + '</td><td>' + v.score + ' điểm</td><td>' + v.complete_time + '</td></tr>';
                            });
                            for (var _i16 = res.data.data_top_rank.length; _i16 < 10; _i16++) {
                                view_rank += '<tr><td colspan="3">' + (_i16 + 1) + '. .....</td></tr>';
                            }
                            view_rank += '</tbody></table></div></div>';
                        }
                        if (res.countdown_end && res.countdown_end <= 0) {
                            var time_quiz_test = '';
                            var html = '';
                            if (!lid && view_rank) {
                                html += '<div class="row"><div class="text-center mt-3 col-md-8 full-page-quiz quiz_edubit" id="quiz_info_test"><div class="text-center full-content-quiz full-content-quiz-top">';
                            } else {
                                html += '<div class="text-center mt-3" id="quiz_info_test"><div class="text-center">';
                            }
                            if (res.data.quiz_time != '') time_quiz_test = '<span style="margin-right: 15px;">' + res.data.quiz_time + ' phút </span>';
                            html += '<div>Bài kiểm tra </div>' + '<input hidden id="quiz_id" value="' + qid + '">' + '<input hidden id="lesson_id" value="' + lid + '">' + '<input hidden id="user_id_app" value="' + user_id + '">' + '<h3>' + res.data.quiz_title + '</h3>' + '<span style="margin-right: 15px;">' + res.data.quiz_test_count + ' câu</span>' + time_quiz_test + '<span>' + res.data.quiz_point_complete + '% Pass</span>' + '<div style="margin-top: 15px"> ' + res.data.quiz_description + '</div>' + '<h3>Đã hết thời gian làm bài kiểm tra</h3>' + '</div></div>';
                            if (!lid && view_rank) {
                                html += view_rank + text_training + '</div>';
                            }
                            $('.video-src').html(html);
                            MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                        }
                        else if (res.countdown_start && res.countdown_end && res.countdown_start > 0 && res.countdown_end > 0) {
                            var countdown = res.data.time_quiz_test_start;
                            var time_quiz_test = '';
                            var html = '';
                            if (!lid && view_rank) {
                                html += '<div class="row"><div class="text-center mt-3 col-md-8 full-page-quiz quiz_edubit" id="quiz_info_test"><div class="text-center full-content-quiz full-content-quiz-top">';
                            } else {
                                html += '<div class="text-center mt-3" id="quiz_info_test">';
                            }
                            if (res.data.quiz_time != '') time_quiz_test = '<span style="margin-right: 15px;">' + res.data.quiz_time + ' phút </span>';
                            html += '<div>Bài kiểm tra </div>' + '<input hidden id="quiz_id" value="' + qid + '">' + '<input hidden id="lesson_id" value="' + lid + '">' + '<input hidden id="user_id_app" value="' + user_id + '">' + '<h3>' + res.data.quiz_title + '</h3>' + '<span style="margin-right: 15px;">' + res.data.quiz_test_count + ' câu</span>' + time_quiz_test + '<span>' + res.data.quiz_point_complete + '% Pass</span>' + '<div style="margin-top: 15px"> ' + res.data.quiz_description + '</div>' + '<h3 >Đề được mở sau:</h3>' + '<div id ="countdown_start"></div>' + '</div>';
                            var html_pending_quiz = '';
                            if (lid) {
                                html_pending_quiz = '<div class="main-test full-page-quiz">' + html + '<div id="start_quiz" style="display:none" class="col-md-12 text-center"><button id="quiz_start_test" class="btn btn-primary btn-start-test btn-lg" style="margin-bottom:10px;"><i class="far fa-play-circle"></i> ' + btn_batdau_lambai + '</button></div></div>' + text_training + '</div>';
                            } else {
                                html_pending_quiz = html + '<div class="main-test" ><div id="start_quiz" style="display:none" class="col-md-12 text-center"><button id="quiz_start_test" class="btn btn-primary btn-start-test btn-lg" style="margin-bottom:10px;"><i class="far fa-play-circle"></i> ' + btn_batdau_lambai + '</button></div></div></div>';
                                html_pending_quiz + text_training;
                                if (view_rank) html_pending_quiz += view_rank + '</div>';
                            }
                            $('.video-src').html(html_pending_quiz);
                            MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                            if (countdown != '') {
                                var show_date = '%w tuần %d ngày <br />';// format countdown 2018/01/20 18:00:00
                                $('#countdown_start').countdown(countdown, function (event) {
                                    if (event.type == 'finish') {
                                        $('#start_quiz').show();
                                        $('#quiz_time_countdown').hide();
                                    }
                                    $(this).html(event.strftime('<h3>' + show_date + '</h3><h2 style="font-size: 50px">%H:%M:%S</h2>'));
                                });
                            }
                        }
                        else {
                            var time_quiz_test = '';
                            var text_child = '';
                            var pass_percent = '';
                            var btn_start = '';
                            var html = '';
                            if (!lid && view_rank) {
                                html += '<div class="row"><div class="main-test col-md-8 full-page-quiz quiz_edubit"><div class="col-md-12 text-center full-content-quiz full-content-quiz-top">';
                            } else {
                                html += '<div class="main-test full-page-quiz quiz_edubit"><div class="col-md-12 text-center">';
                            }
                            if (res.data.quiz_time != '') time_quiz_test = '<span style="margin-right: 15px;">' + res.data.quiz_time + ' phút </span>';
                            if (res.data.quiz_type === 1) {
                                text_child = '';
                                btn_start = '<a href="/quiz/' + res.data._id.$id + '?start_comprehensive_exam=1&lid=' + lid + '" class="btn btn-primary btn-lg" style="margin-bottom:10px;margin-top: 15px"><i class="far fa-play-circle"></i> ' + btn_batdau_lambai + '</a><div> ' + res.data.quiz_description + text_training + '</div></div></div></div>';
                            } else {
                                text_child = res.data.quiz_test_count + ' ' + __('Câu');
                                pass_percent = '<span>' + res.data.quiz_point_complete + '% Pass</span>';
                                btn_start = '<button id="quiz_start_test" class="btn btn-primary btn-start-test btn-lg" style="margin-bottom:10px;margin-top: 15px"><i class="far fa-play-circle"></i>' + btn_batdau_lambai + '</button><div> ' + res.data.quiz_description + text_training + '</div></div></div></div>';
                            }
                            html += '<div class="text-center mt-3" id="quiz_info_test">' + '<div>' + __('Bài kiểm tra') + ' </div>' + '<input hidden id="quiz_id" value="' + qid + '">' + '<input hidden id="lesson_id" value="' + lid + '">' + '<input hidden id="user_id_app" value="' + user_id + '">' + '<h3>' + res.data.quiz_title + '</h3>' + '<span style="margin-right: 15px;">' + text_child + ' </span>' + time_quiz_test + pass_percent + '<br>';// if (res.data.quiz_test_count > 0)
                            html += btn_start;
                            if (!lid && view_rank) {
                                html += view_rank + '</div>';
                            }
                            $('.video-src').html(html);
                            MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                        }
                    } else {
                        if (tqi) {
                            var score_info = res.data.score_info;// Check điều kiện xem kết quả
                            if (res.btn_result_test == 1) {
                                if (score_info.view_result == 1 && score_info.status_pass || score_info.view_result == 2 || score_info.view_result == 3) {
                                    if (res.view_href) {
                                        btn_view_result = "<a href=\"".concat(base_url, "/viewResult/").concat(score_info._id['$id'], "\" class=\"btn btn-success btn-lg\" target=\"_blank\">K\u1EBFt qu\u1EA3 </a>");
                                        if (score_info.data_child) {
                                            btn_view_result = "<a href=\"/quiz/result/comprehensive/".concat(score_info._id.$id, "?lid=").concat(score_info.lesson_id.$id, "&type=view\" class=\"btn-success btn-lg btn-spec-result\">Xem \u0111\xE1p \xE1n</a>");
                                        }
                                    } else {
                                        btn_view_result = '<button class="btn btn-success btn-lg" onclick="LHM.quiz.getResult(\'' + score_info._id['$id'] + '\',\'' + tqi + '\')">'+__('Kết quả') +'</button>';
                                        if (score_info.data_child) {
                                            btn_view_result = "<a href=\"/quiz/result/comprehensive/".concat(score_info._id.$id, "?lid=").concat(score_info.lesson_id.$id, "&type=view\" class=\"btn-success btn-lg btn-spec-result\">Xem \u0111\xE1p \xE1n</a>");
                                        }
                                    }
                                }
                            }// Check điều kiện làm lại bài quiz
                            if (score_info.remake_test) {
                                if (lid) {
                                    btn_remake_quiz = '<button class="btn btn-primary btn-lg btn-remake-quiz" onclick="LHM.quiz.remakeQuiz(\'' + qid + '\',\'' + lid + '\',\'' + tqi + '\',\'' + user_id + '\')"><i class="far fa-play-circle"></i> ' + txt_thilai + '</button>';
                                    if (score_info.data_child) {
                                        btn_remake_quiz = "<a style=\"width: fit-content\" class=\"btn btn-primary btn-lg btn-remake-quiz\" href=\"/quiz/".concat(score_info.test_id.$id, "?start_comprehensive_exam=1&lid=").concat(lid, "\" ><i class=\"far fa-play-circle\"></i> ").concat(txt_thilai, "</a>");
                                    }
                                } else {
                                    btn_remake_quiz = '<button class="btn btn-primary btn-lg btn-remake-quiz" onclick="LHM.quiz.remakeQuiz(\'' + qid + '\',\'' + lid + '\',\'' + tqi + '\',\'' + user_id + '\')"><i class="far fa-play-circle"></i> ' + txt_thilai + '</button>';
                                    if (score_info.data_child) {
                                        btn_remake_quiz = "<a style=\"width: fit-content\" class=\"btn btn-primary btn-lg btn-remake-quiz\" href=\"/quiz/".concat(score_info.test_id.$id, "?start_comprehensive_exam=1&lid=").concat(lid, "\" ><i class=\"far fa-play-circle\"></i> ").concat(txt_thilai, "</a>");
                                    }
                                }
                            }
                            var btn_record = '';
                            var box_result = '';
                            if (score_info.time != '') {
                                time_quiz = '<p>' + txt_time_exam + ' : <span style="font-weight:bold;">' + score_info.time + '</span></p>';
                                if (!res.data.personal_site) {
                                    btn_record = '<button style="margin-left: 5px;" class="btn btn-info btn-lg"><a href="' + base_url + '/rank/' + qid + '" class="text-white">' + __('Xem xếp hạng') + '</a></button>';
                                }
                            }
                            if (score_info.status_pass) box_result = score_info.content_pass; else box_result = score_info.content_fail;
                            var notify_succes_quiz = '';
                            if (score_info.check_quiz_phrase_statement) {
                                if (score_info.buyerSite) {
                                    notify_succes_quiz = '<p style="font-size:17px;">(' + __('Trong trường hợp bài thi chưa đạt yêu cầu, giảng viên sẽ gửi phản hồi trực tiếp đến bạn') + ')</p>';
                                } else {
                                    if (!score_info.check_update_test_text) {
                                        notify_succes_quiz = '<p style="font-size:17px;">(' + __('Câu hỏi tự luận sẽ có kết quả cập nhật sau khi giảng viên chấm bài') + ')</p>';
                                    }
                                }
                            }
                            var relearn_course = '';
                            var view_score = '';
                            if (res.view_new_score) {
                                view_score = "<h4 style=\"margin:10px 0;font-weight:bold;font-size: 36px\">".concat(Math.round(score_info.score * 100 / score_info.total_score), "% - <span style=\"\">").concat(score_info.score, "/").concat(score_info.total_score, " ").concat(txt_diem, "</span></h4>");
                            }
                            else {
                                view_score = "<h4 style=\"margin:10px 0;font-weight:bold;font-size: 36px\">".concat(score_info.score, "/").concat(score_info.total_score, " ").concat(txt_diem, "</h4>");
                            }
                            if (!lid) {
                                $("#header-quiz-edubit").hide();
                                $("#header-list-quiz-edubit").show();
                                $('#quiz_edubit_button_submit').hide();
                                $('.countdown-time-edubit').hide();
                                $("#footer_quiz").hide();
                                $("#footer_edubit_home").show();
                                if (res.data.view_rank_quiz_test && res.data.data_top_rank) {
                                    $('body').css("background-color", "#f5f5f5");
                                    var view_rank = '<div class="col-md-4 full-page-quiz full-content-quiz quiz_edubit"><h5 tyle="padding-top: 10px;">TOP 10 Quizer</h5><div class="table-responsive"><table class="table table-hover bg-white"  style="line-height:0.8;"><tbody id="top-student">';
                                    $.each(res.data.data_top_rank, function (k, v) {
                                        view_rank += '<tr><td>' + v.stt + '. ' + v.name + '</td><td>' + v.score + ' điểm</td><td>' + v.complete_time + '</td></tr>';
                                    });
                                    for (var _i17 = res.data.data_top_rank.length; _i17 < 10; _i17++) {
                                        view_rank += '<tr><td colspan="3">' + (_i17 + 1) + '. .....</td></tr>';
                                    }
                                    view_rank += '</tbody></table></div></div>';
                                    $('.video-src').html('<div class="row"><div class="main-test full-page-quiz col-md-8 quiz_edubit"><div class="text-center full-content-quiz full-content-quiz-top"><i class="fas fa-trophy" style="font-size:50px;color:' + score_info.color_icon_cups + '"></i><h3 style="font-size:20px;">' + txt_hoanthanh_baithi + '</h3><center>' + view_score + ' <p style="font-size: 25px;">(' + score_info.status + ')</p><div class="wrap-count-quiz"><i class="fas fa-check-circle text-success"></i> ' + txt_dung + ': <span style="font-weight:bold;">' + score_info.correct + ' </span><i class="fas fa-times-circle text-danger"></i> ' + txt_sai + ': <span style="font-weight:bold;">' + score_info.fail + ' </span> <i class="fas fa-exclamation-circle text-info"></i> ' + txt_boqua + ': <span style="font-weight:bold;">' + score_info.skip + '</span></div><div class="clearfix"></div>' + time_quiz + btn_view_result + btn_remake_quiz + notify_succes_quiz + '</center></div><div class="box-result text-center">' + box_result + '</div></div>' + view_rank + text_training + '</div>');
                                } else {
                                    $('.video-src').html('<div class="main-test quiz_edubit"><div class="col-md-12 text-center"><i class="fas fa-trophy" style="font-size:50px;color:' + score_info.color_icon_cups + '"></i><h3 style="font-size:20px;">' + txt_hoanthanh_baithi + '</h3><center>' + view_score + '<p style="font-size: 25px;">(' + score_info.status + ')</p><div class="wrap-count-quiz"><i class="fas fa-check-circle text-success"></i> ' + txt_dung + ': <span style="font-weight:bold;">' + score_info.correct + ' </span><i class="fas fa-times-circle text-danger"></i> ' + txt_sai + ': <span style="font-weight:bold;">' + score_info.fail + ' </span> <i class="fas fa-exclamation-circle text-info"></i> ' + txt_boqua + ': <span style="font-weight:bold;">' + score_info.skip + '</span></div><div class="clearfix"></div>' + time_quiz + btn_view_result + notify_succes_quiz + btn_record + btn_remake_quiz + '</center></div></div><div class="box-result text-center">' + box_result + text_training + '</div>');
                                }
                            }
                            else {
                                var html_src = "<div class=\"main-test full-page-quiz\"><div class=\"col-md-12 text-center\"><i class=\"fas fa-trophy\" style=\"font-size:50px;color: ".concat(score_info.color_icon_cups, "\"></i><h3 style=\"font-size:20px;\">").concat(txt_hoanthanh_baithi, "</h3><center>");
                                if (!score_info.buyerSite) {
                                    html_src += view_score;
                                    html_src += "<p style=\"font-size: 25px;\">(".concat(score_info.status, ")</p>");
                                    html_src += "<div class=\"wrap-count-quiz\">\n                                                    <i class=\"fas fa-check-circle text-success\"></i> \n                                                    ".concat(txt_dung, ": <span style=\"font-weight:bold;\">").concat(score_info.correct, "</span>\n                                                    <i class=\"fas fa-times-circle text-danger\"></i> \n                                                    ").concat(txt_sai, ": <span style=\"font-weight:bold;\">").concat(score_info.fail, "</span>\n                                                    <i class=\"fas fa-exclamation-circle text-info\"></i>\n                                                    ").concat(txt_boqua, ": <span style=\"font-weight:bold;\">").concat(score_info.skip, "</span>           \n                                                </div>");
                                }
                                html_src += "<div class=\"clearfix\"></div>" + time_quiz + btn_view_result + btn_remake_quiz + notify_succes_quiz + relearn_course + "</div></center>";
                                html_src += "<div class=\"box-result text-center\"> ".concat(box_result, " ").concat(text_training, "</div></div>");
                                $('.video-src').html(html_src);
                            }
                            MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                        }
                    }
                }
            }).always(function (res) {
                setTimeout(function () {
                    var actionLearn, keyStorage = "".concat(qid, "_").concat(lid), remake = false;
                    if ($('button#quiz_start_test').length) {
                        actionLearn = $('button#quiz_start_test');
                    } else if ($('button.btn-remake-quiz').length) {
                        actionLearn = $('button.btn-remake-quiz');
                        remake = true;
                    }
                    if (actionLearn && localStorage.getItem(keyStorage)) {
                        var dataStorage = JSON.parse(localStorage.getItem(keyStorage));
                        if (dataStorage.time_check >= new Date().getTime() - 60000) {
                            $.when(actionLearn.click()).then(function () {
                                if (remake) {
                                    $('button.btn-default').click();
                                }
                            });
                        }
                    }
                }, 100);
            });
        },
        saveLocalStorage: function saveLocalStorage(qid, lid) {
            var form = $('#form-submit-test'), countDown = $('#countdown'),
                keyStorage = "".concat(qid, "_").concat(lid);
            if (form.length) {
                var dataStorage = {
                    'data': {},
                    'time_check': new Date().getTime(),
                    'time_learn': countDown.attr('data-learn')
                };
                form.find('.block-quiz-test').each(function () {
                    var quizId = $(this).find('input[name*=id]:first').val();
                    if (quizId) {
                        var answer = [], index = 0;
                        $(this).find('[name*=answer]').each(function () {
                            var name = $(this)[0].localName;
                            if (name === 'textarea' && CKEDITOR.instances[$(this).attr('id')]) {
                                answer[index++] = CKEDITOR.instances[$(this).attr('id')].getData();
                            } else if (name === 'select') {
                                answer[index++] = $(this).val();
                            } else {
                                var type = $(this).attr('type');
                                if (type) {
                                    if (type === 'text') {
                                        answer[index++] = $(this).val();
                                    } else if (type === 'checkbox' || type === 'radio') {
                                        if ($(this).prop('checked')) {
                                            answer[index++] = $(this).val();
                                        }
                                    }
                                }
                            }
                        }).promise().done(function () {
                            dataStorage.data[quizId] = answer;
                        });
                    }
                }).promise().done(function () {
                    localStorage.setItem(keyStorage, JSON.stringify(dataStorage));
                });
            }
        },
        getTest: function getTest(qid, lid, tqi) {
            var user_id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
            var dataCustom = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;// $('.footer').html('');
// $('.footer').css('padding', '35px');
            $('body').css("background-color", "#fff");
            var keyStorage = "".concat(qid, "_").concat(lid), dataStorage = localStorage.getItem(keyStorage),
                data = {qid: qid, lid: lid, user_id: user_id, dataStorage: dataStorage, _token: $.cookie('_token')};
            if (dataCustom !== null && _typeof(dataCustom) === 'object' && 'parent_id' in dataCustom) {
                data.parent_id = dataCustom.parent_id;
            }
            if ($('#field_multipart').length) {
                data['training_test'] = $('#field_multipart [name="training_test_id"]:checked').map(function () {
                    return {
                        'id': $(this).val(),
                        'time': $(this).parents('.child_part:first').find('input[name=training_time]').val()
                    };
                }).get();
            }
            $.ajax({
                url: base_url + '/quiz/getTest', type: 'POST', data: data, success: function success(res) {
                    if (res.notLogin) {
                        window.location.href = base_url + '/login?redirect=' + window.location.href;
                        return true;
                    }
                    if (res.href) {
                        window.location.href = res.href;
                        return true;
                    }
                    if (!res.data) {
                        LHM.common.notify(null, 'danger', res.ms ? res.ms : 'Đề thi chưa có câu hỏi');// localStorage.removeItem(keyStorage)
                    } else {
                        var show_multi_result = res.show_multi_result;
                        var comprehensive_exam = res.parentSetting != null ? 1 : 0;
                        var btn_nopbai = __('Nộp bài');
                        var txt_bkt = __('Bài kiểm tra');
                        if (!res.isPDF) {
                            if (!lid || dataCustom !== null) {
                                var html = '<div class="main-test full-page-content-quiz">';
                                html += '<div class="row">';
                                html += '<div class="col-12 col-md-3 content-info-list-quiz" id="mydiv_list_quiz">';
                                html += '<div id="box-list-page-quiz">';
                                html += '<div class="quiz_name quiz_name_left">' + __('Câu hỏi') + '</div>';
                                html += '<div class="list-button-quiz">';
                                for (var i = 0; i < res.totalQuiz; i++) {
                                    if (i == 0) {
                                        html += '<button class="btn page_list_quiz_button active" value="' + i + '" data-id="div_block_quiz_test_' + i + '"><a style="color:#333;">' + (i + 1) + '</a></button>';
                                    } else {
                                        html += '<button class="btn page_list_quiz_button" value="' + i + '" data-id="div_block_quiz_test_' + i + '"><a style="color:#333;">' + (i + 1) + '</a></button>';
                                    }
                                }
                                html += '</div>';
                                if (!res.quiz_edubit) {
                                    html += '<div class="action-submit-test d-flex py-3 w-100" style="gap: 10px; flex-wrap: wrap">';
                                    if (res.parentSetting) {
                                        if (parseInt($('.quiz_child_tab[data-quiz-child-id="' + qid + '"]').attr('data-quiz-child-number')) === parseInt(res.parentSetting.quiz_child_count)) {
                                            html += "<button type=\"button\" onclick=\"LHM.quiz.saveTest(this,'".concat(qid, "','").concat(dataCustom.lesson_id, "','").concat(tqi, "','").concat(user_id, "',0,'',true, '").concat(show_multi_result, "', '").concat(comprehensive_exam, "')\" style=\"background: #e60c0c; border-color: #e60c0c;\" class=\"btn btn-primary btn-large btn-submit-quiz\"><i class=\"fab fa-telegram-plane\"></i> ").concat(__('Nộp bài'), "</button>");
                                            html += "<button type=\"button\" onclick=\"LHM.quiz.saveTest(this,'".concat(qid, "','").concat(dataCustom.lesson_id, "','").concat(tqi, "','").concat(user_id, "',0,'',false, '").concat(show_multi_result, "', '").concat(comprehensive_exam, "')\" style=\"display: none;\" class=\"btn btn-primary btn-large btn-submit-quiz-no-confirm\"><i class=\"fab fa-telegram-plane\"></i></button>");
                                        } else {
                                            html += "<button type=\"button\" class=\"btn btn-primary btn-large\" onclick=\"LHM.quiz.nextChildQuiz('".concat(dataCustom.next_child_id, "', '").concat(dataCustom.next_child_number, "', '").concat(parseInt(res.parentSetting.quiz_child_count), "', '").concat(dataCustom.parent_id, "', '").concat(dataCustom.lesson_id, "')\" style=\"background: #03722F; border-color: #03722F\"> ").concat(__('Tiếp tục'), "</button>");
                                            html += "<button type=\"button\" class=\"btn btn-primary btn-large btn-next-child\" style=\"display: none;\" onclick=\"LHM.quiz.nextChildQuiz('".concat(dataCustom.next_child_id, "', '").concat(dataCustom.next_child_number, "', '").concat(parseInt(res.parentSetting.quiz_child_count), "', '").concat(dataCustom.parent_id, "', '").concat(dataCustom.lesson_id, "', 'true')\"></button>");
                                        }
                                    } else {
                                        html += "<button type=\"button\" onclick=\"LHM.quiz.saveTest(this,'".concat(qid, "','").concat(lid, "','").concat(tqi, "','").concat(user_id, "',0,'',true, '").concat(show_multi_result, "')\" class=\"btn btn-primary btn-large\"><i class=\"fab fa-telegram-plane\"></i> ").concat(__('Nộp bài'), "</button>");
                                    }
                                    if (parseInt(res.timer) > 0 && res.isTimer) {
                                        html += '<p class="ml-auto my-auto font-weight-bold" style="font-size: 20px"><span id="countdown" class="countdown_link_quiz down-time-new"></span></p>' + '</div>';
                                    } else {
                                        html += '<p class="ml-auto my-auto font-weight-bold" style="font-size: 20px;display:none"><span id="countdown" class="countdown_link_quiz down-time-new"></span></p>' + '</div>';
                                    }
                                }
                                html += '</div>';
                                html += '<label class="show_view_page_quiz"><i class="fa fa-ellipsis-h"></i></label>';
                                html += '</div>';
                                html += '<div class="col-12 col-md-9 content-info-quiz-test">';
                                html += '<div class="row config-margin-left-20">';
                                if (sid != 0) {
                                    if (res.parentSetting !== null) {
                                        var quiz_title = res.parentSetting.setting_quiz_child[qid].title !== '' ? res.parentSetting.setting_quiz_child[qid].title : res.quiz_title;
                                        html += '<div class="quiz_name" style="width: 100%; text-align: center; color: #0078d7; font-size: 24px; margin-bottom: 12px;"><b> ' + __('Bài thi') + ': ' + quiz_title + '</b>';
                                        html += '</div>';
                                        html += '<br>';
                                        html += '<div style="margin-bottom: 30px; width: 100%; text-align: right; color: #909090">Bản quyền của VNES</div>';
                                    } else {
                                        html += '<div class="quiz_name"><b> ' + __('Bài kiểm tra') + ': ' + res.quiz_title + '</b>';
                                        html += '</div>';
                                    }
                                }
                                html += '<div class="col-md-12 col-sm-12">';
                            } else {
                                var html = '<div class="main-test full-page-quiz full-page-content-quiz" id="full-page-content-quiz">';
                                html += '<div class="quiz_name"><b> ' + txt_bkt + ': ' + res.quiz_title + '</b>';
                                html += '</div>';
                                if(res.show_list_question) {
                                    html += '<div class="col-12 col-md-3 content-info-list-quiz wrap-quiz-question" id="mydiv_list_quiz">';
                                    html += '<div id="box-list-page-quiz">';
                                    html += '<div class="quiz_name quiz_name_left">' + __('Câu hỏi') + '</div>';
                                    html += '<div class="list-button-quiz">';
                                    for (var i = 0; i < res.totalQuiz; i++) {
                                        if (i == 0) {
                                            html += '<button class="btn page_list_quiz_button active" value="' + i + '" data-id="div_block_quiz_test_' + i + '"><a style="color:#333;">' + (i + 1) + '</a></button>';
                                        } else {
                                            html += '<button class="btn page_list_quiz_button" value="' + i + '" data-id="div_block_quiz_test_' + i + '"><a style="color:#333;">' + (i + 1) + '</a></button>';
                                        }
                                    }
                                    html += '</div>';
                                    html += '</div>';
                                    html += '<label class="show_view_page_quiz"><i class="fa fa-ellipsis-h"></i></label>';
                                    html += '</div>';
                                }
                                html += '<div class="col-md-12 col-sm-12 content-info-quiz-test " id="content-info-quiz-test">';
                            }
                            html += '<form id="form-submit-test" autocomplete="off" class="wrap-list-question" style="margin-bottom: 100px">';
                            if (res.parentSetting && dataCustom) {
                                html += "<input type=\"hidden\" name=\"parent_id\" value=\"".concat(dataCustom.parent_id, "\">");
                                html += "<input type=\"hidden\" name=\"quiz_id\" value=\"".concat(qid, "\">");
                            }
                            if (res.data) {
                                $.each(res.data, function (k, v) {
                                    html += v;
                                });
                            } else {
                                html += '<p class="text-center"><strong>' + __('Đang cập nhật') + '</strong></p>';
                            }
                            if (!res.quiz_edubit) {
                                if (lid && !res.parentSetting) {
                                    html += "<button id=\"quiz_button_submit\" type=\"button\" onclick=\"LHM.quiz.saveTest(this,'".concat(qid, "','").concat(lid, "','").concat(tqi, "','").concat(user_id, "',0,'',true,'").concat(show_multi_result, "')\" class=\"btn btn-primary btn-large\"><i class=\"fab fa-telegram-plane\"></i> ").concat(btn_nopbai, "</button>");
                                }
                            } else {
                                $('#quiz_edubit_button_submit').attr("onclick", "LHM.quiz.saveTest(this,\'" + qid + "\',\'" + lid + "\',\'" + tqi + "\',\'" + user_id + "\')");
                            }
                            if(res.show_list_question && lid) {
                                html += '<i class="fas fa-bars px-3" id="btn-menu-bar"></i>';
                            }
                            if (res.parentSetting !== null) {
                                res.view_sequen_quiz_test = false;
                            }
                            if (res.view_sequen_quiz_test) {
                                html += '<div class="d-flex justify-content-between config_next_back">';
                                html += '<div class="text-left">';
                                html += '<button type="button" class="btn btn-light back_page_quiz" style="display:none;"><i class="fas fa-angle-left"></i> Câu trước</button>';
                                html += '</div>';
                                html += '<div class="text-right">';
                                html += '<button type="button" class="btn btn-light next_page_quiz">' + __('Câu sau') + ' <i class="fas fa-angle-right"></i></button>';
                                html += '</div>';
                                html += '</div>';
                            }
                            html += '</form>';
                            html += '</div>';
                            html += '<input type="hidden" class="hidden" id="value_page_quiz" value="0">';
                            if (parseInt(res.timer) > 0 && res.isTimer) {
                                if (lid) {
                                    html += '<div class="col-md-4 col-sm-4 show-timer countdown-time d-flex align-items-center" >';
                                    html += '<p style="font-weight:bold; margin-bottom: 0px"> <span id="countdown"></span></p>';
                                    html += '</div>';
                                } else {
                                    if (res.quiz_edubit) {
                                        $('.countdown-time-edubit').show();
                                    }
                                }
                            } else {
                                html += '<span id="countdown" style="display:none;"></span>';
                            }
                            html += '</div>';
                            html += '</div>';
                            if (!lid) {
                                html += '</div>';
                                html += '</div>';
                            }
                            $('.video-src').html(html);
                            //đóng mở sitebar
                            $('#btn-menu-bar').click(function () {
                                var wrapListQuiz = $('.wrap-quiz-question');
                                if (wrapListQuiz.css('left') === '-400px') {
                                    wrapListQuiz.animate({ left: '0px' }, 500); // Trượt vào màn hình
                                } else {
                                    wrapListQuiz.animate({ left: '-400px' }, 500); // Trượt ra ngoài màn hình
                                }
                            });
                            $('#content-info-quiz-test').click(function () {
                                var wrapListQuiz = $('.wrap-quiz-question');
                                if (wrapListQuiz.css('left') === '0px') {
                                    wrapListQuiz.animate({ left: '-400px' }, 500); // Trượt ra ngoài màn hình
                                }
                            });
                            if(res.button_view_result){
                                /*$('.video-src .quiz_note').hide().each(function () {
                                    
                                })*/
                                $('.video-src button.js-show-result-button').each(function () {
                                    const r_content = $(this).closest('.show-result').find('.show-result-content')
                                    if(r_content.length) {
                                        const h_c = r_content.html(), that = $(this);
                                        let click = false;
                                        r_content.empty()
                                        $(this).click(function () {
                                            if(!click) {
                                                click = true;
                                                loadingProcess()
                                                setTimeout(function () {
                                                    stopLoadingProcess()
                                                    r_content.html(h_c)
                                                    r_content.show('slow')
                                                    that.parent().remove()
                                                }, 600)
                                            }

                                        })
                                    } else $(this).closest('.show-result').remove()
                                })
                            }
                            if (res.view_sequen_quiz_test) {
                                var totalQuiz = res.totalQuiz ? res.totalQuiz : res.data.length;
                                if (totalQuiz && res.quiz_edubit) {
                                    $('#footer_quiz .copyright').html('Câu 1/' + res.data.length);
                                }
                                $('#form-submit-test').find('.block-quiz-test').hide();
                                $('#div_block_quiz_test_0').show();
                                if (totalQuiz == 1) {
                                    $('.next_page_quiz').hide();
                                }
                                $('.back_page_quiz, .next_page_quiz').on('click', function () {
                                    var next = $(this).hasClass('next_page_quiz');
                                    if (!lid || res.parentSetting || res.show_list_question) {
                                        var divCurrent = $('.list-button-quiz button.page_list_quiz_button.active');
                                        if (divCurrent.length) {
                                            var buttonClick;
                                            if (next) {
                                                buttonClick = divCurrent.next();
                                            } else {
                                                buttonClick = divCurrent.prev();
                                            }
                                            if (buttonClick.length && buttonClick.hasClass('page_list_quiz_button')) {
                                                buttonClick.click();
                                            }
                                        } else {
                                            $('.list-button-quiz button.page_list_quiz_button:first').click();
                                        }
                                    } else {
                                        $('.back_page_quiz, .next_page_quiz').show();
                                        var _divCurrent = $('#form-submit-test .block-quiz-test:visible:first');
                                        var first = parseInt($('#form-submit-test .block-quiz-test:first').data('page'));
                                        var last = parseInt($('#form-submit-test .block-quiz-test:last').data('page'));
                                        if (_divCurrent.length) {
                                            $('#form-submit-test .block-quiz-test').hide();
                                            var page = parseInt(_divCurrent.data('page'));
                                            if (next) {
                                                page += 1;
                                            } else {
                                                page -= 1;
                                                if (page < 0) page = 0;
                                            }
                                            _divCurrent = $("#form-submit-test .block-quiz-test[data-page=\"".concat(page, "\"]"));
                                            if (_divCurrent.length < 0) {
                                                if (next) {
                                                    _divCurrent = $('#form-submit-test .block-quiz-test:last').show();
                                                } else {
                                                    _divCurrent = $('#form-submit-test .block-quiz-test:first').show();
                                                }
                                            }
                                            _divCurrent.show();
                                            if (page === first) {
                                                $('.back_page_quiz').hide();
                                            } else if (page === last) {
                                                $('.next_page_quiz').hide();
                                            }
                                        } else {
                                            $('#form-submit-test .block-quiz-test:first').show();
                                        }
                                    }
                                });
                            }
                            MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                            if (!lid || res.parentSetting || res.show_list_question) {
                                $('#header-quiz-edubit').css('margin-bottom', '0px');
                                $('.container').css('margin', '0px');
                                $('#mydiv_list_quiz .list-button-quiz button.page_list_quiz_button').click(function () {
                                    $('#mydiv_list_quiz .list-button-quiz button.page_list_quiz_button').removeClass('active');
                                    $(this).addClass('active');
                                    var first = $('.list-button-quiz button.page_list_quiz_button:first').data('id');
                                    var last = $('.list-button-quiz button.page_list_quiz_button:last').data('id');
                                    var current = $(this).data('id');
                                    if (res.view_sequen_quiz_test) {
                                        $('#form-submit-test').find('.block-quiz-test').hide();
                                        $("#".concat(current)).show();
                                        $('.back_page_quiz,.next_page_quiz').show();
                                        if (current === first) {
                                            $('.back_page_quiz').hide();
                                        } else if (current === last) {
                                            $('.next_page_quiz').hide();
                                        }
                                    } else {
                                        var document_div = $("#".concat(current));
                                        if (document_div.length) {
                                            if(!lid || res.parentSetting){
                                                $('body,html').animate({scrollTop: document_div.offset().top}, 1000, 'swing');
                                            }else if(res.show_list_question && lid) {
                                                var scrollContainer = $('#full-page-content-quiz');
                                                 // Tính toán vị trí cuộn chính xác
                                                var targetPosition = document_div.offset().top - scrollContainer.offset().top + scrollContainer.scrollTop();
                                                scrollContainer.animate({scrollTop: targetPosition}, 1000, 'swing');
                                            }  
                                        }
                                    }
                                });
                                if (!res.view_sequen_quiz_test) {
                                    var myFunction1 = function myFunction1() {//fix scroll div danh sách câu hỏi
                                        if (!res.quiz_edubit && !lid) {
                                            if (screen.width >= 768) {
                                                if (window.pageYOffset > sticky1) {
                                                    header1.classList.add("sticky_quiz");
                                                } else {
                                                    header1.classList.remove("sticky_quiz");
                                                }
                                            } else {
                                                header1.classList.remove("sticky_quiz");
                                            }
                                        } else {
                                            if (window.pageYOffset > sticky1) {
                                                header1.classList.add("sticky_quiz");
                                            } else {
                                                header1.classList.remove("sticky_quiz");
                                            }
                                        }//active button page khi scroll tới div chứa câu hỏi
                                        var scrollPos = $(document).scrollTop();
                                        $('#mydiv_list_quiz button.page_list_quiz_button').each(function () {
                                            var currLink = $(this);
                                            var refElement = $('#' + currLink.attr("data-id"));
                                            if (refElement.position().top <= scrollPos + 50 && refElement.position().top + refElement.height() >= scrollPos) {
                                                $('#mydiv_list_quiz button').removeClass("active");
                                                currLink.addClass("active");
                                            } else {
                                                currLink.removeClass("active");
                                            }
                                        });
                                    };
                                    window.onscroll = function () {
                                        myFunction1();// myFunction();
                                    };
                                    var header1 = document.getElementById("box-list-page-quiz");
                                    var sticky1 = header1.offsetTop;
                                }
                                $('.area-answer-quiz,.input_answer_quiz_fill_words,select[name*=answer]').change(function () {
                                    var photo = $(this).parents('.block-question:first').attr('data-page'),
                                        input = $(this).find('input:first');
                                    if (input.length && $(this).hasClass('area-answer-quiz')) {
                                        if (input.attr('type') == 'radio') {
                                            $(this).parents('.block-question:first').find('.area-answer-quiz').removeClass('user-choice');
                                            $(this).addClass('user-choice');
                                        } else {
                                            if ($(this).hasClass('user-choice')) {
                                                $(this).removeClass('user-choice');
                                            } else {
                                                $(this).addClass('user-choice');
                                            }
                                        }
                                    }
                                    if (!$('#mydiv_list_quiz button[value=' + photo + ']').hasClass('quiz_answered')) {
                                        $('#mydiv_list_quiz button[value=' + photo + ']').addClass("quiz_answered");
                                    }
                                });
                                $('.basic_mt_drg_center,.area-answer-quiz-statement,.area-answer-quiz-drap-drop').click(function () {
                                    var photo1 = $(this).parents('.block-quiz-test').attr('data-page');
                                    if (!$('#mydiv_list_quiz button[value=' + photo1 + ']').hasClass('quiz_answered')) {
                                        $('#mydiv_list_quiz button[value=' + photo1 + ']').addClass("quiz_answered");
                                    }
                                });
                                for (var instanceName in CKEDITOR.instances) {
                                    CKEDITOR.instances[instanceName].on('change', function () {
                                        var photo2 = $('#' + $(this)[0].name).attr('data-page') - 1;
                                        if (!$('#mydiv_list_quiz button[value=' + photo2 + ']').hasClass('quiz_answered')) {
                                            $('#mydiv_list_quiz button[value=' + photo2 + ']').addClass("quiz_answered");
                                        }
                                    });
                                }
                            } else {
                                $('.area-answer-quiz').change(function () {
                                    var input = $(this).find('input:first');
                                    if (input.length && $(this).hasClass('area-answer-quiz')) {
                                        if (input.attr('type') == 'radio') {
                                            $(this).parents('.block-question:first').find('.area-answer-quiz').removeClass('user-choice');
                                            $(this).addClass('user-choice');
                                        } else {
                                            if ($(this).hasClass('user-choice')) {
                                                $(this).removeClass('user-choice');
                                            } else {
                                                $(this).addClass('user-choice');
                                            }
                                        }
                                    }
                                });
                            }
                        } else {
                            var quizTr = '';
                            $.each(res.data, function (k, v) {
                                quizTr += v;
                            });
                            var _html6 = "\n                                <div class=\"learn-content-pdf\">\n                                    <div class=\"list-question-pdf\">\n                                        <div class=\"text-uppercase mb-3\">\n                                        Phi\u1EBFu tr\u1EA3 l\u1EDDi (<span class=\"total-choice\">0</span>/".concat(res.data.length, ")\n                                        </div>\n                                        <form class=\"list-table-question table-responsive\" id=\"form-submit-test\">\n                                            <table class=\"table\">\n                                                <tbody>").concat(quizTr, "</tbody>\n                                            </table>\n                                        </form>\n                                        <div class=\"d-flex justify-content-between\">\n                                            <button type=\"button\" class=\"btn btn-primary btn-large\" \n                                            onclick=\"LHM.quiz.saveTest(this, '").concat(qid, "','").concat(lid, "','").concat(tqi, "','").concat(user_id, "',0,'',true,'").concat(show_multi_result, "')\">\n                                                <i class=\"fab fa-telegram-plane\"></i> ").concat(__('Nộp bài'), "\n                                            </button>\n                                            <p class=\"my-auto font-weight-bold\">\n                                                <span id=\"countdown\" class=\"countdown_link_quiz down-time-new\" data-learn=\"0\" data-time=\"\"></span>\n                                            </p>\n                                        </div>\n                                    </div>     \n                                    <div class=\"content-pdf-file\">\n                                        <div class=\"text-uppercase mb-3\">").concat(res.quiz_title, "</div>\n                                        <iframe src=\"").concat(base_url, "/embed/readPdfNew/").concat(encodeURIComponent(res.file_pdf), "#toolbar=0&navpanes=0\" width=\"100%\" height=\"400px\"></iframe>\n                                    </div>                  \n                                </div>\n                            ");
                            $('.video-src').html(_html6);
                            $('.learn-content-pdf').on('click', 'label.answer-pdf', function () {
                                $(this).parents('tr:first').find('label.answer-pdf').removeClass('active-pdf');
                                $(this).addClass('active-pdf');
                                $('.learn-content-pdf .total-choice').text($('.learn-content-pdf label.active-pdf').length);
                            });
                            if (!res.isTimer) {
                                $('#countdown').parent().hide();
                            }
                        }
                        if (base_url.indexOf('maihienvstep') !== -1) {
                            $('.block-quiz-test div.text-answer span').addClass('remove-size');
                        }
                        if (parseInt(res.timer) > 0) {
                            LHM.common.countdown(res.timer, $('#countdown'), qid, lid, tqi, user_id, false, res.user_time_learn);
                        } else {
                            LHM.common.countdown(999999999, $('#countdown'), qid, lid, tqi, user_id, true, res.user_time_learn);
                        }
                        LHM.quiz.saveLocalStorage(qid, lid, user_id);
                        if (res.not_copy) {
                            setTimeout(function () {
                                if (typeof document.onselectstart != "undefined") document.onselectstart = function () {
                                    if ($('#form-submit-test').length) {
                                        return false;
                                    }
                                }; else {
                                    document.onmousedown = function () {
                                        if ($('#form-submit-test').length) {
                                            return false;
                                        }
                                    };
                                }
                                for (var _instanceName in CKEDITOR.instances) CKEDITOR.instances[_instanceName].on('paste', function () {
                                    return false;
                                });
                                $('#form-submit-test input[type=text]').on('paste', function () {
                                    return false;
                                });
                            }, 300);
                        }
                    }
                    if (keyStorage) {
                        var dataKeyStorage = JSON.parse(localStorage.getItem(keyStorage));
                        if (dataKeyStorage) {
                            for (var key in dataKeyStorage.data) {
                                if (dataKeyStorage.data.hasOwnProperty(key)) {
                                    var quizBlock = $(".block-question input[type=\"hidden\"][value=\"".concat(key, "\"]")).closest('.block-question');
                                    if (quizBlock.find('.area-answer-quiz.user-choice').length > 0) {
                                        var dataPage = quizBlock.data('page');
                                        $(".page_list_quiz_button[value=\"".concat(dataPage, "\"]")).addClass('quiz_answered');
                                    }
                                }
                            }
                        }
                    }
                }, error: function error() {// localStorage.removeItem(keyStorage)
                    LHM.common.notify(null, 'danger', res.ms ? res.ms : 'Có lỗi xảy ra');
                }
            });
        },
        remakeQuiz: function remakeQuiz(qid, lid, tqi) {
            var user_id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
            var type = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
            $.confirm({
                title: __('Xác nhận làm lại'),
                columnClass: 'col-md-6',
                content: __('Bạn có chắc chắn muốn làm lại ?'),
                buttons: {
                    Ok: function Ok() {
                        window.remake_quiz = 1;
                        if (!lid) {
                            $("#header-quiz-edubit").show();
                            $("#header-list-quiz-edubit").hide();
                            $('#quiz_edubit_button_submit').show();
                            $('.countdown-time-edubit').show();
                            $("#footer_quiz").show();
                            $("#footer_edubit_home").hide();
                        }
                        LHM.quiz.getTest(qid, lid, tqi, user_id);
                    }, cancel: {btnClass: 'btn-blue', text: 'Close'}
                }
            });
        },
        checkSkipBeforeSend: function checkSkipBeforeSend(curr, qid, lid, tqi) {
            for (var instanceName in CKEDITOR.instances) CKEDITOR.instances[instanceName].updateElement();
            var datastring = $('#form-submit-test').serialize();
            var remake_quiz = window.remake_quiz ? window.remake_quiz : 0;//datastring = datastring + '&_token=' + $.cookie('_token');
            datastring = datastring + '&_token=' + $.cookie('_token') + '&qid=' + qid + '&lid=' + lid + '&remake_quiz=' + remake_quiz;
            return $.ajax({
                url: base_url + '/quiz/checkSkipBeforeSend',
                type: 'POST',
                data: datastring,
                dataType: 'json'
            });
        },
        sendAjaxSaveTest: function sendAjaxSaveTest(curr, qid, lid, tqi) {
            var user_id = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
            var reup = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
            var datastring_reup = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : "";
            var dataComprehensive = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;
            var comprehensiveTime = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;
            return function (datastring_reup) {
                for (var instanceName in CKEDITOR.instances) CKEDITOR.instances[instanceName].updateElement();
                var btn_view_result = '';
                var btn_remake_quiz = '';
                var remake_quiz = window.remake_quiz ? window.remake_quiz : 0;
                var time_quiz = '';
                if (dataComprehensive != null) {
                    $.ajax({
                        url: base_url + '/quiz/saveTest',
                        type: 'POST',
                        data: {
                            'data_comprehensive': dataComprehensive,
                            '_token': $.cookie('_token'),
                            'qid': qid,
                            'lid': lid,
                            'user_id': user_id,
                            'time_complete': comprehensiveTime !== 0 ? comprehensiveTime : $('#countdown').attr('data-learn'),
                            'last_quiz': $('#lesson-' + lid).attr('data-last-lesson'),
                            'final_lesson': $('#lesson-' + lid).attr('data-final-lesson'),
                            'remake_quiz': remake_quiz
                        },
                        success: function () {
                            var _success22 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(res) {
                                var is_pass_course;
                                return _regeneratorRuntime().wrap(function _callee8$(_context8) {
                                    while (1) switch (_context8.prev = _context8.next) {
                                        case 0:
                                            if (res.data.data_child != null) {
                                                if (lid && res.data.status_pass) {
                                                    is_pass_course = false;
                                                    if (res.data.is_end_course) {
                                                        is_pass_course = true;
                                                    }
                                                    LHM.courses.set_pass_lesson('#lesson-' + lid, user_id, lid, 1, is_pass_course);
                                                }
                                                clearInterval(window.countdown);
                                                localStorage.removeItem('dataComprehensive');
                                                localStorage.removeItem('doneQuizChild');
                                                localStorage.removeItem('test_learning');
                                                window.location.href = base_url + '/quiz/result/comprehensive/' + res.data._id.$id + '?lid=' + res.data.lesson_id.$id;
                                            } else {
                                                LHM.common.notify(null, 'danger', 'Không có dữ liệu');
                                            }
                                        case 1:
                                        case"end":
                                            return _context8.stop();
                                    }
                                }, _callee8);
                            }));

                            function success(_x8) {
                                return _success22.apply(this, arguments);
                            }

                            return success;
                        }(),
                        error: function error(jqXHR, textStatus) {
                            LHM.common.readError(jqXHR);
                        }
                    });
                } else {
                    if (!datastring_reup) {
                        var datastring = $('#form-submit-test').serialize();
                        var datastring_reup = $('#form-submit-test').serialize();
                    } else {
                        var datastring = datastring_reup;
                    }
                    datastring = datastring + '&_token=' + $.cookie('_token') + '&qid=' + qid + '&lid=' + lid + '&user_id=' + user_id + '&time_complete=' + $('#countdown').attr('data-learn') + '&last_quiz=' + $('#lesson-' + lid).attr('data-last-lesson') + '&final_lesson=' + $('#lesson-' + lid).attr('data-final-lesson') + '&remake_quiz=' + remake_quiz;
                    $.ajax({
                        url: base_url + '/quiz/saveTest', type: 'POST', data: datastring, success: function () {
                            var _success23 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(res) {
                                var html, keyStorage, txt_hoanthanh, txt_thank_completed, txt_result_pending,
                                    txt_thilai, is_pass_course, btn_record, box_result, notify_succes_quiz,
                                    relearn_course;
                                return _regeneratorRuntime().wrap(function _callee9$(_context9) {
                                    while (1) switch (_context9.prev = _context9.next) {
                                        case 0:
                                            html = '', keyStorage = "".concat(qid, "_").concat(lid);
                                            txt_hoanthanh = __('Bạn đã hoàn thành bài thi');
                                            txt_thank_completed = __('Cảm ơn bạn đã hoàn thành bài thi');
                                            txt_result_pending = __('Kết quả : Đang xử lý đã có lỗi. xin vui lòng thử lại sau ....');
                                            txt_thilai = __('Thi lại');
                                            clearInterval(window.countdown);
                                            localStorage.removeItem(keyStorage);
                                            if (res.data) {// Nếu đề thi không có tùy chọn làm lại thì set hoàn thành
                                                if (lid && res.data.status_pass) {
                                                    is_pass_course = false;
                                                    if (res.data.is_end_course) {
                                                        is_pass_course = true;
                                                    }
                                                    LHM.courses.set_pass_lesson('#lesson-' + lid, user_id, lid, 1, is_pass_course);
                                                }
                                                if (lid && res.data.buyerSite && !res.data.status_pass) {// khi làm lại mà ko đạt
                                                    LHM.courses.set_pass_lesson('#lesson-' + lid, user_id, lid);
                                                }
                                                if (res.data.btn_result_test == 1) {
                                                    if (res.data.view_result == 1 && res.data.status_pass || res.data.view_result == 2 || res.data.view_result == 3) {
                                                        btn_view_result = '<button class="btn btn-success btn-lg" onclick="LHM.quiz.getResult(\'' + res.data._id['$id'] + '\',\'' + tqi + '\')">Kết quả</button>';
                                                    }
                                                }// Check điều kiện làm lại bài quiz
                                                if (res.data.remake_test) {
                                                    if (lid) {
                                                        btn_remake_quiz = '<button class="btn btn-primary btn-lg btn-remake-quiz" onclick="LHM.quiz.remakeQuiz(\'' + qid + '\',\'' + lid + '\',\'' + tqi + '\',\'' + user_id + '\')"><i class="far fa-play-circle"></i> ' + txt_thilai + '</button>';
                                                    } else {
                                                        btn_remake_quiz = '<button class="btn btn-primary btn-lg btn-remake-quiz" onclick="LHM.quiz.remakeQuiz(\'' + qid + '\',\'' + lid + '\',\'' + tqi + '\',\'' + user_id + '\')"><i class="far fa-play-circle"></i> ' + txt_thilai + '</button>';
                                                    }
                                                }
                                                btn_record = '';
                                                box_result = '';
                                                if (res.data.status_pass) box_result = res.data.content_pass; else box_result = res.data.content_fail;
                                                if (res.data.time != '') {
                                                    if (!res.data.personal_site) {
                                                        btn_record = '<button style="margin-left: 5px;" class="btn btn-info btn-lg"><a target="_blank" href="' + base_url + '/rank/' + qid + '" class="text-white">' + __('Xem xếp hạng') + '</a></button>';
                                                    }
                                                    time_quiz = '<p>Thời gian làm bài: <span style="font-weight:bold;">' + res.data.time + '</span></p>';
                                                }
                                                notify_succes_quiz = '';
                                                if (res.data.check_quiz_phrase_statement) {
                                                    if (res.data.buyerSite) {
                                                        notify_succes_quiz = '<p style="font-size:17px;">(' + __('Trong trường hợp bài thi chưa đạt yêu cầu, giảng viên sẽ gửi phản hồi trực tiếp đến bạn') + ')</p>';
                                                    } else {
                                                        notify_succes_quiz = '<p style="font-size:17px;">(' + __('Câu hỏi tự luận sẽ có kết quả cập nhật sau khi giảng viên chấm bài') + ')</p>';
                                                    }
                                                }
                                                relearn_course = '';
                                                if (!lid) {
                                                    html = '<div class="main-test quiz_edubit" style="margin-top:50px;"><div class="col-md-12 text-center"><i class="fas fa-trophy" style="font-size:50px;color:' + res.data.color_icon_cups + '"></i><h3 style="font-size:20px;">' + txt_hoanthanh + '</h3><center><h4 style="margin:10px 0;font-weight:bold;font-size: 36px">' + res.data.score + '/' + res.data.total_score + ' ' + __('Điểm') + ' </h4><p style="font-size: 25px;">(' + res.data.status + ')</p><div class="wrap-count-quiz"><i class="fas fa-check-circle text-success"></i> ' + __('Đúng') + ': <span style="font-weight:bold;">' + res.data.correct + ' </span><i class="fas fa-times-circle text-danger"></i> ' + __('Sai') + ': <span style="font-weight:bold;">' + res.data.fail + ' </span> <i class="fas fa-exclamation-circle text-info"></i> ' + __('Bỏ qua') + ': <span style="font-weight:bold;">' + res.data.skip + '</span></div><div class="clearfix"></div>' + time_quiz + btn_view_result + notify_succes_quiz + btn_record + btn_remake_quiz + '</center></div></div><div class="box-result text-center">' + box_result + '</div>';
                                                } else {
                                                    html = '<div class="main-test full-page-quiz"><div class="col-md-12 text-center"><i class="fas fa-trophy" style="font-size:50px;color:' + res.data.color_icon_cups + '"></i><h3 style="font-size:20px;">' + txt_hoanthanh + '</h3><center>';
                                                    if (!res.data.buyerSite) {
                                                        html += '<h4 style="margin:10px 0;font-weight:bold;font-size: 36px">' + res.data.score + '/' + res.data.total_score + ' ' + __('Điểm') + ' </h4><p style="font-size: 25px;">(' + res.data.status + ')</p><div class="wrap-count-quiz"><i class="fas fa-check-circle text-success"></i> ' + __('Đúng') + ': <span style="font-weight:bold;">' + res.data.correct + ' </span><i class="fas fa-times-circle text-danger"></i> ' + __('Sai') + ': <span style="font-weight:bold;">' + res.data.fail + ' </span> <i class="fas fa-exclamation-circle text-info"></i> ' + __('Bỏ qua') + ' : <span style="font-weight:bold;">' + res.data.skip + '</span></div>';
                                                    }
                                                    html += '<div class="clearfix"></div>' + time_quiz + btn_view_result + btn_remake_quiz + notify_succes_quiz + relearn_course + '</center></div><div class="box-result text-center">' + box_result + '</div></div>';
                                                }
                                            } else {
                                                html = '<div class="main-test">' + '<div class="col-md-12 text-center">' + '<h3>' + txt_thank_completed + '</h3>' + '<center>' + '<h4>' + txt_result_pending + '</h4>' + '</center>' + '</div>' + '</div>';
                                                if (res.ms) {
                                                    LHM.common.notify(null, 'danger', res.ms);
                                                }
                                            }
                                            $('.video-src').html(html);
                                        case 9:
                                        case"end":
                                            return _context9.stop();
                                    }
                                }, _callee9);
                            }));

                            function success(_x9) {
                                $('#quiz_edubit_button_submit').hide();
                                $('.countdown-time-edubit').hide();
                                $("#header-list-quiz-edubit").show();
                                $("#header-quiz-edubit").hide();
                                $("#footer_quiz").hide();
                                $("#footer_edubit_home").show();
                                return _success23.apply(this, arguments);
                            }

                            return success;
                        }(), error: function error(jqXHR, textStatus) {
                            LHM.common.readError(jqXHR);
                            if (!window.save_confirm_test) {
                                localStorage.removeItem("".concat(qid, "_").concat(lid));
                                $('.video-src').html('<div class="main-test">' + '<div class="col-md-12 text-center">' + '<h3>' + __('Cảm ơn bạn đã hoàn thành bài thi') + '</h3>' + '<center>' + '<h4>' + __('Kết quả : Đang xử lý đã có lỗi. xin vui lòng thử lại sau ....') + '</h4>' + '</center>' + '</div>' + '</div>');
                            }
                        }
                    });
                }
            }(datastring_reup);
        },
        nextChildQuiz: function nextChildQuiz(quizId, quizNumber, quizChildCount, parentId) {
            var lid = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';
            var skipConfirm = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'false';
            var dataCustom = {type: 'comprehensive', parent_id: parentId, lesson_id: lid};
            dataCustom.number = parseInt(quizNumber);
            if (skipConfirm === 'false') {
                $.confirm({
                    title: 'Cảnh báo',
                    content: 'Bạn có muốn chuyển sang phần tiếp theo không? <br> <span style="color: red;">*Lưu ý: Bạn sẽ không thể quay lại phần đã chuyển</span>',
                    buttons: {
                        Ok: function Ok() {
                            if (quizId) {
                                dataCustom.child_id = quizId;
                                if (quizNumber < quizChildCount) {
                                    var newNumber = parseInt(quizNumber) + 1;
                                    dataCustom.next_child_number = newNumber;
                                    dataCustom.next_child_id = $('.quiz_child_tab[data-quiz-child-number="' + newNumber + '"]').attr('data-quiz-child-id');
                                }
                                var currentUrl = window.location.href;
                                var re = new RegExp("([?&])" + 'child' + "=.*?(&|$)", "i");
                                var newUrl = '';
                                if (currentUrl.match(re)) {
                                    newUrl = currentUrl.replace(re, '$1' + 'child' + "=" + quizId + '$2');
                                } else {
                                    newUrl = currentUrl + (currentUrl.indexOf('?') !== -1 ? "&" : "?") + 'child' + "=" + quizId;
                                }
                                window.history.replaceState({}, '', newUrl);
                                LHM.quiz.saveDataComprehensive();
                                LHM.quiz.getTest(quizId, lid, "test", null, dataCustom);
                                $('.quiz_child_tab.active').addClass('done').removeClass('active');
                                localStorage.setItem("doneQuizChild", $('.quiz_child_tab.done').map(function () {
                                    return $(this).attr('data-quiz-child-id');
                                }).get().join(','));
                                $('.quiz_child_tab[data-quiz-child-id="' + quizId + '"]').addClass('active');
                            } else {
                                LHM.common.notify(null, 'warning', 'Có lỗi xảy ra');
                            }
                            $('body,html').animate({scrollTop: '#head'}, 1000, 'swing');
                        }, Cancel: function Cancel() {
                        }
                    }
                });
            } else {
                if (quizId) {
                    dataCustom.child_id = quizId;
                    if (quizNumber < quizChildCount) {
                        var newNumber = parseInt(quizNumber) + 1;
                        dataCustom.next_child_number = newNumber;
                        dataCustom.next_child_id = $('.quiz_child_tab[data-quiz-child-number="' + newNumber + '"]').attr('data-quiz-child-id');
                    }
                    var currentUrl = window.location.href;
                    var re = new RegExp("([?&])" + 'child' + "=.*?(&|$)", "i");
                    var newUrl = '';
                    if (currentUrl.match(re)) {
                        newUrl = currentUrl.replace(re, '$1' + 'child' + "=" + quizId + '$2');
                    } else {
                        newUrl = currentUrl + (currentUrl.indexOf('?') !== -1 ? "&" : "?") + 'child' + "=" + quizId;
                    }
                    window.history.replaceState({}, '', newUrl);
                    LHM.quiz.saveDataComprehensive();
                    LHM.quiz.getTest(quizId, lid, "test", null, dataCustom);
                    localStorage.setItem("doneQuizChild", $('.quiz_child_tab.done').map(function () {
                        return $(this).attr('data-quiz-child-id');
                    }).get().join(','));
                    $('.quiz_child_tab.active').addClass('done').removeClass('active');
                    $('.quiz_child_tab[data-quiz-child-id="' + quizId + '"]').addClass('active');
                    $('body,html').animate({scrollTop: '#head'}, 1000, 'swing');
                } else {
                    LHM.common.notify(null, 'warning', 'Có lỗi xảy ra');
                }
            }
        },
        saveDataComprehensive: function saveDataComprehensive() {
            var formData = $('#form-submit-test').serialize();
            var quizId = $('[name="quiz_id"]').val();
            var storedData = JSON.parse(localStorage.getItem("dataComprehensive")) || {};
            if (!storedData.hasOwnProperty(quizId)) {
                storedData[quizId] = formData;
            }
            localStorage.setItem("dataComprehensive", JSON.stringify(storedData));
        },
        saveTest: function () {
            var _saveTest = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(curr, qid, lid, tqi) {
                var user_id, reup, datastring_reup, confirm, show_multi_result, comprehensive_exam, skipObj, txt_noti,
                    startComprehensiveTime, comprehensiveTime, storeComprehensive, _args10 = arguments;
                return _regeneratorRuntime().wrap(function _callee10$(_context10) {
                    while (1) switch (_context10.prev = _context10.next) {
                        case 0:
                            user_id = _args10.length > 4 && _args10[4] !== undefined ? _args10[4] : null;
                            reup = _args10.length > 5 && _args10[5] !== undefined ? _args10[5] : 0;
                            datastring_reup = _args10.length > 6 && _args10[6] !== undefined ? _args10[6] : "";
                            confirm = _args10.length > 7 && _args10[7] !== undefined ? _args10[7] : true;
                            show_multi_result = _args10.length > 8 && _args10[8] !== undefined ? _args10[8] : 0;
                            comprehensive_exam = _args10.length > 9 && _args10[9] !== undefined ? _args10[9] : 0;
                            if (!(show_multi_result == 1)) {
                                _context10.next = 17;
                                break;
                            }
                            _context10.next = 9;
                            return LHM.quiz.checkSkipBeforeSend(curr, qid, lid, tqi);
                        case 9:
                            skipObj = _context10.sent;
                            if (!(skipObj['skip'] > 0)) {
                                _context10.next = 16;
                                break;
                            }
                            txt_noti = __('Bạn không được phép bỏ qua, còn') + '(' + skipObj['skip'] + ')' + __('câu chưa trả lời');
                            LHM.common.notify(null, 'danger', txt_noti);
                            return _context10.abrupt("return", false);
                        case 16:
                            LHM.common.notify(null, 'success', __('Đã làm xong'));
                        case 17:
                            if (confirm) {
                                $.confirm({
                                    title: __('Xác nhận nộp bài'),
                                    columnClass: 'col-md-4',
                                    content: __('Bạn có chắc chắn muốn nộp bài?'),
                                    buttons: {
                                        Ok: function Ok() {
                                            window.save_confirm_test = true;
                                            if (comprehensive_exam) {
                                                LHM.quiz.saveDataComprehensive();
                                                var startComprehensiveTime = localStorage.getItem('start_comprehensive_time');
                                                localStorage.removeItem('start_comprehensive_time');
                                                var comprehensiveTime = 0;
                                                if (startComprehensiveTime) {
                                                    comprehensiveTime = Math.round((new Date().getTime() - startComprehensiveTime) / 1000);
                                                }
                                                var storeComprehensive = JSON.parse(localStorage.getItem('dataComprehensive'));
                                                LHM.quiz.sendAjaxSaveTest(curr, qid, lid, tqi, user_id, reup, datastring_reup, storeComprehensive, comprehensiveTime);
                                            } else {
                                                LHM.quiz.sendAjaxSaveTest(curr, qid, lid, tqi, user_id, reup, datastring_reup);
                                            }
                                        }, cancel: {btnClass: 'btn-blue', text: 'Close'}
                                    }
                                });
                            } else {
                                delete window.save_confirm_test;
                                if (comprehensive_exam) {
                                    LHM.quiz.saveDataComprehensive();
                                    startComprehensiveTime = localStorage.getItem('start_comprehensive_time');
                                    comprehensiveTime = 0;
                                    if (startComprehensiveTime) {
                                        comprehensiveTime = Math.round((new Date().getTime() - startComprehensiveTime) / 1000);
                                    }
                                    storeComprehensive = JSON.parse(localStorage.getItem('dataComprehensive'));
                                    LHM.quiz.sendAjaxSaveTest(curr, qid, lid, tqi, user_id, reup, datastring_reup, storeComprehensive, comprehensiveTime);
                                    localStorage.removeItem('start_comprehensive_time');
                                    localStorage.removeItem('dataComprehensive');
                                    localStorage.removeItem('doneQuizChild');
                                } else {
                                    LHM.quiz.sendAjaxSaveTest(curr, qid, lid, tqi, user_id, reup, datastring_reup);
                                }
                            }
                        case 18:
                        case"end":
                            return _context10.stop();
                    }
                }, _callee10);
            }));

            function saveTest(_x10, _x11, _x12, _x13) {
                return _saveTest.apply(this, arguments);
            }

            return saveTest;
        }(),
        getResult: function getResult(quiz_result_id, tqi) {
            var qid = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
            var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
            $('body').css("background-color", "#fff");
            $('.header-dashboard').css("margin-bottom", "0");
            $('#quiz_edubit_button_submit').hide();
            $('.countdown-time-edubit').hide();
            $("#header-list-quiz-edubit").hide();
            $("#header-quiz-edubit").show();
            $("#footer_quiz").show();
            $("#footer_edubit_home").hide();
            $.ajax({
                url: base_url + '/quiz/getResult',
                type: 'POST',
                data: {quiz_result_id: quiz_result_id, type: type, quiz_id: qid, _token: $.cookie('_token')},
                success: function success(res) {
                    if (res.allow_view_result == 0) {
                        LHM.common.notify(null, 'warning', 'Bạn không được phép xem kết quả');
                        return false;
                    }
                    var html = '', tab = '';
                    const idResult = (res.not_copy && !res.mark_again) ? 'id="result-student" style="user-select: none;"' : '';
                    if (res.success) {
                        if (!res.isPDF) {
                            html += '<div class="main-test full-page-quiz full-page-content-quiz" ' + idResult + '>';
                            html += '<div class="quiz_name" style="margin: 0px;margin-bottom: 20px;"><b>' + __('Bài kiểm tra') + ': ' + res.quiz_title + '</b></div>';
                            html += '<div class="row">';
                            if (res.lib == '') {
                                html += '<div class="col-md-12 col-sm-12">';
                            } else {
                                html += '<div class="col-md-8 col-sm-8">';
                            }
                            if (res.data) {
                                $.each(res.data, function (k, v) {
                                    html += v;
                                });
                            } else {
                                html += '<p class="text-center"><strong>Đang cập nhật ...</strong></p>';
                            }
                            html += '</div>';
                            html += '</div>';
                            html += '</div>';
                        } else {
                            if (res.data && res.data.length > 0) {
                                var quizTr = '';
                                $.each(res.data, function (k, v) {
                                    quizTr += v;
                                });
                                if (res.file_answer) {
                                    tab = "\n                                        <div class=\"d-flex my-3\" style=\"column-gap: 10px\">\n                                            <label><input type=\"radio\" name=\"file_pdf\" data-id=\"load-pdf\" value=\"".concat(res.file_pdf, "\" checked/> File \u0111\u1EC1 thi</label>\n                                            <label><input type=\"radio\" name=\"file_pdf\" data-id=\"load-pdf-answer\" value=\"").concat(res.file_answer, "\" /> File l\u1EDDi gi\u1EA3i</label>\n                                        </div>\n                                    ");
                                }
                                html += "\n                                <div class=\"learn-content-pdf\">\n                                    <div class=\"list-question-pdf\">\n                                        <div class=\"text-uppercase mb-3\">\n                                        ".concat(res.title, "\n                                        </div>\n                                        <div class=\"list-table-question table-responsive\">\n                                            <table class=\"table\">\n                                                <tbody>").concat(quizTr, "</tbody>\n                                            </table>\n                                        </div>\n                                    </div>     \n                                    <div class=\"content-pdf-file\">\n                                        <div class=\"text-uppercase mb-3\">B\xE0i ki\u1EC3m tra: ").concat(res.quiz_title, "</div>\n                                        ").concat(tab, "\n                                        <iframe src=\"").concat(base_url, "/embed/readPdfNew/").concat(encodeURIComponent(res.file_pdf), "#toolbar=0&navpanes=0\" width=\"100%\" height=\"400px\"></iframe>\n                                    </div>                  \n                                </div>\n                            ");
                            } else {
                                html += "\n                                    <div>\n                                        <div class=\"text-uppercase mb-3\">B\xE0i ki\u1EC3m tra: ".concat(res.quiz_title, "</div>\n                                        <p><strong>\u0110ang c\u1EADp nh\u1EADt ...</strong></p>\n                                    </div> \n                                ");
                            }
                        }
                    } else {
                        html += '<p class="text-center"><strong>Đang cập nhật ...</strong></p>';
                    }
                    if (type === 'comprehensive') {
                        if (res.lib) {
                            html += "<a href=\"".concat(base_url, "/video/").concat(res.course.code, "#").concat(res.lib, "\" id=\"view_result_test\" class=\"btn btn-primary btn-large\" ><< Tr\u1EDF l\u1EA1i b\xE0i h\u1ECDc</a>");
                        }
                    } else {
                        html += '<button type="button" id="view_result_test" class="btn btn-primary btn-large" onclick="LHM.quiz.checkCompleteTest(\'' + res.qid + '\',\'' + res.lib + '\',\'' + tqi + '\',\'' + res.user_id + '\');"><< '+ __('Trở lại') +'</button>';
                    }
                    if(res.show_list_question && res.lib) {
                        html += '<i class="fas fa-bars px-3" id="btn-menu-bar"></i>';
                    }
                    if(res.show_list_question && res.lib) {
                        html += '<div class="col-12 col-md-3 content-info-list-quiz wrap-quiz-question" id="mydiv_list_quiz">';
                        html += '<div id="box-list-page-quiz">';
                        html += '<div class="quiz_name quiz_name_left">' + __('Câu hỏi') + '</div>';
                        html += '<div class="list-button-quiz">';
                        for (var i = 0; i < res.data.length; i++) {
                            if (i == 0) {
                                html += '<button class="btn page_list_quiz_button active" value="' + i + '" data-id="div_block_quiz_test_' + i + '"><a style="color:#333;">' + (i + 1) + '</a></button>';
                            } else {
                                html += '<button class="btn page_list_quiz_button" value="' + i + '" data-id="div_block_quiz_test_' + i + '"><a style="color:#333;">' + (i + 1) + '</a></button>';
                            }
                        }
                        html += '</div>';
                        html += '</div>';
                        html += '<label class="show_view_page_quiz"><i class="fa fa-ellipsis-h"></i></label>';
                        html += '</div>';
                    }
                    $('.video-src').html(html);

                    //đóng mở sitebar
                    $('#btn-menu-bar').click(function () {
                        var wrapListQuiz = $('.wrap-quiz-question');
                        if (wrapListQuiz.css('left') === '-400px') {
                            wrapListQuiz.animate({ left: '0px' }, 500); // Trượt vào màn hình
                        } else {
                            wrapListQuiz.animate({ left: '-400px' }, 500); // Trượt ra ngoài màn hình
                        }
                    });
                    $('.main-test').click(function () {
                        var wrapListQuiz = $('.wrap-quiz-question');
                        if (wrapListQuiz.css('left') === '0px') {
                            wrapListQuiz.animate({ left: '-400px' }, 500); // Trượt ra ngoài màn hình
                        }
                    });
                    if (tab !== '') {
                        $('input[name="file_pdf"]').click(function () {
                            var id = $(this).attr('data-id'), val = $(this).val();
                            $(".content-pdf-file iframe").hide();
                            if ($(".content-pdf-file #".concat(id)).length === 0) {
                                if (/\.pdf$/.test(val)) {
                                    $(".content-pdf-file").append("<iframe src=\"".concat(base_url, "/embed/readPdfNew/").concat(encodeURIComponent(val), "#toolbar=0&navpanes=0\" width=\"100%\" height=\"400px\"></iframe>"));
                                } else {
                                    $(".content-pdf-file").append("<iframe id=\"".concat(id, "\" src=\"").concat(base_url, "/embed/loadPDFTron?file=").concat(val, "\"></iframe>"));
                                }
                            } else {
                                $(".content-pdf-file #".concat(id)).show();
                            }
                        });
                    }
                    $('footer').remove();
                    if(idResult) {
                        setTimeout(function () {
                            if (typeof document.onselectstart != "undefined") {
                                $('#result-student').on('selectstart', function (event) {
                                    event.preventDefault();
                                });
                            } else {
                                $('#result-student').on('mousedown', function (event) {
                                    event.preventDefault();
                                });
                            }
                        }, 200)
                    }
                    
                    MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                    if (res.show_list_question && res.lib) {
                        $('#header-quiz-edubit').css('margin-bottom', '0px');
                        $('.container').css('margin', '0px');
                        $('#mydiv_list_quiz .list-button-quiz button.page_list_quiz_button').click(function () {
                            $('#mydiv_list_quiz .list-button-quiz button.page_list_quiz_button').removeClass('active');
                            $(this).addClass('active');
                            var first = $('.list-button-quiz button.page_list_quiz_button:first').data('id');
                            var last = $('.list-button-quiz button.page_list_quiz_button:last').data('id');
                            var current = $(this).data('id');
                            if (res.view_sequen_quiz_test) {
                                $('#form-submit-test').find('.block-quiz-test').hide();
                                $("#".concat(current)).show();
                                $('.back_page_quiz,.next_page_quiz').show();
                                if (current === first) {
                                    $('.back_page_quiz').hide();
                                } else if (current === last) {
                                    $('.next_page_quiz').hide();
                                }
                            } else {
                                var document_div = $("#".concat(current));
                                if (document_div.length) {
                                    var scrollContainer = $('.main-test');
                                    // Tính toán vị trí cuộn chính xác
                                   var targetPosition = document_div.offset().top - scrollContainer.offset().top + scrollContainer.scrollTop();
                                   scrollContainer.animate({scrollTop: targetPosition}, 1000, 'swing');
                                }
                            }
                        });
                    } 
                }
            });
        },
        viewQuizResult: function viewQuizResult(quiz_result_id) {
            var survey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var mark_again = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
            $.confirm({
                title: "Kết quả kiểm tra - Đúng:  Sai:  Bỏ qua: ",
                columnClass: 'col-md-12',
                content: function content() {
                    var self = this;
                    return $.ajax({
                        url: base_url + '/quiz/getResult',
                        type: 'POST',
                        data: {quiz_result_id: quiz_result_id, survey: survey, _token: $.cookie('_token')}
                    }).done(function (res) {
                        var html = '', tab = '';
                        const idResult = (res.not_copy && !res.mark_again) ? 'id="result-student" style="user-select: none"' : ''
                        if (res.success) {
                            var drag_class = '', percent_note = '';
                            if (res.lid) {
                                drag_class = 'detail-quiz-test-result';
                            } else {
                                drag_class = 'detail-quiz-course-result';
                            }
                            if (typeof res.percent_complete !== 'undefined') {
                                percent_note = "<br/>\n                                        <span class=\"text-danger\">".concat(__('Điểm đạt của đề thi đã thay đổi, bạn muốn chấm lại thay đổi điểm đạt theo'), ":</span><br/>\n                                        <div class=\"d-flex\" style=\"column-gap: 20px\">\n                                            <label>\n                                                <input type=\"radio\" name=\"type-percent\" value=\"test\" checked/> ").concat(__('Đề thi'), " (").concat(res.percent_complete_test, "%)\n                                            </label>\n                                            <label>\n                                                <input type=\"radio\" name=\"type-percent\" value=\"result\"/> ").concat(__('Bài thi'), " (").concat(res.percent_complete, "%)\n                                            </label>\n                                        </div>\n                                    ");
                            }
                            html = "\n                                    <div class=\"main-test ".concat(drag_class, "\" style=\"overflow:hidden;\">\n                                    <div class=\"quiz_name\" style=\"margin: 0px;margin-bottom: 20px;\">\n                                        <b> ").concat(__('Bài kiểm tra'), ": ").concat(res.quiz_title, "</b>\n                                        ").concat(percent_note, "\n                                    </div>\n                                ");
                            if (!res.isPDF) {
                                if (!res.lid) {
                                    html += '<div class="col-md-12 col-sm-12" '+idResult+'>';
                                } else {
                                    html += '<div class="col-md-8 col-sm-8" '+idResult+'>';
                                }
                                if (res.data) {
                                    $.each(res.data, function (k, v) {
                                        html += v;
                                    });
                                } else {
                                    html += '<p class="text-center"><strong>' + __('Đang cập nhật ...') + '</strong></p>';
                                }
                                html += '</div>';
                                html += '</div>';
                            } else {
                                if (res.data && res.data.length > 0) {
                                    var quizTr = '';
                                    $.each(res.data, function (k, v) {
                                        quizTr += v;
                                    });
                                    if (res.file_answer) {
                                        tab = "\n                                        <div class=\"d-flex my-3\" style=\"column-gap: 10px\">\n                                            <label><input type=\"radio\" name=\"file_pdf\" data-id=\"load-pdf\" value=\"".concat(res.file_pdf, "\" checked/> ").concat(__('File đề thi'), "</label>\n                                            <label><input type=\"radio\" name=\"file_pdf\" data-id=\"load-pdf-answer\" value=\"").concat(res.file_answer, "\" /> ").concat(__('File lời giải'), "</label>\n                                        </div>\n                                    ");
                                    }
                                    html += "\n                                           <style> .jc-bs3-container { max-width: 95% !important;}</style>\n                                        <link rel=\"stylesheet\" href=\"/statics/css/quiz.css?v=1.3.2\">\n                                        <div class=\"learn-content-pdf\">\n                                            <div class=\"list-question-pdf\">\n                                                <div class=\"text-uppercase mb-3\">\n                                                ".concat(__('Phiếu trả lời'), "\n                                                </div>\n                                                <div class=\"list-table-question table-responsive\">\n                                                    <table class=\"table\">\n                                                        <tbody>").concat(quizTr, "</tbody>\n                                                    </table>\n                                                </div>\n                                            </div>     \n                                            <div class=\"content-pdf-file\">\n                                                <div class=\"text-uppercase mb-3\">").concat(__('Bài kiểm tra'), ": ").concat(res.quiz_title, "</div>\n                                                ").concat(tab, "\n                                                <iframe id=\"load-pdf\" src=\"").concat(base_url, "/embed/loadPDFTron?file=").concat(res.file_pdf, "\"></iframe>\n                                            </div>                  \n                                        </div>\n                                    ");
                                } else {
                                    html += "\n                                        <div>\n                                            <div class=\"text-uppercase mb-3\">".concat(__('Bài kiểm tra'), ": ").concat(res.quiz_title, "</div>\n                                            <p><strong>").concat(__('Đang cập nhật ...'), "</strong></p>\n                                        </div> \n                                    ");
                                }
                            }
                        } else {
                            html = __('Không tìm thấy kết quả');
                        }
                        self.setTitle(res.title);
                        self.setContent(html);
                    }).always(function (res) {
                        if (res.success) {
                            if (!res.mark_test_text || !mark_again) {
                                $('.btn-mark-test-text').remove();
                            }
                            if (!res.mark_again || !mark_again) {
                                $('.btn-mark-again').remove();
                            }
                        } else {
                            $('.btn-mark-test-text, .btn-mark-again').remove();
                        }
                    });
                },
                buttons: {
                    Ok1: {
                        text: __('Chấm tự luận'),
                        btnClass: 'btn-blue btn-mark-test-text display-none',
                        action: function action() {
                            LHM.quiz.updateTestStudentLink(quiz_result_id);
                        }
                    },
                    Ok: {
                        text: __('Chấm lại'),
                        btnClass: 'btn-blue btn-mark-again display-none',
                        action: function action() {
                            var type_percent = '';
                            if ($('input[name=type-percent]').length) {
                                type_percent = $('input[name=type-percent]:checked').val();
                            }
                            $.ajax({
                                type: 'POST',
                                url: base_url + '/quiz/saveTestAgain',
                                data: {
                                    quiz_result_id: quiz_result_id,
                                    type_percent: type_percent,
                                    _token: $.cookie('_token')
                                },
                                dataType: 'json',
                                success: function success(rs) {
                                    if (rs.success) {
                                        LHM.common.notify(null, 'success', __('Chấm điểm thành công'));
                                        setTimeout(function () {
                                            LHM.mnDashboard.getAllResult(0);
                                        }, 1000);
                                    } else {
                                        LHM.common.notify(null, 'warning', rs.ms ? rs.ms : __('Chấm điểm thất bại'));
                                    }
                                }
                            });
                        }
                    },
                    cancel: {text: __('Đóng lại')}
                },
                onContentReady: function onContentReady() {
                    MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                    $('input[name="file_pdf"]').click(function () {
                        var id = $(this).attr('data-id'), val = $(this).val();
                        $(".content-pdf-file iframe").hide();
                        if ($(".content-pdf-file #".concat(id)).length === 0) {
                            $(".content-pdf-file").append("<iframe id=\"".concat(id, "\" src=\"").concat(base_url, "/embed/loadPDFTron?file=").concat(val, "\"></iframe>"));
                        } else {
                            $(".content-pdf-file #".concat(id)).show();
                        }
                    });
                    if($('#result-student').length) {
                        setTimeout(function () {
                            if (typeof document.onselectstart != "undefined") {
                                $('#result-student').on('selectstart', function (event) {
                                    event.preventDefault();
                                });
                            } else {
                                $('#result-student').on('mousedown', function (event) {
                                    event.preventDefault();
                                });
                            }
                        }, 200)
                    }
                }
            });
        },
        viewListResult: function viewListResult(qid, uid, lid) {
            var byUser = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';
            $.alert({
                title: "Danh sách kết quả thi", columnClass: 'container', content: function content() {
                    var self = this;
                    return $.ajax({
                        url: base_url + '/quiz/getListResult',
                        type: 'GET',
                        data: {lid: lid, qid: qid, uid: uid, byUser: byUser}
                    }).done(function (res) {
                        var html = "";
                        html += '    <div class="table-responsive">';
                        html += '    <table class="table bg-white">';
                        html += '<thead>';
                        html += '    <tr class="filters ">';
                        html += '        <th>#</th>';
                        html += '        <th style="min-width: 80px">' + __('Bỏ qua') + '</th>';
                        html += '        <th style="min-width: 80px">' + __('Câu sai') + '</th>';
                        html += '        <th style="min-width: 90px">' + __('Câu đúng') + '</th>';
                        html += '        <th style="min-width: 100px">' + __('Kết quả') + '</th>';
                        html += '        <th style="min-width: 100px">' + __('Thi lúc') + '</th>';
                        html += '        <th style="min-width: 150px">' + __('Thời gian làm bài') + '</th>';
                        html += '    </tr>';
                        html += '</thead>';
                        html += '<tbody>';
                        if (res.check_data) {
                            $.each(res.data, function (k, v) {
                                if (v.status_origin == 1) var status_result = 'bg-success'; else var status_result = 'bg-danger';
                                html += '<tr>';
                                html += '<td>' + v.stt + '</td>';
                                html += '<td>' + v.skip + '</td>';
                                html += '<td>' + v.fail + '</td>';
                                html += '<td>' + v.correct + '</td>';
                                if (v.link_result) {
                                    html += "<td><a href=\"".concat(v.link_result, "\" target=\"_blank\" class=\"color-while bg-result-test cursor-pointer ").concat(status_result, "\" title=\"").concat(status, "\">").concat(v.point, "</a></td>");
                                } else {
                                    html += '<td><span title="' + v.status + '" class="' + status_result + ' bg-result-test">' + v.point + '</span></td>';
                                }
                                html += '<td>' + v.time_join + '</td>';
                                html += '<td>' + v.time + '</td>';
                                html += '</tr>';
                            });
                        } else {
                            html += '<tr>Không có dữ liệu</tr>';
                        }
                        html += '</tbody></table></div>';
                        self.setContent(html);
                    }).fail(function () {
                    }).always(function () {
                    });
                }, onContentReady: function onContentReady() {
                    MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                }
            });
        },
        viewListResultByUserIdQuizId: function viewListResultByUserIdQuizId(qid, uid, lid) {
            $.alert({
                title: "Danh sách kết quả thi", columnClass: 'col-md-12', content: function content() {
                    var self = this;
                    return $.ajax({
                        url: base_url + '/quiz/getListResult',
                        type: 'GET',
                        data: {lid: lid, qid: qid, uid: uid}
                    }).done(function (res) {
                        if (res) {
                            var html = "<div class=\"table-responsive\"><div class=\"table-responsive\"><table class=\"table bg-white\"><thead><tr class=\"filters \"><th>STT</th><th>C\xE2u sai</th><th>C\xE2u \u0111\xFAng</th><th>K\u1EBFt qu\u1EA3</th><th>Thi l\xFAc</th><th>Th\u1EDDi gian l\xE0m b\xE0i</th><th>Chi ti\u1EBFt</th></tr></thead><tbody>";
                            if (res.check_data) {
                                $.each(res.data, function (k, v) {
                                    var status_result = 'bg-danger';
                                    if (v.status_origin == 1) status_result = 'bg-success';
                                    var link_view = "<button class=\"btn btn-success\" onclick=\"LHM.quiz.viewQuizResult('".concat(v.quiz_result_id, "')\">Chi ti\u1EBFt <i class=\"fas fa-eye\"></i> </button>");
                                    if (v.link_result) {
                                        link_view = "<a href=\"".concat(v.link_result, "\" target=\"_blank\">Chi ti\u1EBFt <i class=\"fas fa-eye\"></i></a>");
                                    }
                                    html += "<tr>\n                                            <td>".concat(v.stt, "</td>\n                                            <td>").concat(v.fail, "</td>\n                                            <td>").concat(v.correct, "</td>\n                                            <td><span title=\"").concat(v.status, "\" class=\"").concat(status_result, " bg-result-test\">").concat(v.point, "</span></td>\n                                            <td>").concat(v.time_join, "</td>\n                                            <td>").concat(v.time, "</td>\n                                            <td>").concat(link_view, "</td>\n                                        </tr>\n                                        ");
                                });
                            } else {
                                html += '<tr>Không có dữ liệu</tr>';
                            }
                            html += '</tbody></table></div>';
                            self.setContent(html);
                        }
                    }).fail(function () {
                    }).always(function () {
                    });
                }/*onContentReady: function () {
                    MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                }*/
            });
        },
        getRankLesson: function getRankLesson(qid, lid, tqi) {
            $.ajax({
                url: base_url + '/quiz/getRankLesson',
                type: 'POST',
                data: {lid: lid, qid: qid, _token: $.cookie('_token')},
                success: function success(res) {
                    var html = '<div class="main-test">';
                    html += '<div class="row">';
                    html += '<a style="margin-left: 15px;font-size: 20px;margin-bottom: 15px;" href="javascript:void(0);" onclick="LHM.quiz.checkCompleteTest(\'' + qid + '\',\'' + lid + '\',\'' + tqi + '\');"><i class="fa fa-angle-left"></i> ' + __('Quay lại') + '</a>';
                    html += '<div class="col-md-12 col-sm-12">';
                    html += res;
                    html += '</div>';
                    html += '</div>';
                    html += '</div>';
                    $('.video-src').html(html);
                    document.getElementById("content-course-list").style.backgroundColor = "#fff";
                }
            });
        },
        updateTestStudentLink: function updateTestStudentLink(quiz_result_id, call_back) {
            $.confirm({
                title: 'Cập nhật điểm bài tự luận cho học viên',
                columnClass: 'col-md-12',
                type: 'blue',
                content: function content() {
                    var self = this;
                    return $.ajax({
                        url: base_url + '/quiz/get_test_text',
                        data: {quiz_result_id: quiz_result_id},
                        type: 'GET',
                        success: function success(res) {
                            if (res.login && res.login == 1) {
                                if (res.success) {
                                    var html = '', percent_note = '';
                                    if (res.percent_complete) {
                                        percent_note = "<div><span class=\"text-danger\">Điểm đạt của đề thi đã thay đổi, bạn muốn lấy điểm đạt theo:</span><br/><div class=\"d-flex\" style=\"column-gap: 20px\"><label><input type=\"radio\" name=\"type-percent\" value=\"test\" checked/> Đề thi (".concat(res.percent_complete_test, "%)</label><label><input type=\"radio\" name=\"type-percent\" value=\"result\"/> Bài thi (").concat(res.percent_complete, "%)</label></div></div>");
                                    }
                                    html += '<div class="lesson-test"><strong>Đề thi:</strong> ' + res.test_name + '</div>';
                                    html += '<form id="update-test-text-link" class="word-wrap">' + percent_note;
                                    if (res.send_mail_student_result) {
                                        html += '<div class="form-check">' + ' <input type="checkbox" name="send_mail_student_result" class="form-check-input" id="send_mail_student_result">' + '<label class="form-check-label" for="send_mail_student_result">Gửi mail thông báo điểm cho học viên</label>' + '</div>';
                                    }
                                    html += '<br>';
                                    $.each(res.data, function (k, v) {
                                        if (v.title) {
                                            html += '<div class="question-phrase"><strong>Câu hỏi: </strong>' + v.title + '</br>' + v.question + '</div>';
                                        } else {
                                            html += '<div class="question-phrase"><strong>Câu hỏi:</strong> ' + v.question + '</div>';
                                        }
                                        html += '<div class="question-answer"><strong>Câu trả lời:</strong> ' + v.answer + '</div>';
                                        if (res.count_word) {
                                            html += '<div class="question-answer"><strong>Số từ đếm được:</strong> ' + v.answer.split(/\s+/).length + '</div></br>';
                                        }
                                        if (v.shared_link != '') {
                                            html += '<div class="question-answer mb-1"><strong>Link câu trả lời:</strong><a href="' + v.shared_link + '" target="_blank"> xem</a></div>';
                                            if (/\.(mp3|mp4)$/.test(v.shared_link)) {
                                                html += '<embed width="300" height="180" src="' + v.shared_link + '" controls></embed></br>';
                                            }
                                        }
                                        html += '<div class="question-answer"><strong>Gợi ý đáp án:</strong> ' + v.note + '</div>';
                                        html += '<label><strong>Chấm điểm câu trả lời:</strong> </label></br>';
                                        if (res.mark_new) {
                                            html += "\n                                                <div class=\"input-group mb-2\" style=\"max-width: 200px\">\n                                                  <input type=\"number\" class=\"form-control\" value=\"".concat(v.score, "\" min=\"0\" name=\"result[").concat(v._id, "]\">\n                                                  <div class=\"input-group-append\">\n                                                    <span class=\"input-group-text\">/").concat(v.score_max, " \u0111i\u1EC3m</span>\n                                                  </div>\n                                                </div>\n                                                ");
                                        } else {
                                            html += '<div class="form-group form-check form-check-inline">' + '<input class="form-check-input" type="radio" name="result[' + v._id + ']" id="answer_true_' + v._id + '" value="1" ' + v.correct + '>' + '<label class="form-check-label" for="answer_true_' + v._id + '">' + 'Đúng' + '</label>' + '</div>' + '<div class="form-group form-check form-check-inline">' + '<input class="form-check-input" type="radio" id="answer_false_' + v._id + '" name="result[' + v._id + ']" value="0" ' + v.fail + '>' + '<label class="form-check-label" for="answer_false_' + v._id + '">' + 'Sai' + '</label>' + '</div></br>';
                                        }
                                        html += '<div class="form-group">' + '<textarea id="review_teacher" class="form-control" cols="66" name="review_teacher[' + v._id + ']" rows="5" placeholder="Nhận xét của giảng viên">' + v.review + '</textarea>' + '</div>';
                                    });
                                    html += '<div class="invalid-feedback"></div>';
                                    html += '</form>';
                                    self.setContent(html);
                                } else {
                                    self.buttons.formSubmit.hide();
                                    self.setContent('<p class="text-danger">Đã xảy ra lỗi! Vui lòng thử lại sau</p>');
                                }
                            } else if (res.login && res.login == 2) {
                                window.location = res.href;
                            }
                        }
                    });
                },
                onContentReady: function onContentReady() {
                    MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                },
                buttons: {
                    formSubmit: {
                        text: 'Cập nhật',
                        btnClass: 'btn-blue btn-send-invite',
                        action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').html('');
                            var form = $('#update-test-text-link').serialize() + '&_token=' + $.cookie('_token') + '&quiz_result_id=' + quiz_result_id;
                            $.post('/quiz/update_test_text', form, function (rs) {
                                if (rs.login && rs.login == 1) {
                                    if (!rs.error) {
                                        _this.close();
                                        LHM.common.notify(null, 'success', 'Cập nhật điểm thành công');
                                        if (call_back) {
                                            call_back(rs);
                                        } else {
                                            $('#list_all_result_filter_submit').click();
                                        }
                                    } else {
                                        LHM.common.notify(null, 'danger', rs.msg);
                                    }
                                } else if (rs.login && rs.login == 2) {
                                    window.location = rs.href;
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        },
        updateTestStudent: function updateTestStudent(lid, qid, uid, cid) {
            $.confirm({
                title: 'Cập nhật điểm bài tự luận cho học viên',
                columnClass: 'col-md-8',
                type: 'blue',
                content: function content() {
                    var self = this;
                    return $.ajax({
                        url: base_url + '/quiz/get_test_text',
                        data: {lid: lid, uid: uid},
                        type: 'GET',
                        success: function success(res) {
                            if (res.login && res.login == 1) {
                                if (res.success) {
                                    var html = '';
                                    html += '<div class="user-test"><strong>Học viên:</strong> ' + $('#' + uid).attr('data-name') + '</div</br>';
                                    html += '<div class="lesson-test"><strong>Đề thi:</strong> ' + $('#' + qid).attr('data-name') + '</div></br>';
                                    html += '<form id="update-test-text">';
                                    $.each(res.data, function (k, v) {
                                        html += '<div class="question-phrase"><strong>Câu hỏi:</strong> ' + v.question + '</div></br>';
                                        html += '<div class="question-answer"><strong>Câu trả lời:</strong> ' + v.answer + '</div></br>';
                                        if (res.count_word) {
                                            html += '<div class="question-answer"><strong>Số từ đếm được:</strong> ' + v.answer.split(/\s+/).length + '</div></br>';
                                        }
                                        if (v.shared_link != '') {
                                            html += '<div class="question-answer"><strong>Link video:</strong><p><a href="' + v.shared_link + '">' + v.shared_link + '</a></p></div>';
                                            html += '<video class="embed-dropbox-video" width="300" height="180" src="' + v.embed_shared_link + '" controls></video></br>';
                                        }
                                        html += '<label><strong>Chấm điểm câu trả lời:</strong> </label></br>';
                                        html += '<div class="form-group form-check form-check-inline">' + '<input class="form-check-input" type="radio" name="result[' + v._id['$id'] + ']" id="answer_true_' + v._id['$id'] + '" value="1" ' + v.correct + '>' + '<label class="form-check-label" for="answer_true_' + v._id['$id'] + '">' + 'Đúng' + '</label>' + '</div>' + '<div class="form-group form-check form-check-inline">' + '<input class="form-check-input" type="radio" id="answer_false_' + v._id['$id'] + '" name="result[' + v._id['$id'] + ']" value="0" ' + v.fail + '>' + '<label class="form-check-label" for="answer_false_' + v._id['$id'] + '">' + 'Sai' + '</label>' + '</div></br>';
                                        html += '<div class="form-group">' + '<textarea id="review_teacher" class="form-control" cols="66" name="review_teacher[' + v._id['$id'] + ']" rows="5" placeholder="Nhận xét của giảng viên">' + v.review + '</textarea>' + '</div>';
                                    });
                                    html += '<div class="invalid-feedback"></div>';
                                    html += '</form>';
                                    self.setContent(html);
                                } else {
                                    self.buttons.formSubmit.hide();
                                    self.setContent('<p class="text-danger">Đã xảy ra lỗi! Vui lòng thử lại sau</p>');
                                }
                            } else if (res.login && res.login == 2) {
                                window.location = res.href;
                            }
                        }
                    });
                },
                onContentReady: function onContentReady() {
                    MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
                },
                buttons: {
                    formSubmit: {
                        text: 'Cập nhật',
                        btnClass: 'btn-blue btn-send-invite',
                        action: function action() {
                            var _this = this;
                            _this.$content.find('.invalid-feedback').html('');
                            var form = $('#update-test-text').serialize() + '&_token=' + $.cookie('_token') + '&qid=' + qid + '&lid=' + lid;
                            $.post('/quiz/update_test_text', form, function (rs) {
                                if (rs.login && rs.login == 1) {
                                    if (!rs.error) {
                                        LHM.mnDashboard.getTestResult(0, uid, cid);
                                        _this.close();
                                        LHM.common.notify(null, 'success', 'Cập nhật điểm thành công');
                                    } else {
                                        _this.$content.find('.invalid-feedback').html('<p class="text-danger">' + rs.msg + '</p>');
                                        _this.$content.find('.invalid-feedback').show();
                                    }
                                } else if (rs.login && rs.login == 2) {
                                    window.location = rs.href;
                                }
                            });
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        },
        updateQuizTestNum: function updateQuizTestNum(data) {
            $.ajax({
                url: '/quiz/updateQuizTestNum',
                type: 'POST',
                data: {quiz_ids: data, _token: $.cookie('_token')},
                success: function success(res) {
                    if (res.status) {
                        LHM.common.notify(null, 'success', res.message, 'col-md-2');
                    } else {
                        LHM.common.notify(null, 'danger', res.message);
                    }
                }
            });
        },
        removeTestResult: function removeTestResult(curr, result_id) {
            $.confirm({
                title: 'Xác nhận',
                content: 'Bài làm của học viên này sẽ bị xóa, bạn có muốn tiếp tục?',
                buttons: {
                    Ok: function Ok() {
                        LHM.common.callAjax('/quiz/removeTestResult', 'POST', {
                            _token: $.cookie('_token'),
                            itemId: result_id
                        }, function () {
                            $(curr).closest('tr').find('.viewQuizResult').html('<span class="badge badge-danger">Đã xóa</span>');
                        });
                    }, Cancel: {'text': 'Đóng'}
                }
            });
        },
        saveVideoFileUpload: function saveVideoFileUpload(curr, file) {
            $.ajax({
                type: 'POST',
                url: base_url + '/quiz/saveVideoFileUpload',
                data: {
                    _token: $.cookie('_token'),
                    file_name: file.name,
                    file_rename: file.rename,
                    file_size: file.size,
                    file_type: file.type,
                    file_dropbox_shared_link: file.dropbox_shared_link
                },
                dataType: 'json',
                success: function success(res) {
                    if (res.login && res.login == 1) {
                        $(curr).parent().find('.old-video-id').val(res.id);
                    } else if (res.login && res.login == 2) {
                        window.location = res.href;
                    }
                }
            });
        },
        getDropboxSharedLink: function getDropboxSharedLink(curr, file, site_id, dropbox_token) {
            var dbx = new Dropbox.Dropbox({accessToken: dropbox_token});
            dbx.sharingCreateSharedLinkWithSettings({
                path: '/' + site_id + '/' + file.rename,
                settings: {requested_visibility: 'public', audience: 'public', access: 'viewer'}
            }).then(function (response) {
                $(curr).parent().find('.dropbox-shared-link').val(response.result.url);
                file.dropbox_shared_link = response.result.url;
                LHM.quiz.saveVideoFileUpload(curr, file);
            })["catch"](function (error) {
                console.log(error);
            });
        },
        deleteDropboxOldFile: function deleteDropboxOldFile(current, file_id, filename, type, site_id, dropbox_token) {
            if (type == 1) {
                var dbx = new Dropbox.Dropbox({accessToken: dropbox_token});
                dbx.filesDeleteV2({path: '/' + site_id + '/' + filename}).then(function (response) {
                    if (file_id != '') {
                        LHM.quiz.removeOldFile(file_id, filename, site_id, dropbox_token);
                    }
                })["catch"](function (error) {
                    console.log(error);
                });
            } else {
                $.confirm({
                    title: 'Xóa file', content: 'Bạn có muốn xóa file này?', buttons: {
                        Ok: function Ok() {
                            if (file_id != '') {
                                LHM.quiz.removeOldFile(file_id, filename, site_id, dropbox_token);
                                $(current).closest("tr").remove();
                                if ($('#get_files_in_library tbody tr').length == 0) {
                                    $('#get_files_in_library table tbody').html('<tr><td colspan="5">Không có dữ liệu</td></tr>');
                                }
                            }
                        }, Cancel: function Cancel() {
                        }
                    }
                });
            }
        },
        removeOldFile: function removeOldFile(file_id, filename, site_id, dropbox_token) {
            var val_post = {_token: $.cookie('_token'), _id: file_id};
            $.ajax({
                type: 'POST',
                url: base_url + '/quiz/removeOldFile',
                data: val_post,
                dataType: 'json',
                success: function success(_success24) {
                    if (_success24.login && _success24.login == 1) {
                        var dbx = new Dropbox.Dropbox({accessToken: dropbox_token});
                        dbx.filesDeleteV2({path: '/' + site_id + '/' + filename}).then(function (response) {// LHM.common.notify(null, 'success', 'Xóa thành công');
                        })["catch"](function (error) {// LHM.common.notify(null, 'danger', 'Xóa không thành công');
// console.log(error);
                        });
                        LHM.common.notify(null, 'success', 'Xóa thành công');
                    } else if (_success24.login && _success24.login == 2) {
                        window.location = _success24.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }
    }, sites: {
        init: function init(callback, datapage) {//open dialog choice file
            var _this;
            $('.btn-upload').on('click', function () {
                _this = this;
                window.upload_type = $(this).data('type');
                $('#upload-file').trigger('click');
            });
            $('.btn-addyoutube').on('click', function () {
                _this = this;
                var url = $('#url-youtube').val();//hidden msg
                $(this).parents('.url-youtube').find('.invalid-feedback').hide();
                var data = {url: url, video_duration: $('#video_duration_yb').val(), _token: $.cookie('_token')};//data at some page
                if (datapage) data.datapage = datapage;
                $.post(base_url + '/uploader/addyoutube', data, function (rs) {
                    if (rs.error) {
                        for (var i in rs.msg) {
                            var error = '';
                            for (var i in rs.msg) {
                                error += rs.msg[i] + '<br>';
                            }
                            $(_this).parents('.url-youtube').find('.invalid-feedback').html(error).show();
                        }
                    } else {
                        $('#url-youtube').val('');
                        LHM.common.notify(null, 'success', 'Thêm thành công!');
                        callback(rs.data);
                    }
                });
            });//listen upload
            $('#upload-file').bind('fileuploadsubmit', function (e, data) {
                var formData = {_token: $.cookie('_token'), type: window.upload_type};
                data.formData = formData;
                data.url = base_url + '/sites/import_excel_user';
            }).fileupload({autoUpload: true}, 'option', {
                maxChunkSize: 10000000 / 10,// 5 MB
                maxRetries: 10, retryTimeout: 500, dropZone: null//acceptFileTypes: /(\.|\/)(gif|jpe?g|png|jpg|3gp|asf|avi|mp4|mov|vob|wmv|mp3|pdf|docx|doc|xls|xlsx|ppt)$/i
            }).bind('fileuploadadd', function (e, data) {
                $('.add_user_excel').find('#upload_import_user').removeClass('btn-upload');
                $('.add_user_excel').find('#upload_import_user').unbind('click');
                $('.add_user_excel').find('.btn-blue').text('Đang tạo');//hidden btn upload
            }).bind('fileuploaddone', function (e, data) {
                $('#v-pills-student-registed-tab').trigger('click');
                if (data.result.error) {
                    for (var i in data.result.msg) {
                        LHM.common.notify(null, 'warning', data.result.msg[i]);
                    }
                } else {
                    LHM.common.notify('', 'success', data.result.msg);
                }
                $(_this).show();
                if (data.result.check_file) {
                    $('.add_user_excel').find('.btn-blue').text('OK');
                    $('.add_user_excel').find('#upload_import_user').addClass('btn-upload');
                    $('.add_user_excel').find('#upload_import_user').bind('click', function () {
                        _this = this;
                        window.upload_type = $(this).data('type');
                        $('#upload-file').trigger('click');
                    });
                } else {
                    $('.btn-default').click();
                }//show btn upload
            }).bind('fileuploadprogress', function (e, data) {
                var uploadpercent = data._progress.loaded / data._progress.total;
                uploadpercent = Math.round(uploadpercent * 100);
                var thisprogress = $(_this).parent().find('.progressing-bar');
                var html = '<div class="progress">' + '<div class="progress-bar" role="progressbar" style="width: ' + uploadpercent + '%;" aria-valuenow="' + uploadpercent + '" aria-valuemin="0" aria-valuemax="100">' + uploadpercent + '%</div>' + '</div>';
                thisprogress.html(html);
                if (uploadpercent == 100) {
                    thisprogress.html('');
                }
            });//listen choice file tab library on uploader
            $('.btn-addfiletolesson').on('click', function () {
                var fileschecked = $('#uploader #library tbody input[name=f]:checked');
                var optionlib = $('#uploader #library input[name=optionlib]:checked');
                var datafile = [];
                $.each(fileschecked, function () {
                    var file = {'fid': $(this).val(), 'url': $(this).data('url')};
                    if (optionlib.length) file.attachorvideo = optionlib.val();
                    datafile.push(file);
                });
                callback(datafile);
                setTimeout(function () {
                    LHM.lessons.list_lessons();
                });
            });
        }, removeTag: function removeTag(id_tag) {
            var val_post = {_token: $.cookie('_token'), id_tag: id_tag};
            $.confirm({
                title: 'Thông báo', content: 'Bạn có muốn xóa tag này?', buttons: {
                    Ok: function Ok() {
                        $.ajax({
                            type: 'POST',
                            url: base_url + '/sites/remove_tag',
                            data: val_post,
                            dataType: 'json',
                            success: function success(res) {
                                if (res.login && res.login == 1) {
                                    if (!res.error) {
                                        $('#' + id_tag).remove();
                                        LHM.common.notify(null, 'success', res.message);
                                    }
                                } else if (res.login && res.login == 2) {
                                    window.location = res.href;
                                }
                            },
                            error: function error(err) {
                                LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                            }
                        });
                    }, Cancel: function Cancel() {
                    }
                }
            });
        }, editTag: function editTag(id_tag, name) {
            var html = '<div class="form-group">';
            html += '       <label>Tên tag <span class="text-danger">*</span> : </label>';
            html += '    <input style="margin-bottom: 5px;" type="text" class="form-control" value="' + name + '" id="tag_name_edit" placeholder="Nhập tên tag">';
            html += '    <div class="invalid-feedback"></div>';
            html += '</div>';
            $.confirm({
                title: 'Sửa tag', content: html, buttons: {
                    OK: {
                        text: 'OK', btnClass: 'btn-blue btn-add-edit-tags-popup', action: function action() {
                            var _this = this;//reset msg
                            _this.$content.find('.invalid-feedback').hide();
                            var tag_name = _this.$content.find('#tag_name_edit').val();
                            $('.btn-add-edit-tags-popup').html('<i class="fas fa-spinner fa-spin"></i> OK');
                            $('.btn-add-edit-tags-popup').attr('disabled', true);
                            if (tag_name == '') {
                                $('.btn-add-edit-tags-popup').html('OK');
                                $('.btn-add-edit-tags-popup').removeAttr('disabled');
                                _this.$content.find('.invalid-feedback').html('Tên tag không được trống').show();
                            } else {
                                $.ajax({
                                    type: 'POST',
                                    url: base_url + '/sites/update_tag',
                                    data: {_token: $.cookie('_token'), tag_name: tag_name, id_tag: id_tag},
                                    dataType: 'json',
                                    success: function success(rs) {
                                        if (rs.login && rs.login == 1) {
                                            $('.btn-add-edit-tags-popup').html('OK');
                                            $('.btn-add-edit-tags-popup').removeAttr('disabled');
                                            if (rs.error) {
                                                for (var i in rs.msg) {
                                                    LHM.common.notify(null, 'warning', rs.msg[i]);
                                                }
                                            } else {
                                                LHM.common.notify(null, 'success', 'Sửa thành công');
                                                LHM.mnDashboard.init('setting_site_tag');
                                                _this.close();
                                            }
                                        } else if (rs.login && rs.login == 2) {
                                            window.location = rs.href;
                                        }
                                    }
                                });
                            }
                            return false;
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, addNewTag: function addNewTag() {
            var tag_name = $('#name_tag_sites').val();
            if (tag_name == '') {
                LHM.common.notify(null, 'warning', "Tên nhãn không được bỏ trống!</strong></div");
            } else {
                $.ajax({
                    type: 'POST',
                    url: base_url + '/sites/addNewTag',
                    data: {_token: $.cookie('_token'), tag_name: tag_name},
                    dataType: 'json',
                    success: function success(rs) {
                        if (rs.login && rs.login == 1) {
                            if (rs.error) {
                                for (var i in rs.msg) {
                                    LHM.common.notify(null, 'warning', rs.msg[i]);
                                }
                            } else {
                                LHM.common.notify(null, 'success', 'Thêm nhãn thành công');
                                var html_tag = '<span id="' + rs.id + '">' + tag_name + ' <a href="javascript:;" style="color:black;" onclick="LHM.sites.editTag(\'' + rs.id + '\',\'' + tag_name + '\');"><i class="fa fa-pencil"></i></a> <a href="javascript:;" style="color:black;" onclick="LHM.sites.removeTag(\'' + rs.id + '\');"><i class="fa fa-times"></i></a></span>';
                                $("#list_tag_in_site").append(html_tag);
                            }
                        } else if (rs.login && rs.login == 2) {
                            window.location = rs.href;
                        }
                    }
                });
            }
        }, getProfitRevenueCourse: function getProfitRevenueCourse() {
            var list_body = $('#list-data-revenue-course'), data = {
                time: $('#filter-date-revenue-course-profit').val(),
                course_name: $('#revenue_course_filter_report').val(),
                teacher_name: $('#revenue_teacher_filter_report').val()
            }, url = base_url + '/report_revenue/get_profit_revenue_course';
            $('.btn-export-revenue-course').attr('href', url + '?export=1&time=' + data.time + '&course_name=' + data.course_name);
            LHM.sites.tBodyRevenueProduct(url, data, list_body);
        }, getProfitRevenueCombo: function getProfitRevenueCombo() {
            var url = base_url + '/report_revenue/get_profit_revenue_combo', val_post = {
                time: $('#filter-date-revenue-combo-profit').val(),
                combo_name: $('#revenue_combo_filter_report').val()
            }, tBody = $('#list-data-revenue-combo');
            $('.btn-export-revenue-combo').attr('href', url + '?export=1&time=' + val_post.time + '&combo_name=' + val_post.combo_name);
            LHM.sites.tBodyRevenueProduct(url, val_post, tBody, 'COURSE_PACKAGE_ID');
        }, getProfitRevenueComboQuiz: function getProfitRevenueComboQuiz() {
            var url = base_url + '/report_revenue/get_profit_revenue_combo_quiz', val_post = {
                time: $('#filter-date-revenue-combo-quiz-profit').val(),
                combo_name: $('#revenue_combo_quiz_filter_report').val()
            }, tBody = $('#list-data-revenue-combo-quiz');
            $('.btn-export-revenue-combo-quiz').attr('href', "".concat(url, "?export=1&time=").concat(val_post.time, "&combo_name=").concat(val_post.combo_name));
            LHM.sites.tBodyRevenueProduct(url, val_post, tBody, 'COMBO_ID');
        }, tBodyRevenueProduct: function tBodyRevenueProduct(url, val_post, tBody) {
            var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'COURSE_ID';
            $.ajax({
                type: 'GET', url: url, data: val_post, dataType: 'json', beforeSend: function beforeSend() {
                    tBody.html('');
                }
            }).always(function (rs) {
                var notData = true, html = '', colspan = 3;
                if (rs.login && rs.login == 1) {
                    if (rs.data && rs.data.length != 0) {
                        notData = false;
                        $.each(rs.data, function (k, v) {
                            var teacher_html = '';
                            if (rs.isTeacher) {
                                teacher_html = "<td>".concat(v.teacher_name, "</td>");
                            }
                            html += "\n                                <tr>\n                                    <td>".concat(k + 1, "</td>\n                                    <td class=\"text-center\"><img src=\"").concat(v.cover, "\" width=\"60\" height=\"45\"/></td>\n                                    <td>").concat(v.name, "</td>").concat(teacher_html, "\n                                    <td>").concat(v.revenue.toLocaleString('en-US'), "  ").concat(rs.unit, "</td>\n                                    <td><a href=\"javascript:;\" class=\"list_order_revenue_month\" style=\"color: #007bff\" data-id=\"").concat(v._id['$id'], "\" data-type=\"").concat(type, "\" data-time=\"").concat(rs.time, "\">").concat(v.revenue_month.toLocaleString('en-US'), "</a> ").concat(rs.unit, "</td>\n                                </tr>\n                                ");
                        });
                        if (rs.isTeacher) {
                            colspan = 4;
                        }
                        html += "<tr><td colspan=\"".concat(colspan, "\" style=\"text-align:center;\"><strong>T\u1ED5ng</strong></td><td><strong>").concat(rs.sum_revenue.toLocaleString('en-US'), "  ").concat(rs.unit, "</strong></td><td><strong>").concat(rs.sum_revenue_month.toLocaleString('en-US'), "  ").concat(rs.unit, "</strong></td></tr>");
                    }
                } else if (rs.login && rs.login == 2) {
                    window.location = rs.href;
                }
                if (notData) {
                    html = '<tr><td colspan="5">Không có dữ liệu!</td></tr>';
                }
                tBody.html(html);
            });
        }, getProfitRevenueComboDocument: function getProfitRevenueComboDocument() {
            var url = base_url + '/report_revenue/get_profit_revenue_combo_document', val_post = {
                time: $('#filter-date-revenue-combo-document-profit').val(),
                combo_name: $('#revenue_combo_document_filter_report').val()
            }, tBody = $('#list-data-revenue-combo-document');
            $('.btn-export-revenue-combo-document').attr('href', url + '?export=1&time=' + val_post.time + '&combo_name=' + val_post.combo_name);
            LHM.sites.tBodyRevenueProduct(url, val_post, tBody, 'COMBO_ID');
        }, payment_history_affiliate: function payment_history_affiliate(page) {
            page = page ? page : 0;
            var time = $('#filter-date-withdrawl-aff').val();
            var min_balance = $('#filter-min-balance-aff').val();
            var url = base_url + '/sites/payment_history_affiliate';
            $('#list-history-payment').html('<tr><td colspan="8" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
            $.get(url, {
                sid: sid,// limit_record: page,
                time: time, min_balance: min_balance
            }, function (rs) {
                if (rs.login && rs.login == 1) {// LHM.common.pagination_site(rs.count_record,rs.limit,page, 'list-history-payment');
                    $('#list-history-payment').html('');
                    if (time != '') $('.filter_date_aff_pay').html(time.split('-')[1] + '/' + time.split('-')[0]);
                    window.list_uid = rs.data_list_user;
                    $('.btn-export-payment-affilate').attr('href', url + '?export=1&time=' + time + '&min_balance=' + min_balance);
                    if (rs.data) {
                        var payment_history = rs.data;
                        var html = '';
                        if (payment_history.length > 0) {
                            for (var i = 0; i < payment_history.length; i++) {
                                html += '<tr>';
                                html += ' <td>' + (i + 1) + '</td>';
                                html += ' <td><a style="color: #007bff;" target="_blank" href="site/detail_student/' + payment_history[i]['_id'] + '" class="btn-view-user-registed" data-id="' + payment_history[i]['_id'] + '">' + payment_history[i]['name'] + '</a></td>';
                                html += ' <td> ' + payment_history[i]['username'] + '</td>';
                                if (rs.unit == 'USD') {
                                    html += ' <td style="text-align: center;"> ' + payment_history[i]['commission_net'].toLocaleString('en-US') + rs.unit + '</td>';
                                    html += ' <td style="text-align: center;"> ' + payment_history[i]['commission_paid'].toLocaleString('en-US') + rs.unit + '</td>';
                                    html += ' <td style="text-align: center;"> ' + payment_history[i]['balance'].toLocaleString('en-US') + rs.unit + ' </td>';
                                } else {
                                    html += ' <td style="text-align: center;"> ' + Intl.NumberFormat().format(payment_history[i]['commission_net']) + rs.unit + '</td>';
                                    html += ' <td style="text-align: center;"> ' + Intl.NumberFormat().format(payment_history[i]['commission_paid']) + rs.unit + '</td>';
                                    html += ' <td style="text-align: center;"> ' + Intl.NumberFormat().format(payment_history[i]['balance']) + rs.unit + ' </td>';
                                }
                                html += ' <td style="text-align: center;"> ' + payment_history[i]['month_last_payment'] + ' </td>';
                                if (payment_history[i]['payment_month_last']) {
                                    if (rs.unit == 'USD') {
                                        html += ' <td style="text-align: center;"> ' + payment_history[i]['payment_month_last'].toLocaleString('en-US') + rs.unit + '</td>';
                                    } else {
                                        html += ' <td style="text-align: center;"> ' + Intl.NumberFormat().format(payment_history[i]['payment_month_last']) + rs.unit + '</td>';
                                    }
                                } else {
                                    html += ' <td style="text-align: center;"> - </td>';
                                }
                                html += '</tr>';
                            }
                            if (rs.data_total) {
                                html += '<tr>';
                                html += ' <td colspan="3" style="text-align: center;"><strong> Tổng cộng </strong></td>';
                                if (rs.unit == 'USD') {
                                    html += ' <td style="text-align: center;"> <strong>' + rs.data_total['total_commission_net'].toLocaleString('en-US') + rs.unit + ' </strong></td>';
                                    html += ' <td style="text-align: center;"> <strong>' + rs.data_total['total_commission_paid'].toLocaleString('en-US') + rs.unit + '  </strong></td>';
                                    html += ' <td style="text-align: center;"> <strong> ' + rs.data_total['total_balance'].toLocaleString('en-US') + rs.unit + ' </strong></td>';
                                    html += ' <td></td>';
                                    html += ' <td style="text-align: center;"> <strong>' + rs.data_total['total_payment_month_last'] + rs.unit + '</strong></td>';
                                } else {
                                    html += ' <td style="text-align: center;"> <strong>' + Intl.NumberFormat().format(rs.data_total['total_commission_net']) + ' VND </strong></td>';
                                    html += ' <td style="text-align: center;"> <strong>' + Intl.NumberFormat().format(rs.data_total['total_commission_paid']) + ' VND </strong></td>';
                                    html += ' <td style="text-align: center;"> <strong> ' + Intl.NumberFormat().format(rs.data_total['total_balance']) + ' VND </strong></td>';
                                    html += ' <td></td>';
                                    html += ' <td style="text-align: center;"> <strong>' + Intl.NumberFormat().format(rs.data_total['total_payment_month_last']) + ' VND </strong></td>';
                                }
                                html += '</tr>';
                            }
                            $('#list-history-payment').html(html);
                        } else {
                            $('#list-history-payment').html('<tr><td colspan="8">Không có dữ liệu</td></tr>');
                        }
                    }
                } else if (rs.login && rs.login == 2) {
                    window.location = rs.href;
                }
            });
        }, get_current_balance: function get_current_balance(page) {
            page = page ? page : 0;
            var val_post = {limit_record: page, fillter: $('#name_email_aff_site').val()};
            $.ajax({
                type: 'GET',
                url: base_url + '/sites/get_current_balance_aff',
                data: val_post,
                dataType: 'json',
                beforeSend: function beforeSend() {
                    $('#list-current-balance').html('<tr><td colspan="9" style="text-align:center;"><i class="fas fa-spinner fa-spin"></i> Loading...</td></tr>');
                },
                success: function success(rs) {
                    if (rs.login && rs.login == 1) {
                        LHM.common.pagination_site(rs.count_record, rs.limit, page, 'list-current-balance');
                        document.getElementById('list-current-balance').innerHTML = '';
                        if (rs && rs.data) {
                            var check_setting_aff_level = rs.check_setting_aff_level;
                            var check_set_aff_manager = rs.check_set_aff_manager;
                            var users = rs.data;
                            if (users.length > 0) {
                                for (var i = 0; i < users.length; i++) {
                                    var html = ' <tr>';
                                    html += '     <td>' + (rs.limit * page + i + 1) + '</td>';
                                    html += '     <td><a style="color: #007bff;" target="_blank" href="site/detail_student/' + users[i]['_id'] + '" class="btn-view-user-registed" data-id="' + users[i]['_id'] + '">' + users[i]['fullname'] + '</a></td>';
                                    html += '     <td>' + users[i]['aff_id'] + '</td>';
                                    html += '     <td>' + users[i]['count_users'] + '</td>';// html += '     <td>' + Intl.NumberFormat().format(users[i]['bonus']) + ' VND</td>'
                                    if (rs.unit == 'USD') {
                                        html += '     <td>' + users[i]['commission_net'].toLocaleString('en-US') + ' ' + rs.unit + '</td>';
                                        html += '     <td>' + users[i]['commission_paid'].toLocaleString('en-US') + ' ' + rs.unit + '</td>';
                                        html += '     <td>' + users[i]['balance'].toLocaleString('en-US') + ' ' + rs.unit + '</td>';
                                    } else {
                                        html += '     <td>' + users[i]['commission_net'].toLocaleString('en-US') + ' ' + rs.unit + '</td>';
                                        html += '     <td>' + users[i]['commission_paid'].toLocaleString('en-US') + ' ' + rs.unit + '</td>';
                                        html += '     <td>' + users[i]['balance'].toLocaleString('en-US') + ' ' + rs.unit + '</td>';
                                    }
                                    if (check_setting_aff_level) {
                                        var level = users[i]['aff_level'] ? ' Cấp ' + users[i]['aff_level'] : 'Mặc định';
                                        html += '     <td style="text-align:center;">' + level + ' <a href="javascript:;" onclick="LHM.sites.editAffLevel(\'' + users[i]['_id'] + '\',\'' + users[i]['aff_level'] + '\')" title="Sửa level aff"><i class="fas fa-edit"></i></a></td>';
                                    }
                                    if (check_set_aff_manager) {
                                        html += '<td style="text-align:center;"><input type="checkbox" name="change_aff_manager" ' + users[i]['aff_manager'] + ' class="change_aff_manager" href="javascript:;" onclick="LHM.sites.changeAffManager(\'' + users[i]['_id'] + '\')"></td>';
                                    }
                                    html += ' </tr>';
                                    document.getElementById('list-current-balance').innerHTML += html;
                                }
                            } else {
                                document.getElementById('list-current-balance').innerHTML = '<tr><td colspan="9"><span>Không có dữ liệu</span></td></tr>';
                            }
                        }
                    } else if (rs.login && rs.login == 2) {
                        window.location = rs.href;
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, get_info_affiliate_site: function get_info_affiliate_site(page) {
            LHM.common.getListTable('list-data-affiliate-site', '/affiliate/selectAllBySite', function (rs) {
                $('.btn-export-info-affiliate-site').attr('href', base_url + '/affiliate/selectAllBySite?' + $('#list-data-affiliate-site_filter').serialize() + '&export=1');
                if (rs.items && rs.items.length > 0) {
                    rs.items.forEach(function (value, key) {
                        var buttonViewAff = '';
                        if (rs.view_aff) {
                            buttonViewAff = "<a href=\"javascript:;\" title=\"Chi ti\u1EBFt Affiliate\" onclick=\"LHM.affiliate.viewAff('".concat(value._id, "')\" ><i class=\"fas fa-eye\"></i></a>");
                        }
                        document.getElementById('list-data-affiliate-site').innerHTML += "\n                                <tr id=\"".concat(value._id, "\">\n                                    <td class=\"text-center\">").concat(rs.limit * rs.page + key + 1, "</td>\n                                    <td>").concat(value.fullname, "</td>\n                                    <td>").concat(value.aff_id, "</td>\n                                    <td>").concat(value.email, "</td>\n                                    <td class=\"text-center\">\n                                        <a href=\"javascript:;\" onclick=\"LHM.sites.editAffiliateStatus('").concat(value._id, "','").concat(value.aff_status, "')\" >").concat(value.aff_status_text, " <i class=\"fas fa-edit\"></i></a>\n                                        ").concat(buttonViewAff, "\n                                    </td>\n                                </tr>\n                            ");
                    });
                } else document.getElementById('list-data-affiliate-site').innerHTML = '<tr><td colspan="5"><span>Không có dữ liệu</span></td></tr>';
            });
        }, changeAffManager: function changeAffManager(id) {
            $.ajax({
                type: 'POST',
                url: base_url + '/sites/changeAffManager',
                data: {_token: $.cookie('_token'), id: id},
                dataType: 'json',
                success: function success(res) {
                    if (res.status) {
                        LHM.common.notify(null, 'success', res.message);
                    } else {
                        LHM.common.notify(null, 'danger', res.message);
                    }
                },
                error: function error(err) {
                    LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                }
            });
        }, editAffiliateStatus: function editAffiliateStatus(id) {
            var aff_status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            var html = '<form>' + '<div class="form-group">' + '<select name="aff_status" class="form-control input-step select_aff_status">' + '<option value="0">Chờ duyệt</option>' + '<option value="1">Duyệt</option>';
            html += '</select>' + '</div>' + '</form>';
            setTimeout(function () {
                $('.select_aff_status').val(aff_status);
                $('.select_aff_status').trigger('change');
            }, 200);
            $.confirm({
                title: 'Chỉnh sửa trạng thái affiliate',
                columnClass: 'col-md-6',
                content: html,
                type: 'blue',
                scrollToPreviousElement: false,
                scrollToPreviousElementAnimate: false,
                buttons: {
                    formSubmit: {
                        text: 'Lưu', btnClass: 'btn-blue', action: function action() {
                            $.ajax({
                                type: 'POST',
                                url: base_url + '/sites/changeAffStatuss',
                                data: {_token: $.cookie('_token'), aff_status: $('.select_aff_status').val(), id: id},
                                dataType: 'json',
                                success: function success(data) {
                                    if (data.login && data.login == 1) {
                                        if (data.status) {
                                            LHM.common.notify(null, 'success', data.message);
                                            LHM.sites.get_info_affiliate_site();
                                            _this.close();
                                        } else {
                                            LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                                        }
                                    } else if (data.login && data.login == 2) {
                                        window.location = data.href;
                                    }
                                }
                            });
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }, editAffLevel: function editAffLevel(id) {
            var level = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            $.confirm({
                title: 'Cài đặt cấp AFF',
                columnClass: 'col-md-4',
                content: function content() {
                    var self = this;
                    return $.ajax({
                        url: '/sites/get_list_level_aff',
                        dataType: 'json',
                        method: 'get'
                    }).done(function (response) {
                        if (response.login && response.login == 1) {
                            var html = '<form>' + '<div class="form-group">' + '<select name="aff_level" class="form-control input-step select_aff_level">' + '<option value="0">--Mặc định--</option>';
                            $.each(response.data, function (k, v) {
                                html += '<option value="' + v + '">Cấp ' + v + '</option>';
                            });
                            html += '</select>' + '</div>' + '</form>';
                            self.setContentAppend(html);
                            setTimeout(function () {
                                $('.select_aff_level').val(level);
                                $('.select_aff_level').trigger('change');
                            }, 200);
                        } else if (response.login && response.login == 2) {
                            window.location = response.href;
                        }
                    }).fail(function () {
                    }).always(function () {
                    });
                },
                type: 'blue',
                scrollToPreviousElement: false,
                scrollToPreviousElementAnimate: false,
                buttons: {
                    formSubmit: {
                        text: 'Lưu', btnClass: 'btn-blue', action: function action() {
                            var that = this;
                            $.ajax({
                                type: 'GET',
                                url: base_url + '/sites/editAffLevel',
                                data: {level: $('.select_aff_level').val(), id: id},
                                dataType: 'json',
                                success: function success(data) {
                                    if (data.login && data.login == 1) {
                                        if (!data.error) {
                                            LHM.common.notify(null, 'success', 'Sửa level aff thành công!');
                                            LHM.sites.get_current_balance();
                                            that.close();
                                        } else {
                                            LHM.common.notify(null, 'danger', 'có lỗi xảy ra');
                                        }
                                    } else if (data.login && data.login == 2) {
                                        window.location = data.href;
                                    }
                                }
                            });
                        }
                    }, cancel: {text: 'Đóng'}
                }
            });
        }
    }
};

function __(string, number) {
    if ($.cookie('lang') && $.cookie('lang') === 'vi') return string;
    if (number) {
        number = parseInt(number);
        if (!isNaN(number) && number > 1) {
            string = string.concat('(s)');
        }
    }
    if (localStorage.getItem('data_en') && textLanguage !== false) string = textLanguage[string] ? textLanguage[string] : string;
    return string;
}